=comment Package: Gtk4, C-Source: shortcutssection
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::ShortcutsSection
=head1 Description

A B<Gnome::Gtk4::ShortcutsSection> collects all the keyboard shortcuts and gestures
for a major application mode.

If your application needs multiple sections, you should give each
section a unique I<section-name> and
a I<title> that can be shown in the
section selector of the B<Gnome::Gtk4::ShortcutsWindow>.

The I<max-height> property can be used
to influence how the groups in the section are distributed over pages
and columns.

This widget is only meant to be used with B<Gnome::Gtk4::ShortcutsWindow>.

The recommended way to construct a B<Gnome::Gtk4::ShortcutsSection> is with
B<Gnome::Gtk4::Builder>, by using the `<child>` tag to populate a
B<Gnome::Gtk4::ShortcutsSection> with one or more B<Gnome::Gtk4::ShortcutsGroup>
instances, which in turn contain one or more B<Gnome::Gtk4::ShortcutsShortcut>
objects.

If you need to add a group programmatically, use
C<.add-group()>.

=begin comment

=head2 Uml Diagram
![](plantuml/â€¦.svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::ShortcutsSection

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 add-group

Adds a group to the shortcuts section.

This is the programmatic equivalent to using B<Gnome::Gtk4::Builder> and a
`<child>` tag to add the child.

Adding children with the B<Gnome::Gtk4::Box> API is not appropriate, as
B<Gnome::Gtk4::ShortcutsSection> manages its children internally.

=begin code
method add-group ( N-Object() $group )
=end code

=item $group; the B<Gnome::Gtk4::ShortcutsGroup> to add.

=begin comment

=head2 Example
# Example for signal change-current-page

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 change-current-page

=begin code
method handler (
  gint $object,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::ShortcutsSection :$_widget,
  *C<user>-options
  --> gboolean
)
=end code

=item $object; .
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::ShortcutsSection> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

Return value; 

=end pod

