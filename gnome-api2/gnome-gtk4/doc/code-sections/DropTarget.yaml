---
"____EXAMPLE____000": "=begin comment\n\n=head2 Uml Diagram\n![](plantuml/â€¦.svg)\n\n=end comment\n"
"____EXAMPLE____001": "=begin comment\n\n=head2 Example\n# Example use of module Gnome::Gtk4::DropTarget\n\n=end comment\n"
"____EXAMPLE____002": "=begin comment\n\n=head2 Example\n# Example for new-droptarget\n\n=end comment\n"
"____EXAMPLE____003": "=begin comment\n\n=head2 Example\n# Example for get-actions\n\n=end comment\n"
"____EXAMPLE____004": "=begin comment\n\n=head2 Example\n# Example for get-current-drop\n\n=end comment\n"
"____EXAMPLE____005": "=begin comment\n\n=head2 Example\n# Example for get-drop\n\n=end comment\n"
"____EXAMPLE____006": "=begin comment\n\n=head2 Example\n# Example for get-formats\n\n=end comment\n"
"____EXAMPLE____007": "=begin comment\n\n=head2 Example\n# Example for get-gtypes\n\n=end comment\n"
"____EXAMPLE____008": "=begin comment\n\n=head2 Example\n# Example for get-preload\n\n=end comment\n"
"____EXAMPLE____009": "=begin comment\n\n=head2 Example\n# Example for get-value\n\n=end comment\n"
"____EXAMPLE____010": "=begin comment\n\n=head2 Example\n# Example for reject\n\n=end comment\n"
"____EXAMPLE____011": "=begin comment\n\n=head2 Example\n# Example for set-actions\n\n=end comment\n"
"____EXAMPLE____012": "=begin comment\n\n=head2 Example\n# Example for set-gtypes\n\n=end comment\n"
"____EXAMPLE____013": "=begin comment\n\n=head2 Example\n# Example for set-preload\n\n=end comment\n"
"____EXAMPLE____014": "=begin comment\n\n=head2 Example\n# Example for signal accept\n\n=end comment\n"
"____EXAMPLE____015": "=begin comment\n\n=head2 Example\n# Example for signal drop\n\n=end comment\n"
"____EXAMPLE____016": "=begin comment\n\n=head2 Example\n# Example for signal enter\n\n=end comment\n"
"____EXAMPLE____017": "=begin comment\n\n=head2 Example\n# Example for signal leave\n\n=end comment\n"
"____EXAMPLE____018": "=begin comment\n\n=head2 Example\n# Example for signal motion\n\n=end comment\n"
"____EXAMPLE____019": "=begin comment\nstatic gboolean\non_drop (GtkDropTarget *target,\n         const GValue  *value,\n         double         x,\n         double         y,\n         gpointer       data)\n{\n  MyWidget *self = data;\n\n  // Call the appropriate setter depending on the type of data\n  // that we received\n  if (G_VALUE_HOLDS (value, G_TYPE_FILE))\n    my_widget_set_file (self, g_value_get_object (value));\n  else if (G_VALUE_HOLDS (value, GDK_TYPE_PIXBUF))\n    my_widget_set_pixbuf (self, g_value_get_object (value));\n  else\n    return FALSE;\n\n  return TRUE;\n}\n\nstatic void\nmy_widget_init (MyWidget *self)\n{\n  GtkDropTarget *target =\n    gtk_drop_target_new (G_TYPE_INVALID, GDK_ACTION_COPY);\n\n  // This widget accepts two types of drop types: GFile objects\n  // and GdkPixbuf objects\n  gtk_drop_target_set_gtypes (target, (GType [2]) {\n    G_TYPE_FILE,\n    GDK_TYPE_PIXBUF,\n  }, 2);\n\n  g_signal_connect (target, \"drop\", G_CALLBACK (on_drop), self);\n  gtk_widget_add_controller (GTK_WIDGET (self), GTK_EVENT_CONTROLLER (target));\n}\n\n=end comment\n"
...