---
"____EXAMPLE____000": "=begin comment\n\n=head2 Uml Diagram\n![](plantuml/â€¦.svg)\n\n=end comment\n"
"____EXAMPLE____001": "=begin comment\n\n=head2 Example\n# Example use of module Gnome::Gtk4::CellArea\n\n=end comment\n"
"____EXAMPLE____002": "=begin comment\n\n=head2 Example\n# Example for activate\n\n=end comment\n"
"____EXAMPLE____003": "=begin comment\n\n=head2 Example\n# Example for activate-cell\n\n=end comment\n"
"____EXAMPLE____004": "=begin comment\n\n=head2 Example\n# Example for add\n\n=end comment\n"
"____EXAMPLE____005": "=begin comment\n\n=head2 Example\n# Example for add-focus-sibling\n\n=end comment\n"
"____EXAMPLE____006": "=begin comment\n\n=head2 Example\n# Example for add-with-properties\n\n=end comment\n"
"____EXAMPLE____007": "=begin comment\n\n=head2 Example\n# Example for apply-attributes\n\n=end comment\n"
"____EXAMPLE____008": "=begin comment\n\n=head2 Example\n# Example for attribute-connect\n\n=end comment\n"
"____EXAMPLE____009": "=begin comment\n\n=head2 Example\n# Example for attribute-disconnect\n\n=end comment\n"
"____EXAMPLE____010": "=begin comment\n\n=head2 Example\n# Example for attribute-get-column\n\n=end comment\n"
"____EXAMPLE____011": "=begin comment\n\n=head2 Example\n# Example for cell-get\n\n=end comment\n"
"____EXAMPLE____012": "=begin comment\n\n=head2 Example\n# Example for cell-get-property\n\n=end comment\n"
"____EXAMPLE____013": "=begin comment\n\n=head2 Example\n# Example for cell-get-valist\n\n=end comment\n"
"____EXAMPLE____014": "=begin comment\n\n=head2 Example\n# Example for cell-set\n\n=end comment\n"
"____EXAMPLE____015": "=begin comment\n\n=head2 Example\n# Example for cell-set-property\n\n=end comment\n"
"____EXAMPLE____016": "=begin comment\n\n=head2 Example\n# Example for cell-set-valist\n\n=end comment\n"
"____EXAMPLE____017": "=begin comment\n\n=head2 Example\n# Example for copy-context\n\n=end comment\n"
"____EXAMPLE____018": "=begin comment\n\n=head2 Example\n# Example for create-context\n\n=end comment\n"
"____EXAMPLE____019": "=begin comment\n\n=head2 Example\n# Example for event\n\n=end comment\n"
"____EXAMPLE____020": "=begin comment\n\n=head2 Example\n# Example for focus\n\n=end comment\n"
"____EXAMPLE____021": "=begin comment\n\n=head2 Example\n# Example for foreach\n\n=end comment\n"
"____EXAMPLE____022": "=begin comment\n\n=head2 Example\n# Example for foreach-alloc\n\n=end comment\n"
"____EXAMPLE____023": "=begin comment\n\n=head2 Example\n# Example for get-cell-allocation\n\n=end comment\n"
"____EXAMPLE____024": "=begin comment\n\n=head2 Example\n# Example for get-cell-at-position\n\n=end comment\n"
"____EXAMPLE____025": "=begin comment\n\n=head2 Example\n# Example for get-current-path-string\n\n=end comment\n"
"____EXAMPLE____026": "=begin comment\n\n=head2 Example\n# Example for get-edit-widget\n\n=end comment\n"
"____EXAMPLE____027": "=begin comment\n\n=head2 Example\n# Example for get-edited-cell\n\n=end comment\n"
"____EXAMPLE____028": "=begin comment\n\n=head2 Example\n# Example for get-focus-cell\n\n=end comment\n"
"____EXAMPLE____029": "=begin comment\n\n=head2 Example\n# Example for get-focus-from-sibling\n\n=end comment\n"
"____EXAMPLE____030": "=begin comment\n\n=head2 Example\n# Example for get-focus-siblings\n\n=end comment\n"
"____EXAMPLE____031": "=begin comment\n\n=head2 Example\n# Example for get-preferred-height\n\n=end comment\n"
"____EXAMPLE____032": "=begin comment\n\n=head2 Example\n# Example for get-preferred-height-for-width\n\n=end comment\n"
"____EXAMPLE____033": "=begin comment\n\n=head2 Example\n# Example for get-preferred-width\n\n=end comment\n"
"____EXAMPLE____034": "=begin comment\n\n=head2 Example\n# Example for get-preferred-width-for-height\n\n=end comment\n"
"____EXAMPLE____035": "=begin comment\n\n=head2 Example\n# Example for get-request-mode\n\n=end comment\n"
"____EXAMPLE____036": "=begin comment\n\n=head2 Example\n# Example for has-renderer\n\n=end comment\n"
"____EXAMPLE____037": "=begin comment\n\n=head2 Example\n# Example for inner-cell-area\n\n=end comment\n"
"____EXAMPLE____038": "=begin comment\n\n=head2 Example\n# Example for is-activatable\n\n=end comment\n"
"____EXAMPLE____039": "=begin comment\n\n=head2 Example\n# Example for is-focus-sibling\n\n=end comment\n"
"____EXAMPLE____040": "=begin comment\n\n=head2 Example\n# Example for remove\n\n=end comment\n"
"____EXAMPLE____041": "=begin comment\n\n=head2 Example\n# Example for remove-focus-sibling\n\n=end comment\n"
"____EXAMPLE____042": "=begin comment\n\n=head2 Example\n# Example for request-renderer\n\n=end comment\n"
"____EXAMPLE____043": "=begin comment\n\n=head2 Example\n# Example for set-focus-cell\n\n=end comment\n"
"____EXAMPLE____044": "=begin comment\n\n=head2 Example\n# Example for snapshot\n\n=end comment\n"
"____EXAMPLE____045": "=begin comment\n\n=head2 Example\n# Example for stop-editing\n\n=end comment\n"
"____EXAMPLE____046": "=begin comment\n\n=head2 Example\n# Example for signal add-editable\n\n=end comment\n"
"____EXAMPLE____047": "=begin comment\n\n=head2 Example\n# Example for signal apply-attributes\n\n=end comment\n"
"____EXAMPLE____048": "=begin comment\n\n=head2 Example\n# Example for signal focus-changed\n\n=end comment\n"
"____EXAMPLE____049": "=begin comment\n\n=head2 Example\n# Example for signal remove-editable\n\n=end comment\n"
"____EXAMPLE____050": "=begin comment\nGtkTreeIter iter;\nint minimum_width;\nint natural_width;\n\nvalid = gtk_tree_model_get_iter_first (model, &iter);\nwhile (valid)\n  {\n    gtk_cell_area_apply_attributes (area, model, &iter, FALSE, FALSE);\n    gtk_cell_area_get_preferred_width (area, context, widget, NULL, NULL);\n\n    valid = gtk_tree_model_iter_next (model, &iter);\n  }\n\ngtk_cell_area_context_get_preferred_width (context, &minimum_width, &natural_width);\n\n=end comment\n"
"____EXAMPLE____051": "=begin comment\nstatic void\nfoo_get_preferred_width (GtkWidget *widget,\n                         int       *minimum_size,\n                         int       *natural_size)\n{\n  Foo *self = FOO (widget);\n  FooPrivate *priv = foo_get_instance_private (self);\n\n  foo_ensure_at_least_one_handfull_of_rows_have_been_requested (self);\n\n  gtk_cell_area_context_get_preferred_width (priv->context, minimum_size, natural_size);\n}\n\n=end comment\n"
"____EXAMPLE____052": "=begin comment\nGtkTreeIter iter;\nint minimum_height;\nint natural_height;\nint full_minimum_height = 0;\nint full_natural_height = 0;\n\nvalid = gtk_tree_model_get_iter_first (model, &iter);\nwhile (valid)\n  {\n    gtk_cell_area_apply_attributes (area, model, &iter, FALSE, FALSE);\n    gtk_cell_area_get_preferred_height_for_width (area, context, widget,\n                                                  width, &minimum_height, &natural_height);\n\n    if (width_is_for_allocation)\n       cache_row_height (&iter, minimum_height, natural_height);\n\n    full_minimum_height += minimum_height;\n    full_natural_height += natural_height;\n\n    valid = gtk_tree_model_iter_next (model, &iter);\n  }\n\n=end comment\n"
"____EXAMPLE____053": "=begin comment\nGtkAllocation allocation;\nGdkRectangle cell_area = { 0, };\nGtkTreeIter iter;\nint minimum_width;\nint natural_width;\n\ngtk_widget_get_allocation (widget, &allocation);\ncell_area.width = allocation.width;\n\nvalid = gtk_tree_model_get_iter_first (model, &iter);\nwhile (valid)\n  {\n    cell_area.height = get_cached_height_for_row (&iter);\n\n    gtk_cell_area_apply_attributes (area, model, &iter, FALSE, FALSE);\n    gtk_cell_area_render (area, context, widget, cr,\n                          &cell_area, &cell_area, state_flags, FALSE);\n\n    cell_area.y += cell_area.height;\n\n    valid = gtk_tree_model_iter_next (model, &iter);\n  }\n\n=end comment\n"
"____EXAMPLE____054": "=begin comment\nstatic gboolean\nfoo_focus (GtkWidget       *widget,\n           GtkDirectionType direction)\n{\n  Foo *self = FOO (widget);\n  FooPrivate *priv = foo_get_instance_private (self);\n  int focus_row = priv->focus_row;\n  gboolean have_focus = FALSE;\n\n  if (!gtk_widget_has_focus (widget))\n    gtk_widget_grab_focus (widget);\n\n  valid = gtk_tree_model_iter_nth_child (priv->model, &iter, NULL, priv->focus_row);\n  while (valid)\n    {\n      gtk_cell_area_apply_attributes (priv->area, priv->model, &iter, FALSE, FALSE);\n\n      if (gtk_cell_area_focus (priv->area, direction))\n        {\n           priv->focus_row = focus_row;\n           have_focus = TRUE;\n           break;\n        }\n      else\n        {\n          if (direction == GTK_DIR_RIGHT ||\n              direction == GTK_DIR_LEFT)\n            break;\n          else if (direction == GTK_DIR_UP ||\n                   direction == GTK_DIR_TAB_BACKWARD)\n           {\n              if (focus_row == 0)\n                break;\n              else\n               {\n                  focus_row--;\n                  valid = gtk_tree_model_iter_nth_child (priv->model, &iter, NULL, focus_row);\n               }\n            }\n          else\n            {\n              if (focus_row == last_row)\n                break;\n              else\n                {\n                  focus_row++;\n                  valid = gtk_tree_model_iter_next (priv->model, &iter);\n                }\n            }\n        }\n    }\n    return have_focus;\n}\n\n=end comment\n"
...