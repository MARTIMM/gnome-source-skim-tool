 use v6.d;

 =begin pod
 =head2 Project Description
 =item B<Distribution:> Gnome::Gtk4
 =item B<Project description:> Modules for package Gnome::Gtk4:api<2>. The language binding to GNOME’s user interface toolkit version 4
 =item B<Project version:> 0.1.9
 =item B<Rakudo version:> 6.d, 2023.10.67.g.688.b.625.ac
 =item B<Author:> Marcel Timmerman
 =end pod


#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod

![](images/alternativetrigger.png)

=head1 Description

A I<GtkShortcutTrigger> that combines two triggers.

The B<Gnome::Gtk4::AlternativeTrigger> triggers when either of two trigger.

This can be cascaded to combine more than two triggers.
=begin comment
=head2 Uml Diagram
![](plantuml/….svg)
=end comment

=begin comment
=head2 Example
  … text …
  … example code …
=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object :$native-object! )


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-alternativetrigger

Creates a I<GtkShortcutTrigger> that will trigger whenever either of the two given triggers gets triggered.

Note that nesting is allowed, so if you want more than two alternative, create a new alternative trigger for each option.

=begin code
method new-alternativetrigger ( N-Object() $first, N-Object() $second --> Gnome::Gtk4::AlternativeTrigger )
=end code

=item $first; (transfer ownership: full) The first trigger that may trigger.
=item $second; (transfer ownership: full) The second trigger that may trigger.

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-first

Gets the first of the two alternative triggers that may trigger C<$self>.

C<.get-second()> will return the other one.

=begin code
method get-first (--> N-Object )
=end code


Return value; the first alternative trigger. 


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-second

Gets the second of the two alternative triggers that may trigger C<$self>.

C<.get-first()> will return the other one.

=begin code
method get-second (--> N-Object )
=end code


Return value; the second alternative trigger. 


=end pod

