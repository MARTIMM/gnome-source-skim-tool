=comment Package: Gtk4, C-Source: shortcuttrigger
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::ShortcutTrigger
=head1 Description

B<Gnome::Gtk4::ShortcutTrigger> tracks how a B<Gnome::Gtk4::Shortcut> should be activated.

To find out if a B<Gnome::Gtk4::ShortcutTrigger> triggers, you can call
C<.trigger()>] on a B<Gnome::Gdk4::Event>.

B<GtkShortcutTriggers> contain functions that allow easy presentation
to end users as well as being printed for debugging.

All B<GtkShortcutTriggers> are immutable, you can only specify their
properties during construction. If you want to change a trigger, you
have to replace it with a new one.

=head2 Uml Diagram
=for image :src<asset_files/images/plantuml/ShortcutTrigger.png> :width<70%> :class<inline>

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::ShortcutTrigger

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 parse-string

Tries to parse the given string into a trigger.

On success, the parsed trigger is returned.
When parsing failed, undefined is returned.

The accepted strings are:

=item B<never>, for B<Gnome::Gtk4::NeverTrigger>
=item a string parsed by gtk_accelerator_parse(), for a B<Gnome::Gtk4::KeyvalTrigger>, e.g. `<Control>C`
=item underscore, followed by a single character, for B<Gnome::Gtk4::MnemonicTrigger>, e.g. B<_l>
=item two valid trigger strings, separated by a `|` character, for a
    B<Gnome::Gtk4::AlternativeTrigger>: `<Control>q|<Control>w`

Note that you will have to escape the `<` and `>` characters when specifying
triggers in XML files, such as GtkBuilder ui files. Use `&lt;` instead of
`<` and `&gt;` instead of `>`.

=begin code
method parse-string ( Str $string --> Gnome::Gtk4::ShortcutTrigger )
=end code

=item $string; the string to parse.

=begin comment

=head2 Example
# Example for parse-string

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 compare

The types of C<$trigger1> and C<$trigger2> are B<gconstpointer> only to allow
use of this function as a B<Gnome::Glib::T-types>.

They must each be a B<Gnome::Gtk4::ShortcutTrigger>.

=begin code
method compare ( gpointer $trigger2 --> Int )
=end code

=item $trigger2; a B<Gnome::Gtk4::ShortcutTrigger>.

Return value; An integer less than, equal to, or greater than zero if
  C<$trigger1> is found, respectively, to be less than, to match,
  or be greater than C<$trigger2>.. 

=begin comment

=head2 Example
# Example for compare

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 equal

Checks if C<$trigger1> and C<$trigger2> trigger under the same conditions.

The types of C<$one> and C<$two> are B<gconstpointer> only to allow use of this
function with B<Gnome::Glib::N-HashTable>. They must each be a B<Gnome::Gtk4::ShortcutTrigger>.

=begin code
method equal ( gpointer $trigger2 --> Bool )
=end code

=item $trigger2; a B<Gnome::Gtk4::ShortcutTrigger>.

Return value; C<True> if C<$trigger1> and C<$trigger2> are equal. 

=begin comment

=head2 Example
# Example for equal

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 hash

Generates a hash value for a B<Gnome::Gtk4::ShortcutTrigger>.

The output of this function is guaranteed to be the same for a given
value only per-process. It may change between different processor
architectures or even different versions of GTK. Do not use this
function as a basis for building protocols or file formats.

The types of C<$trigger> is B<gconstpointer> only to allow use of this
function with B<Gnome::Glib::N-HashTable>. They must each be a B<Gnome::Gtk4::ShortcutTrigger>.

=begin code
method hash (--> UInt )
=end code

Return value; a hash value corresponding to C<$trigger>. 

=begin comment

=head2 Example
# Example for hash

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 print

Prints the given trigger into a string for the developer.
This is meant for debugging and logging.

The form of the representation may change at any time
and is not guaranteed to stay identical.

=begin code
method print ( N-Object $string )
=end code

=item $string; a B<Gnome::Glib::N-String> to print into

=begin comment

=head2 Example
# Example for print

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 print-label

Prints the given trigger into a string.

This function is returning a translated string for presentation
to end users for example in menu items or in help texts.

The C<$display> in use may influence the resulting string in
various forms, such as resolving hardware keycodes or by
causing display-specific modifier names.

The form of the representation may change at any time and is
not guaranteed to stay identical.

=begin code
method print-label ( N-Object() $display, N-Object $string --> Bool )
=end code

=item $display; B<Gnome::Gdk4::Display> to print for.
=item $string; a B<Gnome::Glib::N-String> to print into

Return value; C<True> if something was printed or C<False> if the
  trigger did not have a textual representation suitable
  for end users.. 

=begin comment

=head2 Example
# Example for print-label

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 to-label

Gets textual representation for the given trigger.

This function is returning a translated string for
presentation to end users for example in menu items
or in help texts.

The C<$display> in use may influence the resulting string in
various forms, such as resolving hardware keycodes or by
causing display-specific modifier names.

The form of the representation may change at any time and is
not guaranteed to stay identical.

=begin code
method to-label ( N-Object() $display --> Str )
=end code

=item $display; B<Gnome::Gdk4::Display> to print for.

Return value; a new string. 

=begin comment

=head2 Example
# Example for to-label

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 to-string

Prints the given trigger into a human-readable string.

This is a small wrapper around C<.print()>]
to help when debugging.

=begin code
method to-string (--> Str )
=end code

Return value; a new string. 

=begin comment

=head2 Example
# Example for to-string

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 trigger
This function is not yet available

Checks if the given C<$event> triggers C<$self>.

=begin code
method trigger ( N-Object() $event, Bool() $enable-mnemonics --> GdkKeyMatch  )
=end code

=item $event; the event to check.
=item $enable-mnemonics; C<True> if mnemonics should trigger. Usually the
  value of this property is determined by checking that the passed
  in C<$event> is a Key event and has the right modifiers set..

Return value; Whether the event triggered the shortcut. 

=begin comment

=head2 Example
# Example for trigger

=end comment

=end pod

