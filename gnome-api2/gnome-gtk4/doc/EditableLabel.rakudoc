=comment Package: Gtk4, C-Source: editablelabel
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::EditableLabel
=head1 Description

A B<Gnome::Gtk4::EditableLabel> is a label that allows users to
edit the text by switching to an “edit mode”.

=for image :src<asset_files/images/editable-label.png> :width<30%> :class<inline>

B<Gnome::Gtk4::EditableLabel> does not have API of its own, but it
implements the B<Gnome::Gtk4::R-Editable> interface.

The default bindings for activating the edit mode is
to click or press the Enter key. The default bindings
for leaving the edit mode are the Enter key (to save
the results) or the Escape key (to cancel the editing).

=head2 CSS nodes

=begin comment
editablelabel[.editing]
╰── stack
    ├── label
    ╰── text

=end comment

B<Gnome::Gtk4::EditableLabel> has a main node with the name editablelabel.
When the entry is in editing mode, it gets the .editing style
class.

For all the subnodes added to the text node in various situations,
see B<Gnome::Gtk4::Text>.

=head2 Uml Diagram
=for image :src<asset_files/images/plantuml/EditableLabel.png> :width<70%> :class<inline>

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::EditableLabel

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-editablelabel

Creates a new B<Gnome::Gtk4::EditableLabel> widget.

=begin code
method new-editablelabel ( Str $str --> Gnome::Gtk4::EditableLabel )
=end code

=item $str; the text for the label.

=begin comment

=head2 Example
# Example for new-editablelabel

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-editing

Returns whether the label is currently in “editing mode”.

=begin code
method get-editing (--> Bool )
=end code

Return value; C<True> if C<$self> is currently in editing mode. 

=begin comment

=head2 Example
# Example for get-editing

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 start-editing

Switches the label into “editing mode”.

=begin code
method start-editing ( )
=end code

=begin comment

=head2 Example
# Example for start-editing

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 stop-editing

Switches the label out of “editing mode”.

If C<$commit> is C<True>, the resulting text is kept as the
I<text defined in Gnome::Gtk4::R-Editable> property value, otherwise the
resulting text is discarded and the label will keep its
previous I<text defined in Gnome::Gtk4::R-Editable> property value.

=begin code
method stop-editing ( Bool() $commit )
=end code

=item $commit; whether to set the edited text on the label.

=begin comment

=head2 Example
# Example for stop-editing

=end comment

=end pod

