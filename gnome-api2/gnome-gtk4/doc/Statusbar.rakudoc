=comment Package: Gtk4, C-Source: statusbar
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::Statusbar
=head1 Description

A B<Gnome::Gtk4::Statusbar> widget is usually placed along the bottom of an application's
main B<Gnome::Gtk4::Window>.

=for image :src<asset_files/images/statusbar.png> :width<30%> :class<inline>

A B<GtkStatusBar> may provide a regular commentary of the application's
status (as is usually the case in a web browser, for example), or may be
used to simply output a message when the status changes, (when an upload
is complete in an FTP client, for example).

Status bars in GTK maintain a stack of messages. The message at
the top of the each bar’s stack is the one that will currently be displayed.

Any messages added to a statusbar’s stack must specify a context id that
is used to uniquely identify the source of a message. This context id can
be generated by C<.get-context-id()>, given a message and
the statusbar that it will be added to. Note that messages are stored in a
stack, and when choosing which message to display, the stack structure is
adhered to, regardless of the context identifier of a message.

One could say that a statusbar maintains one stack of messages for
display purposes, but allows multiple message producers to maintain
sub-stacks of the messages they produced (via context ids).

Status bars are created using C<.newstatusbar()>.

Messages are added to the bar’s stack with C<.push()>.

The message at the top of the stack can be removed using
C<.pop()>. A message can be removed from anywhere in the
stack if its message id was recorded at the time it was added. This is done
using C<.remove()>.

=head3 CSS node

B<Gnome::Gtk4::Statusbar> has a single CSS node with name B<statusbar>.

=begin comment

=head2 Uml Diagram
![](plantuml/….svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::Statusbar

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

B<Note: The native version of this class is deprecated in gtk4-lib() since version 4.10>

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-statusbar

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Creates a new B<Gnome::Gtk4::Statusbar> ready for messages.

=begin code
method new-statusbar ( --> Gnome::Gtk4::Statusbar \)
=end code

=begin comment

=head2 Example
# Example for new-statusbar

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-context-id

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Returns a new context identifier, given a description
of the actual context.

Note that the description is not shown in the UI.

=begin code
method get-context-id ( Str $context-description --> UInt )
=end code

=item $context-description; textual description of what context
  the new message is being used in.

Return value; an integer id. 

=begin comment

=head2 Example
# Example for get-context-id

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 pop

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Removes the first message in the B<Gnome::Gtk4::Statusbar>’s stack
with the given context id.

Note that this may not change the displayed message,
if the message at the top of the stack has a different
context id.

=begin code
method pop ( UInt() $context-id )
=end code

=item $context-id; a context identifier.

=begin comment

=head2 Example
# Example for pop

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 push

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Pushes a new message onto a statusbar’s stack.

=begin code
method push ( UInt() $context-id, Str $text --> UInt )
=end code

=item $context-id; the message’s context id, as returned by
   C<.get-context-id()>.
=item $text; the message to add to the statusbar.

Return value; a message id that can be used with
  C<.remove()>.. 

=begin comment

=head2 Example
# Example for push

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 remove

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Forces the removal of a message from a statusbar’s stack.
The exact C<$context-id> and C<$message-id> must be specified.

=begin code
method remove ( UInt() $context-id, UInt() $message-id )
=end code

=item $context-id; a context identifier.
=item $message-id; a message identifier, as returned by C<.push()>.

=begin comment

=head2 Example
# Example for remove

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 remove-all

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Forces the removal of all messages from a statusbar's
stack with the exact C<$context-id>.

=begin code
method remove-all ( UInt() $context-id )
=end code

=item $context-id; a context identifier.

=begin comment

=head2 Example
# Example for remove-all

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 text-popped

Emitted whenever a new message is popped off a statusbar's stack.

=begin code
method handler (
  guint $context-id,
  Str $text,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Statusbar :$_widget,
  *C<user>-options
)
=end code

=item $context-id; the context id of the relevant message/statusbar.
=item $text; the message that was just popped.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Statusbar> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal text-popped

=end comment

=comment -----------------------------------------------------------------------
=head3 text-pushed

Emitted whenever a new message gets pushed onto a statusbar's stack.

=begin code
method handler (
  guint $context-id,
  Str $text,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Statusbar :$_widget,
  *C<user>-options
)
=end code

=item $context-id; the context id of the relevant message/statusbar.
=item $text; the message that was pushed.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Statusbar> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal text-pushed

=end comment

=end pod

