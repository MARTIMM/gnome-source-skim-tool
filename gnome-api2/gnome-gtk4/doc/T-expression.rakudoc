=comment Package: Gtk4, C-Source: expression
use v6.d;

=begin pod
=TITLE Gnome::Gtk4::T-expression
=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

Initialization of a type class is simple and only needed when the standalone functions are used.

  method new ( )

=end pod
#-------------------------------------------------------------------------------
#--[Record Structure]-----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Record N-ExpressionWatch

This is an opaque type of which fields are not available.

  class N-ExpressionWatch:auth<github:MARTIMM>:api<2> is export is repr('CStruct') { }

=end pod

#-------------------------------------------------------------------------------
#--[Callback Functions]---------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Callback Functions
=head2 ExpressionNotify

=head3 Signature
=begin code
:(  gpointer $user-data  )
=end code

=item user-data; data passed to C<.watch()>

=end pod
#-------------------------------------------------------------------------------
#--[Standalone Functions]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Standalone Functions
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 param-spec-expression
This function is not yet available

Creates a new B<Gnome::GObject::ParamSpec> instance for a property holding a B<Gnome::Gtk4::Expression>.

See B<g_param_spec_internal>()` for details on the property strings.

=begin code
method param-spec-expression ( Str $name, Str $nick, Str $blurb, UInt $flags --> N-Object )
=end code

=item $name; canonical name of the property.
=item $nick; a user-readable name for the property.
=item $blurb; a user-readable description of the property.
=item $flags; flags for the property.

Return value; a newly created property specification. 

=begin comment

=head2 Uml Diagram
![](plantuml/â€¦.svg)

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 value-dup-expression

Retrieves the B<Gnome::Gtk4::Expression> stored inside the given B<value>, and acquires
a reference to it.

=begin code
method value-dup-expression ( N-Object $value --> N-Object )
=end code

=item $value; a B<Gnome::GObject::N-Value> initialized with type B<GTK_TYPE_EXPRESSION>

Return value; a B<Gnome::Gtk4::Expression>. 

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::ExpressionWatch

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 value-get-expression

Retrieves the B<Gnome::Gtk4::Expression> stored inside the given B<value>.

=begin code
method value-get-expression ( N-Object $value --> N-Object )
=end code

=item $value; a B<Gnome::GObject::N-Value> initialized with type B<GTK_TYPE_EXPRESSION>

Return value; a B<Gnome::Gtk4::Expression>. 

=begin comment

=head2 Example
# Example for evaluate

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 value-set-expression

Stores the given B<Gnome::Gtk4::Expression> inside B<value>.

The B<Gnome::GObject::N-Value> will acquire a reference to the B<expression>.

=begin code
method value-set-expression ( N-Object $value, N-Object() $expression )
=end code

=item $value; a B<Gnome::GObject::N-Value> initialized with type B<GTK_TYPE_EXPRESSION>
=item $expression; a B<Gnome::Gtk4::Expression>.

=begin comment

=head2 Example
# Example for ref

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 value-take-expression

Stores the given B<Gnome::Gtk4::Expression> inside B<value>.

This function transfers the ownership of the B<expression> to the B<Gnome::GObject::N-Value>.

=begin code
method value-take-expression ( N-Object $value, N-Object() $expression )
=end code

=item $value; a B<Gnome::GObject::N-Value> initialized with type B<GTK_TYPE_EXPRESSION>
=item $expression; (transfer ownership: full) a B<Gnome::Gtk4::Expression>.

=begin comment

=head2 Example
# Example for unref

=end comment

=end pod

