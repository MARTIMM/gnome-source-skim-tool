 use v6.d;

 =begin pod
 =head2 Project Description
 =item B<Distribution:> Gnome::Gtk4
 =item B<Project description:> Modules for package Gnome::Gtk4:api<2>. The language binding to GNOME’s user interface toolkit version 4
 =item B<Project version:> 0.1.9
 =item B<Rakudo version:> 6.d, 2023.10.67.g.688.b.625.ac
 =item B<Author:> Marcel Timmerman
 =end pod


#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod

![](images/signalaction.png)

=head1 Description

A I<GtkShortcut>Action that emits a signal.

Signals that are used in this way are referred to as keybinding signals,
and they are expected to be defined with the %G_SIGNAL_ACTION flag.
=begin comment
=head2 Uml Diagram
![](plantuml/….svg)
=end comment

=begin comment
=head2 Example
  … text …
  … example code …
=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object :$native-object! )


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-signalaction

Creates an action that when activated, emits the given action signal on the provided widget.

It will also unpack the args into arguments passed to the signal.

=begin code
method new-signalaction ( Str $signal-name --> Gnome::Gtk4::SignalAction )
=end code

=item $signal-name; name of the signal to emit.

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-signal-name

Returns the name of the signal that will be emitted.

=begin code
method get-signal-name (--> Str )
=end code


Return value; the name of the signal to emit. 


=end pod

