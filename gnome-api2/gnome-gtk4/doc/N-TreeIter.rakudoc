=comment Package: Gtk4, C-Source: treemodel
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::N-TreeIter
=head1 Description

The B<Gnome::Gtk4::N-TreeIter> is the primary structure
for accessing a B<Gnome::Gtk4::R-TreeModel>. Models are expected to put a unique
integer in the C<$stamp> member, and put
model-specific data in the three C<$user-data>
members.

=begin comment

=head2 Uml Diagram
![](plantuml/â€¦.svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::TreeIter

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

B<Note: The native version of this class is deprecated in gtk4-lib() since version 4.10>

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 copy

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Creates a dynamically allocated tree iterator as a copy of C<$iter>.

This function is not intended for use in applications,
because you can just copy the structs by value
(B<Gnome::Gtk4::N-TreeIter> new_iter = iter;`).
You must free this iter with C<.free()>.

=begin code
method copy (--> N-Object )
=end code

Return value; a newly-allocated copy of C<$iter>. 

=begin comment

=head2 Example
# Example for copy

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 free

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Frees an iterator that has been allocated by C<.copy()>.

This function is mainly used for language bindings.

=begin code
method free ( )
=end code

=begin comment

=head2 Example
# Example for free

=end comment

=end pod

