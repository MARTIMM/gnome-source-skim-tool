=comment Package: Gtk4, C-Source: expression
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::ObjectExpression
=head1 Description

A B<Gnome::GObject::Object> value in a B<Gnome::Gtk4::Expression>.

=head2 Uml Diagram
=for image :src<asset_files/images/plantuml/ObjectExpression.png> :width<70%> :class<inline>

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::ObjectExpression

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-objectexpression

Creates an expression evaluating to the given B<object> with a weak reference.

Once the B<object> is disposed, it will fail to evaluate.

This expression is meant to break reference cycles.

If you want to keep a reference to B<object>, use C<.newobjectexpression()> in class C<Gnome::Gtk4::ConstantExpression>.

=begin code
method new-objectexpression ( N-Object() $object --> Gnome::Gtk4::ObjectExpression )
=end code

=item $object; object to watch.

=begin comment

=head2 Example
# Example for new-objectexpression

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-object

Gets the object that the expression evaluates to.

=begin code
method get-object (--> N-Object )
=end code

Return value; the object, or undefined. 

=begin comment

=head2 Example
# Example for get-object

=end comment

=end pod

