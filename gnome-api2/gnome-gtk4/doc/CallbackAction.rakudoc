=comment Package: Gtk4, C-Source: shortcutaction
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::CallbackAction
=head1 Description

A B<Gnome::Gtk4::ShortcutAction> that invokes a callback.

=begin comment

=head2 Uml Diagram
![](plantuml/….svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::CallbackAction

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-callbackaction
This function is not yet available

Create a custom action that calls the given C<$callback> when
activated.

=begin code
method new-callbackaction ( &callback, gpointer $data, … --> Gnome::Gtk4::CallbackAction \)
=end code

=item &callback; the callback to call. Tthe function must be specified with following signature; C<:( N-Object $widget, N-Object $args, gpointer $user-data --> gboolean )>.
=item $data; the data to be passed to C<$callback>.
=item destroy; the function to be called when the
  callback action is finalized. Note that each argument must be specified as a type followed by its value!

=begin comment

=head2 Example
# Example for new-callbackaction

=end comment

=end pod

