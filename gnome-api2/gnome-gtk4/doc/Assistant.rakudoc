=comment Package: Gtk4, C-Source: assistant
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::Assistant
=head1 Description

B<Gnome::Gtk4::Assistant> is used to represent a complex as a series of steps.

=for image :src<asset_files/images/assistant.png> :width<30%> :class<inline>

Each step consists of one or more pages. B<Gnome::Gtk4::Assistant> guides the user
through the pages, and controls the page flow to collect the data needed
for the operation.

B<Gnome::Gtk4::Assistant> handles which buttons to show and to make sensitive based
on page sequence knowledge and the  C<enumeration AssistantPageType from Gnome::Gtk4::T-assistant>  of each
page in addition to state information like the *completed* and *committed*
page statuses.

If you have a case that doesn’t quite fit in B<Gnome::Gtk4::Assistant>s way of
handling buttons, you can use the C<GTK_ASSISTANT_PAGE_CUSTOM> page
type and handle buttons yourself.

B<Gnome::Gtk4::Assistant> maintains a B<Gnome::Gtk4::AssistantPage> object for each added
child, which holds additional per-child properties. You
obtain the B<Gnome::Gtk4::AssistantPage> for a child with C<.get-page()>.

=head2 GtkAssistant as GtkBuildable

The B<Gnome::Gtk4::Assistant> implementation of the B<Gnome::Gtk4::R-Buildable> interface
exposes the C<$action-area> as internal children with the name
“action_area”.

To add pages to an assistant in B<Gnome::Gtk4::Builder>, simply add it as a
child to the B<Gnome::Gtk4::Assistant> object. If you need to set per-object
properties, create a B<Gnome::Gtk4::AssistantPage> object explicitly, and
set the child widget as a property on it.

=head2 CSS nodes

B<Gnome::Gtk4::Assistant> has a single CSS node with the name window and style
class .assistant.

=begin comment

=head2 Uml Diagram
![](plantuml/….svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::Assistant

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

B<Note: The native version of this class is deprecated in gtk4-lib() since version 4.10>

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-assistant

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Creates a new B<Gnome::Gtk4::Assistant>.

=begin code
method new-assistant ( --> Gnome::Gtk4::Assistant \)
=end code

=begin comment

=head2 Example
# Example for new-assistant

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 add-action-widget

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Adds a widget to the action area of a B<Gnome::Gtk4::Assistant>.

=begin code
method add-action-widget ( N-Object() $child )
=end code

=item $child; a B<Gnome::Gtk4::Widget>.

=begin comment

=head2 Example
# Example for add-action-widget

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 append-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Appends a page to the C<$assistant>.

=begin code
method append-page ( N-Object() $page --> Int )
=end code

=item $page; a B<Gnome::Gtk4::Widget>.

Return value; the index (starting at 0) of the inserted page. 

=begin comment

=head2 Example
# Example for append-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 commit

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Erases the visited page history.

GTK will then hide the back button on the current page,
and removes the cancel button from subsequent pages.

Use this when the information provided up to the current
page is hereafter deemed permanent and cannot be modified
or undone. For example, showing a progress page to track
a long-running, unreversible operation after the user has
clicked apply on a confirmation page.

=begin code
method commit ( )
=end code

=begin comment

=head2 Example
# Example for commit

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-current-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Returns the page number of the current page.

=begin code
method get-current-page (--> Int )
=end code

Return value; The index (starting from 0) of the current
  page in the C<$assistant>, or -1 if the C<$assistant> has no pages,
  or no current page. 

=begin comment

=head2 Example
# Example for get-current-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-n-pages

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Returns the number of pages in the C<$assistant>

=begin code
method get-n-pages (--> Int )
=end code

Return value; the number of pages in the C<$assistant>. 

=begin comment

=head2 Example
# Example for get-n-pages

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-nth-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Returns the child widget contained in page number C<$page-num>.

=begin code
method get-nth-page ( Int() $page-num --> N-Object )
=end code

=item $page-num; the index of a page in the C<$assistant>,
  or -1 to get the last page.

Return value; the child widget, or undefined
  if C<$page-num> is out of bounds. 

=begin comment

=head2 Example
# Example for get-nth-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Returns the B<Gnome::Gtk4::AssistantPage> object for C<$child>.

=begin code
method get-page ( N-Object() $child --> N-Object )
=end code

=item $child; a child of C<$assistant>.

Return value; the B<Gnome::Gtk4::AssistantPage> for C<$child>. 

=begin comment

=head2 Example
# Example for get-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-page-complete

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Gets whether C<$page> is complete.

=begin code
method get-page-complete ( N-Object() $page --> Bool )
=end code

=item $page; a page of C<$assistant>.

Return value; C<True> if C<$page> is complete.. 

=begin comment

=head2 Example
# Example for get-page-complete

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-page-title

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Gets the title for C<$page>.

=begin code
method get-page-title ( N-Object() $page --> Str )
=end code

=item $page; a page of C<$assistant>.

Return value; the title for C<$page>. 

=begin comment

=head2 Example
# Example for get-page-title

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-page-type

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Gets the page type of C<$page>.

=begin code
method get-page-type ( N-Object() $page --> GtkAssistantPageType )
=end code

=item $page; a page of C<$assistant>.

Return value; the page type of C<$page>. 

=begin comment

=head2 Example
# Example for get-page-type

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-pages

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Gets a list model of the assistant pages.

=begin code
method get-pages (--> N-List )
=end code

Return value; A list model of the pages.. 

=begin comment

=head2 Example
# Example for get-pages

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 insert-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Inserts a page in the C<$assistant> at a given position.

=begin code
method insert-page ( N-Object() $page, Int() $position --> Int )
=end code

=item $page; a B<Gnome::Gtk4::Widget>.
=item $position; the index (starting at 0) at which to insert the page,
  or -1 to append the page to the C<$assistant>.

Return value; the index (starting from 0) of the inserted page. 

=begin comment

=head2 Example
# Example for insert-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 next-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Navigate to the next page.

It is a programming error to call this function when
there is no next page.

This function is for use when creating pages of the
C<GTK_ASSISTANT_PAGE_CUSTOM> type.

=begin code
method next-page ( )
=end code

=begin comment

=head2 Example
# Example for next-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 prepend-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Prepends a page to the C<$assistant>.

=begin code
method prepend-page ( N-Object() $page --> Int )
=end code

=item $page; a B<Gnome::Gtk4::Widget>.

Return value; the index (starting at 0) of the inserted page. 

=begin comment

=head2 Example
# Example for prepend-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 previous-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Navigate to the previous visited page.

It is a programming error to call this function when
no previous page is available.

This function is for use when creating pages of the
C<GTK_ASSISTANT_PAGE_CUSTOM> type.

=begin code
method previous-page ( )
=end code

=begin comment

=head2 Example
# Example for previous-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 remove-action-widget

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Removes a widget from the action area of a B<Gnome::Gtk4::Assistant>.

=begin code
method remove-action-widget ( N-Object() $child )
=end code

=item $child; a B<Gnome::Gtk4::Widget>.

=begin comment

=head2 Example
# Example for remove-action-widget

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 remove-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Removes the C<$page-num>’s page from C<$assistant>.

=begin code
method remove-page ( Int() $page-num )
=end code

=item $page-num; the index of a page in the C<$assistant>,
  or -1 to remove the last page.

=begin comment

=head2 Example
# Example for remove-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-current-page

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Switches the page to C<$page-num>.

Note that this will only be necessary in custom buttons,
as the C<$assistant> flow can be set with
C<.set-forward-page-func()>.

=begin code
method set-current-page ( Int() $page-num )
=end code

=item $page-num; index of the page to switch to, starting from 0.
  If negative, the last page will be used. If greater
  than the number of pages in the C<$assistant>, nothing
  will be done..

=begin comment

=head2 Example
# Example for set-current-page

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-forward-page-func
This function is not yet available

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Sets the page forwarding function to be C<$page-func>.

This function will be used to determine what will be
the next page when the user presses the forward button.
Setting C<$page-func> to undefined will make the assistant to
use the default forward function, which just goes to the
next visible page.

=begin code
method set-forward-page-func ( &page-func, gpointer $data, … )
=end code

=item &page-func; the B<Gnome::Gtk4::T-assistant>, or undefined
  to use the default one. Tthe function must be specified with following signature; C<:( gint $current-page, gpointer $data --> gint )>.
=item $data; user data for C<$page-func>.
=item destroy; destroy notifier for C<$data>. Note that each argument must be specified as a type followed by its value!

=begin comment

=head2 Example
# Example for set-forward-page-func

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-page-complete

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Sets whether C<$page> contents are complete.

This will make C<$assistant> update the buttons state
to be able to continue the task.

=begin code
method set-page-complete ( N-Object() $page, Bool() $complete )
=end code

=item $page; a page of C<$assistant>.
=item $complete; the completeness status of the page.

=begin comment

=head2 Example
# Example for set-page-complete

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-page-title

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Sets a title for C<$page>.

The title is displayed in the header area of the assistant
when C<$page> is the current page.

=begin code
method set-page-title ( N-Object() $page, Str $title )
=end code

=item $page; a page of C<$assistant>.
=item $title; the new title for C<$page>.

=begin comment

=head2 Example
# Example for set-page-title

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-page-type

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Sets the page type for C<$page>.

The page type determines the page behavior in the C<$assistant>.

=begin code
method set-page-type ( N-Object() $page, GtkAssistantPageType $type )
=end code

=item $page; a page of C<$assistant>.
=item $type; the new type for C<$page>.

=begin comment

=head2 Example
# Example for set-page-type

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-buttons-state

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Forces C<$assistant> to recompute the buttons state.

GTK automatically takes care of this in most situations,
e.g. when the user goes to a different page, or when the
visibility or completeness of a page changes.

One situation where it can be necessary to call this
function is when changing a value on the current page
affects the future page flow of the assistant.

=begin code
method update-buttons-state ( )
=end code

=begin comment

=head2 Example
# Example for update-buttons-state

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 apply

Emitted when the apply button is clicked.

The default behavior of the B<Gnome::Gtk4::Assistant> is to switch to the page
after the current page, unless the current page is the last one.

A handler for the I<apply> signal should carry out the actions for
which the wizard has collected data. If the action takes a long time
to complete, you might consider putting a page of type
C<GTK_ASSISTANT_PAGE_PROGRESS> after the confirmation page and handle
this operation within the I<prepare> signal of
the progress page.

=begin code
method handler (
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Assistant :$_widget,
  *C<user>-options
)
=end code

=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Assistant> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal apply

=end comment

=comment -----------------------------------------------------------------------
=head3 cancel

Emitted when then the cancel button is clicked.

=begin code
method handler (
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Assistant :$_widget,
  *C<user>-options
)
=end code

=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Assistant> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal cancel

=end comment

=comment -----------------------------------------------------------------------
=head3 close

Emitted either when the close button of a summary page is clicked,
or when the apply button in the last page in the flow (of type
C<GTK_ASSISTANT_PAGE_CONFIRM>) is clicked.

=begin code
method handler (
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Assistant :$_widget,
  *C<user>-options
)
=end code

=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Assistant> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal close

=end comment

=comment -----------------------------------------------------------------------
=head3 escape

The action signal for the Escape binding.

=begin code
method handler (
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Assistant :$_widget,
  *C<user>-options
)
=end code

=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Assistant> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal escape

=end comment

=comment -----------------------------------------------------------------------
=head3 prepare

Emitted when a new page is set as the assistant's current page,
before making the new page visible.

A handler for this signal can do any preparations which are
necessary before showing C<$page>.

=begin code
method handler (
  N-Object $page,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Assistant :$_widget,
  *C<user>-options
)
=end code

=item $page; the current page.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Assistant> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal prepare

=end comment

=end pod

