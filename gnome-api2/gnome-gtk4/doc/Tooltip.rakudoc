=comment Package: Gtk4, C-Source: tooltip
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::Tooltip
=head1 Description

B<Gnome::Gtk4::Tooltip> is an object representing a widget tooltip.

Basic tooltips can be realized simply by using
C<.set-tooltip-text() in class Gnome::Gtk4::Widget> or
C<.set-tooltip-markup() in class Gnome::Gtk4::Widget> without
any explicit tooltip object.

When you need a tooltip with a little more fancy contents,
like adding an image, or you want the tooltip to have different
contents per B<Gnome::Gtk4::TreeView> row or cell, you will have to do a
little more work:

=item Set the I<has-tooltip defined in Gnome::Gtk4::Widget> property to C<True>.
  This will make GTK monitor the widget for motion and related events
  which are needed to determine when and where to show a tooltip.

=item Connect to the I<query-tooltip defined in Widget> signal.
  This signal will be emitted when a tooltip is supposed to be shown.
  One of the arguments passed to the signal handler is a B<Gnome::Gtk4::Tooltip>
  object. This is the object that we are about to display as a tooltip,
  and can be manipulated in your callback using functions like
  C<.set-icon()>. There are functions for setting
  the tooltip’s markup, setting an image from a named icon, or even
  putting in a custom widget.

=item Return C<True> from your I<query-tooltip> handler. This causes the tooltip
  to be show. If you return C<False>, it will not be shown.

=begin comment

=head2 Uml Diagram
![](plantuml/….svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::Tooltip

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-custom

Replaces the widget packed into the tooltip with C<$custom-widget>. C<$custom-widget> does not get destroyed when the tooltip goes
away.
By default a box with a B<Gnome::Gtk4::Image> and B<Gnome::Gtk4::Label> is embedded in
the tooltip, which can be configured using C<.set-markup()>
and C<.set-icon()>.

=begin code
method set-custom ( N-Object() $custom-widget )
=end code

=item $custom-widget; a B<Gnome::Gtk4::Widget>, or undefined to unset the old custom widget..

=begin comment

=head2 Example
# Example for set-custom

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon

Sets the icon of the tooltip (which is in front of the text) to be C<$paintable>.  If C<$paintable> is undefined, the image will be hidden.

=begin code
method set-icon ( N-Object() $paintable )
=end code

=item $paintable; a B<Gnome::Gdk4::R-Paintable>.

=begin comment

=head2 Example
# Example for set-icon

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-from-gicon

Sets the icon of the tooltip (which is in front of the text)
to be the icon indicated by C<$gicon> with the size indicated
by C<$size>. If C<$gicon> is undefined, the image will be hidden.

=begin code
method set-icon-from-gicon ( N-Object() $gicon )
=end code

=item $gicon; a B<Gnome::Gio::R-Icon> representing the icon.

=begin comment

=head2 Example
# Example for set-icon-from-gicon

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-from-icon-name

Sets the icon of the tooltip (which is in front of the text) to be
the icon indicated by C<$icon-name> with the size indicated
by C<$size>.  If C<$icon-name> is undefined, the image will be hidden.

=begin code
method set-icon-from-icon-name ( Str $icon-name )
=end code

=item $icon-name; an icon name.

=begin comment

=head2 Example
# Example for set-icon-from-icon-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-markup

Sets the text of the tooltip to be C<$markup>.

The string must be marked up with Pango markup.
If C<$markup> is undefined, the label will be hidden.

=begin code
method set-markup ( Str $markup )
=end code

=item $markup; a string with Pango markup or C<NLL>.

=begin comment

=head2 Example
# Example for set-markup

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-text

Sets the text of the tooltip to be C<$text>.

If C<$text> is undefined, the label will be hidden.
See also C<.set-markup()>.

=begin code
method set-text ( Str $text )
=end code

=item $text; a text string.

=begin comment

=head2 Example
# Example for set-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-tip-area

Sets the area of the widget, where the contents of this tooltip apply,
to be C<$rect> (in widget coordinates).  This is especially useful for
properly setting tooltips on B<Gnome::Gtk4::TreeView> rows and cells, B<GtkIconViews>,
etc.

For setting tooltips on B<Gnome::Gtk4::TreeView>, please refer to the convenience
functions for this: gtk_tree_view_set_tooltip_row() and
gtk_tree_view_set_tooltip_cell().

=begin code
method set-tip-area ( N-Object $rect )
=end code

=item $rect; a B<Gnome::Gdk4::N-Rectangle>

=begin comment

=head2 Example
# Example for set-tip-area

=end comment

=end pod

