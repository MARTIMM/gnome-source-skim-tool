=comment Package: Gtk4, C-Source: accessible
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Gnome::Gtk4::R-Accessible

![](images/accessible.png)

=head1 Description

B<Gnome::Gtk4::R-Accessible> is an interface for describing UI elements for
Assistive Technologies.

Every accessible implementation has:

=item a “role”, represented by a value of the  C<enumeration AccessibleRole from Gnome::Gtk4::T-enums>  enumeration
=item an “attribute”, represented by a set of  C<enumeration AccessibleState from Gnome::Gtk4::T-enums> ,
    C<enumeration AccessibleProperty from Gnome::Gtk4::T-enums>  and  C<enumeration AccessibleRelation from Gnome::Gtk4::T-enums>  values

The role cannot be changed after instantiating a B<Gnome::Gtk4::R-Accessible>
implementation.

The attributes are updated every time a UI element's state changes in
a way that should be reflected by assistive technologies. For instance,
if a B<Gnome::Gtk4::Widget> visibility changes, the C<GTK_ACCESSIBLE_STATE_HIDDEN>
state will also change to reflect the I<visible defined in Gnome::Gtk4::Widget> property.

=begin comment

=head2 Uml Diagram
![](plantuml/….svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::Accessible

=end comment

=end pod
#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-accessible-role

Retrieves the C<enumeration GtkAccessibleRole defined in Gnome::Gtk4::T-enums> for the given B<Gnome::Gtk4::R-Accessible>.

=begin code
method get-accessible-role (--> GtkAccessibleRole )
=end code

Return value; a C<enumeration GtkAccessibleRole defined in Gnome::Gtk4::T-enums>. 

=begin comment

=head2 Example
# Example for get-accessible-role

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 reset-property

Resets the accessible C<$property> to its default value.

=begin code
method reset-property ( GtkAccessibleProperty $property )
=end code

=item $property; a C<enumeration GtkAccessibleProperty defined in Gnome::Gtk4::T-enums>.

=begin comment

=head2 Example
# Example for reset-property

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 reset-relation

Resets the accessible C<$relation> to its default value.

=begin code
method reset-relation ( GtkAccessibleRelation $relation )
=end code

=item $relation; a C<enumeration GtkAccessibleRelation defined in Gnome::Gtk4::T-enums>.

=begin comment

=head2 Example
# Example for reset-relation

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 reset-state

Resets the accessible C<$state> to its default value.

=begin code
method reset-state ( GtkAccessibleState $state )
=end code

=item $state; a C<enumeration GtkAccessibleState defined in Gnome::Gtk4::T-enums>.

=begin comment

=head2 Example
# Example for reset-state

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-property
This function is not yet available

Updates a list of accessible properties.

See the  C<enumeration AccessibleProperty from Gnome::Gtk4::T-enums>  documentation for the
value types of accessible properties.

This function should be called by B<Gnome::Gtk4::Widget> types whenever
an accessible property change must be communicated to assistive
technologies.

Example:
=begin comment
value = gtk_adjustment_get_value (adjustment);
gtk_accessible_update_property (GTK_ACCESSIBLE (spin_button),
                                   GTK_ACCESSIBLE_PROPERTY_VALUE_NOW, value,
                                   -1);

=end comment

=begin code
method update-property ( GtkAccessibleProperty $first-property, … )
=end code

=item $first-property; the first C<enumeration GtkAccessibleProperty defined in Gnome::Gtk4::T-enums>.
=item …; …. Note that each argument must be specified as a type followed by its value!

=begin comment

=head2 Example
# Example for update-property

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-property-value

Updates an array of accessible properties.

This function should be called by B<Gnome::Gtk4::Widget> types whenever an accessible
property change must be communicated to assistive technologies.

This function is meant to be used by language bindings.

=begin code
method update-property-value ( Int() $n-properties, GtkAccessibleProperty $properties, N-Object $values )
=end code

=item $n-properties; the number of accessible properties to set.
=item $properties; an array of C<enumeration GtkAccessibleProperty defined in Gnome::Gtk4::T-enums>.
=item $values; an array of B<GValues>, one for each property

=begin comment

=head2 Example
# Example for update-property-value

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-relation
This function is not yet available

Updates a list of accessible relations.

This function should be called by B<Gnome::Gtk4::Widget> types whenever an accessible
relation change must be communicated to assistive technologies.

If the  C<enumeration AccessibleRelation from Gnome::Gtk4::T-enums>  requires a list of references,
you should pass each reference individually, followed by undefined, e.g.

=begin comment
gtk_accessible_update_relation (accessible,
                                GTK_ACCESSIBLE_RELATION_CONTROLS,
                                  ref1, NULL,
                                GTK_ACCESSIBLE_RELATION_LABELLED_BY,
                                  ref1, ref2, ref3, NULL,
                                -1);

=end comment

=begin code
method update-relation ( GtkAccessibleRelation $first-relation, … )
=end code

=item $first-relation; the first C<enumeration GtkAccessibleRelation defined in Gnome::Gtk4::T-enums>.
=item …; …. Note that each argument must be specified as a type followed by its value!

=begin comment

=head2 Example
# Example for update-relation

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-relation-value

Updates an array of accessible relations.

This function should be called by B<Gnome::Gtk4::Widget> types whenever an accessible
relation change must be communicated to assistive technologies.

This function is meant to be used by language bindings.

=begin code
method update-relation-value ( Int() $n-relations, GtkAccessibleRelation $relations, N-Object $values )
=end code

=item $n-relations; the number of accessible relations to set.
=item $relations; an array of C<enumeration GtkAccessibleRelation defined in Gnome::Gtk4::T-enums>.
=item $values; an array of B<GValues>, one for each relation

=begin comment

=head2 Example
# Example for update-relation-value

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-state
This function is not yet available

Updates a list of accessible states. See the  C<enumeration AccessibleState from Gnome::Gtk4::T-enums> 
documentation for the value types of accessible states.

This function should be called by B<Gnome::Gtk4::Widget> types whenever an accessible
state change must be communicated to assistive technologies.

Example:
=begin comment
value = GTK_ACCESSIBLE_TRISTATE_MIXED;
gtk_accessible_update_state (GTK_ACCESSIBLE (check_button),
                             GTK_ACCESSIBLE_STATE_CHECKED, value,
                             -1);

=end comment

=begin code
method update-state ( GtkAccessibleState $first-state, … )
=end code

=item $first-state; the first C<enumeration GtkAccessibleState defined in Gnome::Gtk4::T-enums>.
=item …; …. Note that each argument must be specified as a type followed by its value!

=begin comment

=head2 Example
# Example for update-state

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 update-state-value

Updates an array of accessible states.

This function should be called by B<Gnome::Gtk4::Widget> types whenever an accessible
state change must be communicated to assistive technologies.

This function is meant to be used by language bindings.

=begin code
method update-state-value ( Int() $n-states, GtkAccessibleState $states, N-Object $values )
=end code

=item $n-states; the number of accessible states to set.
=item $states; an array of C<enumeration GtkAccessibleState defined in Gnome::Gtk4::T-enums>.
=item $values; an array of B<GValues>, one for each state

=begin comment

=head2 Example
# Example for update-state-value

=end comment

=end pod

