=comment Package: Gtk4, C-Source: entry
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::Entry
=head1 Description

B<Gnome::Gtk4::Entry> is a single line text entry widget.

=for image :src<asset_files/images/entry.png> :width<30%> :class<inline>

A fairly large set of key bindings are supported by default. If the
entered text is longer than the allocation of the widget, the widget
will scroll so that the cursor position is visible.

When using an entry for passwords and other sensitive information, it
can be put into “password mode” using C<.set-visibility()>.
In this mode, entered text is displayed using a “invisible” character.
By default, GTK picks the best invisible character that is available
in the current font, but it can be changed with
C<.set-invisible-char()>.

B<Gnome::Gtk4::Entry> has the ability to display progress or activity
information behind the text. To make an entry display such information,
use C<.set-progress-fraction()> or
C<.set-progress-pulse-step()>.

Additionally, B<Gnome::Gtk4::Entry> can show icons at either side of the entry.
These icons can be activatable by clicking, can be set up as drag source
and can have tooltips. To add an icon, use
C<.set-icon-from-gicon()> or one of the various other functions
that set an icon from an icon name or a paintable. To trigger an action when
the user clicks an icon, connect to the I<icon-press> signal.
To allow DND operations from an icon, use
C<.set-icon-drag-source()>. To set a tooltip on an icon, use
C<.set-icon-tooltip-text()> or the corresponding function
for markup.

Note that functionality or information that is only available by clicking
on an icon in an entry may not be accessible at all to users which are not
able to use a mouse or other pointing device. It is therefore recommended
that any such functionality should also be available by other means, e.g.
via the context menu of the entry.

=head2 CSS nodes

=begin comment
entry[.flat][.warning][.error]
├── text[.readonly]
├── image.left
├── image.right
╰── [progress[.pulse]]

=end comment

B<Gnome::Gtk4::Entry> has a main node with the name entry. Depending on the properties
of the entry, the style classes .read-only and .flat may appear. The style
classes .warning and .error may also be used with entries.

When the entry shows icons, it adds subnodes with the name image and the
style class .left or .right, depending on where the icon appears.

When the entry shows progress, it adds a subnode with the name progress.
The node has the style class .pulse when the shown progress is pulsing.

For all the subnodes added to the text node in various situations,
see B<Gnome::Gtk4::Text>.

=head2 GtkEntry as GtkBuildable

The B<Gnome::Gtk4::Entry> implementation of the B<Gnome::Gtk4::R-Buildable> interface supports a
custom `<attributes>` element, which supports any number of `<attribute>`
elements. The `<attribute>` element has attributes named “name“, “value“,
“start“ and “end“ and allows you to specify B<Gnome::Pango::N-Attribute> values for
this label.

An example of a UI definition fragment specifying Pango attributes:
=begin comment
<object class="GtkEntry">
  <attributes>
    <attribute name="weight" value="PANGO_WEIGHT_BOLD"/>
    <attribute name="background" value="red" start="5" end="10"/>
  </attributes>
</object>

=end comment

The start and end attributes specify the range of characters to which the
Pango attribute applies. If start and end are not specified, the attribute
is applied to the whole text. Note that specifying ranges does not make much
sense with translatable attributes. Use markup embedded in the translatable
content instead.

=head2 Accessibility

B<Gnome::Gtk4::Entry> uses the C<GTK_ACCESSIBLE_ROLE_TEXT_BOX> role.

=begin comment

=head2 Uml Diagram
![](plantuml/….svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::Entry

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-entry

Creates a new entry.

=begin code
method new-entry ( --> Gnome::Gtk4::Entry \)
=end code

=begin comment

=head2 Example
# Example for new-entry

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-with-buffer

Creates a new entry with the specified text buffer.

=begin code
method new-with-buffer ( N-Object() $buffer --> Gnome::Gtk4::Entry \)
=end code

=item $buffer; The buffer to use for the new B<Gnome::Gtk4::Entry>..

=begin comment

=head2 Example
# Example for new-with-buffer

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-activates-default

Retrieves the value set by C<.set-activates-default()>.

=begin code
method get-activates-default (--> Bool )
=end code

Return value; C<True> if the entry will activate the default widget. 

=begin comment

=head2 Example
# Example for get-activates-default

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-alignment

Gets the value set by C<.set-alignment()>.

See also: I<xalign defined in Gnome::Gtk4::R-Editable>

=begin code
method get-alignment (--> Num )
=end code

Return value; the alignment. 

=begin comment

=head2 Example
# Example for get-alignment

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-attributes

Gets the attribute list of the B<Gnome::Gtk4::Entry>.

See C<.set-attributes()>.

=begin code
method get-attributes (--> N-Object )
=end code

Return value; the attribute list. 

=begin comment

=head2 Example
# Example for get-attributes

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-buffer

Get the B<Gnome::Gtk4::EntryBuffer> object which holds the text for
this widget.

=begin code
method get-buffer (--> N-Object )
=end code

Return value; A B<Gnome::Gtk4::EntryBuffer> object.. 

=begin comment

=head2 Example
# Example for get-buffer

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-completion

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Returns the auxiliary completion object currently
in use by C<$entry>.

=begin code
method get-completion (--> N-Object )
=end code

Return value; The auxiliary
  completion object currently in use by C<$entry>. 

=begin comment

=head2 Example
# Example for get-completion

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-current-icon-drag-source

Returns the index of the icon which is the source of the
current  DND operation, or -1.

=begin code
method get-current-icon-drag-source (--> Int )
=end code

Return value; index of the icon which is the source of the
  current DND operation, or -1.. 

=begin comment

=head2 Example
# Example for get-current-icon-drag-source

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-extra-menu

Gets the menu model set with C<.set-extra-menu()>.

=begin code
method get-extra-menu (--> N-Object )
=end code

Return value; the menu model. 

=begin comment

=head2 Example
# Example for get-extra-menu

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-has-frame

Gets the value set by C<.set-has-frame()>.

=begin code
method get-has-frame (--> Bool )
=end code

Return value; whether the entry has a beveled frame. 

=begin comment

=head2 Example
# Example for get-has-frame

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-activatable

Returns whether the icon is activatable.

=begin code
method get-icon-activatable ( GtkEntryIconPosition $icon-pos --> Bool )
=end code

=item $icon-pos; Icon position.

Return value; C<True> if the icon is activatable.. 

=begin comment

=head2 Example
# Example for get-icon-activatable

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-area

Gets the area where entry’s icon at C<$icon-pos> is drawn.

This function is useful when drawing something to the
entry in a draw callback.

If the entry is not realized or has no icon at the given
position, C<$icon-area> is filled with zeros. Otherwise, C<$icon-area> will be filled with the icon's allocation,
relative to C<$entry>'s allocation.

=begin code
method get-icon-area ( GtkEntryIconPosition $icon-pos, N-Object $icon-area )
=end code

=item $icon-pos; Icon position.
=item $icon-area; Return location for the icon’s area

=begin comment

=head2 Example
# Example for get-icon-area

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-at-pos

Finds the icon at the given position and return its index.

The position’s coordinates are relative to the C<$entry>’s
top left corner. If C<$x>, C<$y> doesn’t lie inside an icon,
-1 is returned. This function is intended for use in a
 I<query-tooltip defined in Widget> signal handler.

=begin code
method get-icon-at-pos ( Int() $x, Int() $y --> Int )
=end code

=item $x; the x coordinate of the position to find, relative to C<$entry>.
=item $y; the y coordinate of the position to find, relative to C<$entry>.

Return value; the index of the icon at the given position, or -1. 

=begin comment

=head2 Example
# Example for get-icon-at-pos

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-gicon

Retrieves the B<Gnome::Gio::R-Icon> used for the icon.

undefined will be returned if there is no icon or if the icon was
set by some other method (e.g., by B<Gnome::Gdk4::R-Paintable> or icon name).

=begin code
method get-icon-gicon ( GtkEntryIconPosition $icon-pos --> N-Object )
=end code

=item $icon-pos; Icon position.

Return value; A B<Gnome::Gio::R-Icon>. 

=begin comment

=head2 Example
# Example for get-icon-gicon

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-name

Retrieves the icon name used for the icon.

undefined is returned if there is no icon or if the icon was set
by some other method (e.g., by B<Gnome::Gdk4::R-Paintable> or gicon).

=begin code
method get-icon-name ( GtkEntryIconPosition $icon-pos --> Str )
=end code

=item $icon-pos; Icon position.

Return value; An icon name. 

=begin comment

=head2 Example
# Example for get-icon-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-paintable

Retrieves the B<Gnome::Gdk4::R-Paintable> used for the icon.

If no B<Gnome::Gdk4::R-Paintable> was used for the icon, undefined is returned.

=begin code
method get-icon-paintable ( GtkEntryIconPosition $icon-pos --> N-Object )
=end code

=item $icon-pos; Icon position.

Return value; A B<Gnome::Gdk4::R-Paintable>
  if no icon is set for this position or the icon set is not
  a B<Gnome::Gdk4::R-Paintable>.. 

=begin comment

=head2 Example
# Example for get-icon-paintable

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-sensitive

Returns whether the icon appears sensitive or insensitive.

=begin code
method get-icon-sensitive ( GtkEntryIconPosition $icon-pos --> Bool )
=end code

=item $icon-pos; Icon position.

Return value; C<True> if the icon is sensitive.. 

=begin comment

=head2 Example
# Example for get-icon-sensitive

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-storage-type

Gets the type of representation being used by the icon
to store image data.

If the icon has no image data, the return value will
be C<GTK_IMAGE_EMPTY>.

=begin code
method get-icon-storage-type ( GtkEntryIconPosition $icon-pos --> GtkImageType )
=end code

=item $icon-pos; Icon position.

Return value; image representation being used. 

=begin comment

=head2 Example
# Example for get-icon-storage-type

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-tooltip-markup

Gets the contents of the tooltip on the icon at the specified
position in C<$entry>.

=begin code
method get-icon-tooltip-markup ( GtkEntryIconPosition $icon-pos --> Str )
=end code

=item $icon-pos; the icon position.

Return value; the tooltip text. 

=begin comment

=head2 Example
# Example for get-icon-tooltip-markup

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-icon-tooltip-text

Gets the contents of the tooltip on the icon at the specified
position in C<$entry>.

=begin code
method get-icon-tooltip-text ( GtkEntryIconPosition $icon-pos --> Str )
=end code

=item $icon-pos; the icon position.

Return value; the tooltip text. 

=begin comment

=head2 Example
# Example for get-icon-tooltip-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-input-hints

Gets the input hints of this B<Gnome::Gtk4::Entry>.

=begin code
method get-input-hints (--> UInt )
=end code

Return value; the input hints. 

=begin comment

=head2 Example
# Example for get-input-hints

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-input-purpose

Gets the input purpose of the B<Gnome::Gtk4::Entry>.

=begin code
method get-input-purpose (--> GtkInputPurpose )
=end code

Return value; the input purpose. 

=begin comment

=head2 Example
# Example for get-input-purpose

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-invisible-char

Retrieves the character displayed in place of the actual text
in “password mode”.

=begin code
method get-invisible-char (--> UInt )
=end code

Return value; the current invisible char, or 0, if the entry does not
  show invisible text at all.. 

=begin comment

=head2 Example
# Example for get-invisible-char

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-max-length

Retrieves the maximum allowed length of the text in C<$entry>.

See C<.set-max-length()>.

=begin code
method get-max-length (--> Int )
=end code

Return value; the maximum allowed number of characters
  in B<Gnome::Gtk4::Entry>, or 0 if there is no maximum.. 

=begin comment

=head2 Example
# Example for get-max-length

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-overwrite-mode

Gets whether the B<Gnome::Gtk4::Entry> is in overwrite mode.

=begin code
method get-overwrite-mode (--> Bool )
=end code

Return value; whether the text is overwritten when typing.. 

=begin comment

=head2 Example
# Example for get-overwrite-mode

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-placeholder-text

Retrieves the text that will be displayed when C<$entry>
is empty and unfocused

=begin code
method get-placeholder-text (--> Str )
=end code

Return value; a pointer to the
  placeholder text as a string. This string points to
  internally allocated storage in the widget and must
  not be freed, modified or stored. If no placeholder
  text has been set, undefined will be returned.. 

=begin comment

=head2 Example
# Example for get-placeholder-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-progress-fraction

Returns the current fraction of the task that’s been completed.

See C<.set-progress-fraction()>.

=begin code
method get-progress-fraction (--> Num )
=end code

Return value; a fraction from 0.0 to 1.0. 

=begin comment

=head2 Example
# Example for get-progress-fraction

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-progress-pulse-step

Retrieves the pulse step set with
C<.set-progress-pulse-step()>.

=begin code
method get-progress-pulse-step (--> Num )
=end code

Return value; a fraction from 0.0 to 1.0. 

=begin comment

=head2 Example
# Example for get-progress-pulse-step

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-tabs

Gets the tabstops of the B<Gnome::Gtk4::Entry>.

See C<.set-tabs()>.

=begin code
method get-tabs (--> N-Object )
=end code

Return value; the tabstops. 

=begin comment

=head2 Example
# Example for get-tabs

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-text-length

Retrieves the current length of the text in C<$entry>.

This is equivalent to getting C<$entry>'s B<Gnome::Gtk4::EntryBuffer>
and calling C<.get-length() in class Gnome::Gtk4::EntryBuffer> on it.

=begin code
method get-text-length (--> UInt )
=end code

Return value; the current number of characters
  in B<Gnome::Gtk4::Entry>, or 0 if there are none.. 

=begin comment

=head2 Example
# Example for get-text-length

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-visibility

Retrieves whether the text in C<$entry> is visible.

See C<.set-visibility()>.

=begin code
method get-visibility (--> Bool )
=end code

Return value; C<True> if the text is currently visible. 

=begin comment

=head2 Example
# Example for get-visibility

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 grab-focus-without-selecting

Causes C<$entry> to have keyboard focus.

It behaves like C<.grab-focus() in class Gnome::Gtk4::Widget>, except that it doesn't
select the contents of the entry. You only want to call this on some
special entries which the user usually doesn't want to replace all text
in, such as search-as-you-type entries.

=begin code
method grab-focus-without-selecting (--> Bool )
=end code

Return value; C<True> if focus is now inside C<$self>. 

=begin comment

=head2 Example
# Example for grab-focus-without-selecting

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 progress-pulse

Indicates that some progress is made, but you don’t
know how much.

Causes the entry’s progress indicator to enter “activity
mode”, where a block bounces back and forth. Each call to
C<.progress-pulse()> causes the block to move by a
little bit (the amount of movement per pulse is determined
by C<.set-progress-pulse-step()>).

=begin code
method progress-pulse ( )
=end code

=begin comment

=head2 Example
# Example for progress-pulse

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 reset-im-context

Reset the input method context of the entry if needed.

This can be necessary in the case where modifying the buffer
would confuse on-going input method behavior.

=begin code
method reset-im-context ( )
=end code

=begin comment

=head2 Example
# Example for reset-im-context

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-activates-default

Sets whether pressing Enter in the C<$entry> will activate the default
widget for the window containing the entry.

This usually means that the dialog containing the entry will be closed,
since the default widget is usually one of the dialog buttons.

=begin code
method set-activates-default ( Bool() $setting )
=end code

=item $setting; C<True> to activate window’s default widget on Enter keypress.

=begin comment

=head2 Example
# Example for set-activates-default

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-alignment

Sets the alignment for the contents of the entry.

This controls the horizontal positioning of the contents when
the displayed text is shorter than the width of the entry.

See also: I<xalign defined in Gnome::Gtk4::R-Editable>

=begin code
method set-alignment ( Num() $xalign )
=end code

=item $xalign; The horizontal alignment, from 0 (left) to 1 (right).
  Reversed for RTL layouts.

=begin comment

=head2 Example
# Example for set-alignment

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-attributes

Sets a B<Gnome::Pango::N-AttrList>.

The attributes in the list are applied to the entry text.

Since the attributes will be applied to text that changes
as the user types, it makes most sense to use attributes
with unlimited extent.

=begin code
method set-attributes ( N-Object $attrs )
=end code

=item $attrs; a B<Gnome::Pango::N-AttrList>

=begin comment

=head2 Example
# Example for set-attributes

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-buffer

Set the B<Gnome::Gtk4::EntryBuffer> object which holds the text for
this widget.

=begin code
method set-buffer ( N-Object() $buffer )
=end code

=item $buffer; a B<Gnome::Gtk4::EntryBuffer>.

=begin comment

=head2 Example
# Example for set-buffer

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-completion

B<Note: The native version of this routine is deprecated in gtk4-lib() since version 4.10>

Sets C<$completion> to be the auxiliary completion object
to use with C<$entry>.

All further configuration of the completion mechanism is
done on C<$completion> using the B<Gnome::Gtk4::EntryCompletion> API.
Completion is disabled if C<$completion> is set to undefined.

=begin code
method set-completion ( N-Object() $completion )
=end code

=item $completion; The B<Gnome::Gtk4::EntryCompletion>.

=begin comment

=head2 Example
# Example for set-completion

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-extra-menu

Sets a menu model to add when constructing
the context menu for C<$entry>.

=begin code
method set-extra-menu ( N-Object() $model )
=end code

=item $model; a B<Gnome::Gio::MenuModel>.

=begin comment

=head2 Example
# Example for set-extra-menu

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-has-frame

Sets whether the entry has a beveled frame around it.

=begin code
method set-has-frame ( Bool() $setting )
=end code

=item $setting; new value.

=begin comment

=head2 Example
# Example for set-has-frame

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-activatable

Sets whether the icon is activatable.

=begin code
method set-icon-activatable ( GtkEntryIconPosition $icon-pos, Bool() $activatable )
=end code

=item $icon-pos; Icon position.
=item $activatable; C<True> if the icon should be activatable.

=begin comment

=head2 Example
# Example for set-icon-activatable

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-drag-source

Sets up the icon at the given position as drag source.

This makes it so that GTK will start a drag
operation when the user clicks and drags the icon.

=begin code
method set-icon-drag-source ( GtkEntryIconPosition $icon-pos, N-Object() $provider, UInt $actions )
=end code

=item $icon-pos; icon position.
=item $provider; a B<Gnome::Gdk4::ContentProvider>.
=item $actions; a bitmask of the allowed drag actions.

=begin comment

=head2 Example
# Example for set-icon-drag-source

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-from-gicon

Sets the icon shown in the entry at the specified position
from the current icon theme.

If the icon isn’t known, a “broken image” icon will be
displayed instead.

If C<$icon> is undefined, no icon will be shown in the
specified position.

=begin code
method set-icon-from-gicon ( GtkEntryIconPosition $icon-pos, N-Object() $icon )
=end code

=item $icon-pos; The position at which to set the icon.
=item $icon; The icon to set.

=begin comment

=head2 Example
# Example for set-icon-from-gicon

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-from-icon-name

Sets the icon shown in the entry at the specified position
from the current icon theme.

If the icon name isn’t known, a “broken image” icon will be
displayed instead.

If C<$icon-name> is undefined, no icon will be shown in the
specified position.

=begin code
method set-icon-from-icon-name ( GtkEntryIconPosition $icon-pos, Str $icon-name )
=end code

=item $icon-pos; The position at which to set the icon.
=item $icon-name; An icon name.

=begin comment

=head2 Example
# Example for set-icon-from-icon-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-from-paintable

Sets the icon shown in the specified position using a B<Gnome::Gdk4::R-Paintable>.

If C<$paintable> is undefined, no icon will be shown in the specified position.

=begin code
method set-icon-from-paintable ( GtkEntryIconPosition $icon-pos, N-Object() $paintable )
=end code

=item $icon-pos; Icon position.
=item $paintable; A B<Gnome::Gdk4::R-Paintable>.

=begin comment

=head2 Example
# Example for set-icon-from-paintable

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-sensitive

Sets the sensitivity for the specified icon.

=begin code
method set-icon-sensitive ( GtkEntryIconPosition $icon-pos, Bool() $sensitive )
=end code

=item $icon-pos; Icon position.
=item $sensitive; Specifies whether the icon should appear
  sensitive or insensitive.

=begin comment

=head2 Example
# Example for set-icon-sensitive

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-tooltip-markup

Sets C<$tooltip> as the contents of the tooltip for the icon at
the specified position.
 C<$tooltip> is assumed to be marked up with Pango Markup.

Use undefined for C<$tooltip> to remove an existing tooltip.

See also C<.set-tooltip-markup() in class Gnome::Gtk4::Widget> and
C<.set-icon-tooltip-text()>.

=begin code
method set-icon-tooltip-markup ( GtkEntryIconPosition $icon-pos, Str $tooltip )
=end code

=item $icon-pos; the icon position.
=item $tooltip; the contents of the tooltip for the icon.

=begin comment

=head2 Example
# Example for set-icon-tooltip-markup

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-icon-tooltip-text

Sets C<$tooltip> as the contents of the tooltip for the icon
at the specified position.

Use undefined for C<$tooltip> to remove an existing tooltip.

See also C<.set-tooltip-text() in class Gnome::Gtk4::Widget> and
C<.set-icon-tooltip-markup()>.

If you unset the widget tooltip via
C<.set-tooltip-text() in class Gnome::Gtk4::Widget> or
C<.set-tooltip-markup() in class Gnome::Gtk4::Widget>, this sets
I<has-tooltip defined in Gnome::Gtk4::Widget> to C<False>, which suppresses
icon tooltips too. You can resolve this by then calling
C<.set-has-tooltip() in class Gnome::Gtk4::Widget> to set
I<has-tooltip defined in Gnome::Gtk4::Widget> back to C<True>, or
setting at least one non-empty tooltip on any icon
achieves the same result.

=begin code
method set-icon-tooltip-text ( GtkEntryIconPosition $icon-pos, Str $tooltip )
=end code

=item $icon-pos; the icon position.
=item $tooltip; the contents of the tooltip for the icon.

=begin comment

=head2 Example
# Example for set-icon-tooltip-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-input-hints

Set additional hints which allow input methods to
fine-tune their behavior.

=begin code
method set-input-hints ( UInt $hints )
=end code

=item $hints; the hints.

=begin comment

=head2 Example
# Example for set-input-hints

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-input-purpose

Sets the input purpose which can be used by input methods
to adjust their behavior.

=begin code
method set-input-purpose ( GtkInputPurpose $purpose )
=end code

=item $purpose; the purpose.

=begin comment

=head2 Example
# Example for set-input-purpose

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-invisible-char

Sets the character to use in place of the actual text
in “password mode”.

See C<.set-visibility()> for how to enable
“password mode”.

By default, GTK picks the best invisible char available in
the current font. If you set the invisible char to 0, then
the user will get no feedback at all; there will be no text
on the screen as they type.

=begin code
method set-invisible-char ( UInt() $ch )
=end code

=item $ch; a Unicode character.

=begin comment

=head2 Example
# Example for set-invisible-char

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-max-length

Sets the maximum allowed length of the contents of the widget.

If the current contents are longer than the given length, then
they will be truncated to fit. The length is in characters.

This is equivalent to getting C<$entry>'s B<Gnome::Gtk4::EntryBuffer> and
calling C<.set-max-length() in class Gnome::Gtk4::EntryBuffer> on it.

=begin code
method set-max-length ( Int() $max )
=end code

=item $max; the maximum length of the entry, or 0 for no maximum.
  (other than the maximum length of entries.) The value passed in will
  be clamped to the range 0-65536..

=begin comment

=head2 Example
# Example for set-max-length

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-overwrite-mode

Sets whether the text is overwritten when typing in the B<Gnome::Gtk4::Entry>.

=begin code
method set-overwrite-mode ( Bool() $overwrite )
=end code

=item $overwrite; new value.

=begin comment

=head2 Example
# Example for set-overwrite-mode

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-placeholder-text

Sets text to be displayed in C<$entry> when it is empty.

This can be used to give a visual hint of the expected
contents of the B<Gnome::Gtk4::Entry>.

=begin code
method set-placeholder-text ( Str $text )
=end code

=item $text; a string to be displayed when C<$entry> is empty and unfocused.

=begin comment

=head2 Example
# Example for set-placeholder-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-progress-fraction

Causes the entry’s progress indicator to “fill in” the given
fraction of the bar.

The fraction should be between 0.0 and 1.0, inclusive.

=begin code
method set-progress-fraction ( Num() $fraction )
=end code

=item $fraction; fraction of the task that’s been completed.

=begin comment

=head2 Example
# Example for set-progress-fraction

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-progress-pulse-step

Sets the fraction of total entry width to move the progress
bouncing block for each pulse.

Use C<.progress-pulse()> to pulse
the progress.

=begin code
method set-progress-pulse-step ( Num() $fraction )
=end code

=item $fraction; fraction between 0.0 and 1.0.

=begin comment

=head2 Example
# Example for set-progress-pulse-step

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-tabs

Sets a B<Gnome::Pango::N-TabArray>.

The tabstops in the array are applied to the entry text.

=begin code
method set-tabs ( N-Object $tabs )
=end code

=item $tabs; a B<Gnome::Pango::N-TabArray>

=begin comment

=head2 Example
# Example for set-tabs

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-visibility

Sets whether the contents of the entry are visible or not.

When visibility is set to C<False>, characters are displayed
as the invisible char, and will also appear that way when
the text in the entry widget is copied elsewhere.

By default, GTK picks the best invisible character available
in the current font, but it can be changed with
C<.set-invisible-char()>.

Note that you probably want to set I<input-purpose>
to C<GTK_INPUT_PURPOSE_PASSWORD> or C<GTK_INPUT_PURPOSE_PIN> to
inform input methods about the purpose of this entry,
in addition to setting visibility to C<False>.

=begin code
method set-visibility ( Bool() $visible )
=end code

=item $visible; C<True> if the contents of the entry are displayed as plaintext.

=begin comment

=head2 Example
# Example for set-visibility

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 unset-invisible-char

Unsets the invisible char, so that the default invisible char
is used again. See C<.set-invisible-char()>.

=begin code
method unset-invisible-char ( )
=end code

=begin comment

=head2 Example
# Example for unset-invisible-char

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 activate

Emitted when the entry is activated.

The keybindings for this signal are all forms of the Enter key.

=begin code
method handler (
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Entry :$_widget,
  *C<user>-options
)
=end code

=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Entry> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal activate

=end comment

=comment -----------------------------------------------------------------------
=head3 icon-press

Emitted when an activatable icon is clicked.

=begin code
method handler (
   $icon-pos,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Entry :$_widget,
  *C<user>-options
)
=end code

=item $icon-pos; The position of the clicked icon.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Entry> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal icon-press

=end comment

=comment -----------------------------------------------------------------------
=head3 icon-release

Emitted on the button release from a mouse click
over an activatable icon.

=begin code
method handler (
   $icon-pos,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::Entry :$_widget,
  *C<user>-options
)
=end code

=item $icon-pos; The position of the clicked icon.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::Entry> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal icon-release

=end comment

=end pod

