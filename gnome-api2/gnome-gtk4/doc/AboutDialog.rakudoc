#TL:1:pod doc of Gnome::Gtk4::AboutDialog:
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Gnome::Gtk4::AboutDialog


![](images/aboutdialog.png)

=head1 Description

The `GtkAboutDialog` offers a simple way to display information about
a program.

The shown information includes the programs' logo, name, copyright,
website and license. It is also possible to give credits to the authors,
documenters, translators and artists who have worked on the program.

An about dialog is typically opened when the user selects the `About`
option from the `Help` menu. All parts of the dialog are optional.

![An example GtkAboutDialog](aboutdialog.png)

About dialogs often contain links and email addresses. `GtkAboutDialog`
displays these as clickable links. By default, it calls [func C<$Gtk>.show_uri]
when a user clicks one. The behaviour can be overridden with the
I<activate-link> signal.

To specify a person with an email address, use a string like
`Edgar Allan Poe <edgar C<$poe>.com>`. To specify a website with a title,
use a string like `GTK team https://www.gtk.org`.

To make constructing a `GtkAboutDialog` as convenient as possible, you can
use the function [func C<$Gtk>.show_about_dialog] which constructs and shows
a dialog and keeps it around so that it can be shown again.

Note that GTK sets a default title of `_("About %s")` on the dialog
window (where `%s` is replaced by the name of the application, but in
order to ensure proper translation of the title, applications should
set the title property explicitly when constructing a `GtkAboutDialog`,
as shown in the following example:

```c
GFile *logo_file = g_file_new_for_path ("./logo.png");
GdkTexture *example_logo = gdk_texture_new_from_file (logo_file, NULL);
g_object_unref (logo_file);

gtk_show_about_dialog (NULL,
                       "program-name", "ExampleCode",
                       "logo", example_logo,
                       "title", _("About ExampleCode"),
                       NULL);
```

## CSS nodes

`GtkAboutDialog` has a single CSS node with the name `window` and style
class `.aboutdialog`.

=begin comment
=head2 Uml Diagram
![](plantuml/Label.svg)
=end comment

=begin comment
=head2 Example
  … text …
  … example code …
=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head1 Class initialization

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

#TM:1:new:
=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-GObject :$native-object! )


=head3 :build-id

Create an object using a native object from a builder. See also B<Gnome::GObject::Object>.

  multi method new ( Str :$build-id! )

=end pod

#-------------------------------------------------------------------------------
#--[Constructors]---------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Constructors
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-aboutdialog

Creates a new `GtkAboutDialog`.

=begin code
method new-aboutdialog (
  --> Gnome::Gtk4::AboutDialog
)
=end code


=end pod
#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 add-credit-section

Creates a new section in the "Credits" page.

=begin code
method add-credit-section (  Str $section-name, Array[Str] $people )
=end code

=item $section-name; The name of the section.
=item $people; The people who belong to that section.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-artists

Returns the names of the artists which are displayed in the credits page.

=begin code
method get-artists ( --> Array[Str] )
=end code



Return value; A
 `NULL`-terminated string array containing the artists. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-authors

Returns the names of the authors which are displayed in the credits page.

=begin code
method get-authors ( --> Array[Str] )
=end code



Return value; A
 `NULL`-terminated string array containing the authors. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-comments

Returns the comments string.

=begin code
method get-comments ( --> Str )
=end code



Return value; The comments. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-copyright

Returns the copyright string.

=begin code
method get-copyright ( --> Str )
=end code



Return value; The copyright string. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-documenters

Returns the name of the documenters which are displayed in the credits page.

=begin code
method get-documenters ( --> Array[Str] )
=end code



Return value; A
 `NULL`-terminated string array containing the documenters. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-license

Returns the license information.

=begin code
method get-license ( --> Str )
=end code



Return value; The license information. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-license-type

Retrieves the license type.

=begin code
method get-license-type ( --> GtkLicense )
=end code



Return value; a C<GtkLicense> enumeration value.  An enumeration.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-logo

Returns the paintable displayed as logo in the about dialog.

=begin code
method get-logo ( --> N-GObject() )
=end code



Return value; the paintable displayed as
 logo or `NULL` if the logo is unset or has been set via
 C<.set_logo_icon_name()>. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-logo-icon-name

Returns the icon name displayed as logo in the about dialog.

=begin code
method get-logo-icon-name ( --> Str )
=end code



Return value; the icon name displayed as logo,
 or `NULL` if the logo has been set via C<.set_logo()>. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-program-name

Returns the program name displayed in the about dialog.

=begin code
method get-program-name ( --> Str )
=end code



Return value; The program name. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-system-information

Returns the system information that is shown in the about dialog.

=begin code
method get-system-information ( --> Str )
=end code



Return value; the system information. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-translator-credits

Returns the translator credits string which is displayed in the credits page.

=begin code
method get-translator-credits ( --> Str )
=end code



Return value; The translator credits string. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-version

Returns the version string.

=begin code
method get-version ( --> Str )
=end code



Return value; The version string. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-website

Returns the website URL.

=begin code
method get-website ( --> Str )
=end code



Return value; The website URL. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-website-label

Returns the label used for the website link.

=begin code
method get-website-label ( --> Str )
=end code



Return value; The label used for the website link. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 get-wrap-license

Returns whether the license text in the about dialog is automatically wrapped.

=begin code
method get-wrap-license ( --> Bool() )
=end code



Return value; `TRUE` if the license text is wrapped. 


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-artists

Sets the names of the artists to be displayed in the "Credits" page.

=begin code
method set-artists (  Array[Str] $artists )
=end code

=item $artists; the authors of the artwork
 of the application.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-authors

Sets the names of the authors which are displayed in the "Credits" page of the about dialog.

=begin code
method set-authors (  Array[Str] $authors )
=end code

=item $authors; the authors of the application.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-comments

Sets the comments string to display in the about dialog.

This should be a short string of one or two lines.

=begin code
method set-comments (  Str $comments )
=end code

=item $comments; a comments string.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-copyright

Sets the copyright string to display in the about dialog.

This should be a short string of one or two lines.

=begin code
method set-copyright (  Str $copyright )
=end code

=item $copyright; the copyright string.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-documenters

Sets the names of the documenters which are displayed in the "Credits" page.

=begin code
method set-documenters (  Array[Str] $documenters )
=end code

=item $documenters; the authors of the documentation
 of the application.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-license

Sets the license information to be displayed in the about dialog.

If `license` is `NULL`, the license page is hidden.

=begin code
method set-license (  Str $license )
=end code

=item $license; the license information.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-license-type

Sets the license of the application showing the about dialog from a list of known licenses.

This function overrides the license set using C<.set_license()>.

=begin code
method set-license-type (  GtkLicense $license-type )
=end code

=item $license-type; the type of license. An enumeration.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-logo

Sets the logo in the about dialog.

=begin code
method set-logo (  N-GObject() $logo )
=end code

=item $logo; a `GdkPaintable`.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-logo-icon-name

Sets the icon name to be displayed as logo in the about dialog.

=begin code
method set-logo-icon-name (  Str $icon-name )
=end code

=item $icon-name; an icon name.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-program-name

Sets the name to display in the about dialog.

If `name` is not set, the string returned by `g_get_application_name()` is used.

=begin code
method set-program-name (  Str $name )
=end code

=item $name; the program name.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-system-information

Sets the system information to be displayed in the about dialog.

If `system_information` is `NULL`, the system information page is hidden.

See I<system-information>.

=begin code
method set-system-information (  Str $system-information )
=end code

=item $system-information; system information.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-translator-credits

Sets the translator credits string which is displayed in the credits page.

The intended use for this string is to display the translator of the language which is currently used in the user interface.
Using `gettext()`, a simple way to achieve that is to mark the string for translation:

```c GtkWidget *about = gtk_about_dialog_new ();
 gtk_about_dialog_set_translator_credits (GTK_ABOUT_DIALOG (about),
 _("translator-credits"));
```

It is a good idea to use the customary `msgid` “translator-credits”
for this purpose, since translators will already know the purpose of that `msgid`, and since `GtkAboutDialog` will detect if “translator-credits”
is untranslated and omit translator credits.

=begin code
method set-translator-credits (  Str $translator-credits )
=end code

=item $translator-credits; the translator credits.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-version

Sets the version string to display in the about dialog.

=begin code
method set-version (  Str $version )
=end code

=item $version; the version string.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-website

Sets the URL to use for the website link.

=begin code
method set-website (  Str $website )
=end code

=item $website; a URL string starting with `http://`.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-website-label

Sets the label to be used for the website link.

=begin code
method set-website-label (  Str $website-label )
=end code

=item $website-label; the label used for the website link.


=end pod
#-------------------------------------------------------------------------------
=begin pod
=head2 set-wrap-license

Sets whether the license text in the about dialog should be automatically wrapped.

=begin code
method set-wrap-license (  Bool() $wrap-license )
=end code

=item $wrap-license; whether to wrap the license.


=end pod
#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 activate-link

Emitted every time a URL is activated.

Applications may connect to it to override the default behaviour,
which is to call [func C<$Gtk>.show_uri].

=begin code
method handler (
  Str $uri,
  Int :$_handle_id,
  Gnome::Gtk4::AboutDialog() :$_native-object,
  Gnome::Gtk4::AboutDialog :$_widget,
  *%user-options
  --> gboolean
)
=end code

=item $uri; the URI that is activated.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item %user-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

Return value; 

=end pod

