=comment Package: Gtk4, C-Source: aboutdialog
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gtk4::AboutDialog
=head1 Description

The B<Gnome::Gtk4::AboutDialog> offers a simple way to display information about
a program.

The shown information includes the programs' logo, name, copyright,
website and license. It is also possible to give credits to the authors,
documenters, translators and artists who have worked on the program.

An about dialog is typically opened when the user selects the B<About>
option from the B<Help> menu. All parts of the dialog are optional.

=for image :src<asset_files/images/aboutdialog.png> :width<30%> :class<inline>

About dialogs often contain links and email addresses. B<Gnome::Gtk4::AboutDialog>
displays these as clickable links. By default, it calls C<.launch()> in class C<Gnome::Gtk4::FileLauncher>
when a user clicks one. The behaviour can be overridden with the
I<activate-link> signal.

To specify a person with an email address, use a string like
B<Edgar> Allan Poe <edgar C<$poe>.com>`. To specify a website with a title,
use a string like B<GTK> team https://www.gtk.org`.

To make constructing a B<Gnome::Gtk4::AboutDialog> as convenient as possible, you can
use the function C<.show-about-dialog()> which constructs and shows
a dialog and keeps it around so that it can be shown again.

Note that GTK sets a default title of B<_>("About C<s>")` on the dialog
window (where B<C><s>` is replaced by the name of the application, but in
order to ensure proper translation of the title, applications should
set the title property explicitly when constructing a B<Gnome::Gtk4::AboutDialog>,
as shown in the following example:

=begin code
use Gnome::Gtk4::Window:api<2>;
use Gnome::Gtk4::AboutDialog:api<2>;
use Gnome::Gtk4::T-AboutDialog:api<2>;

my Gnome::Gtk4::Window $window .= new-window;

my Gnome::Gtk4::AboutDialog $about .= new-about-dialog;
$about.set-transient-for($window);
$about.set-version('0.21.4');
$about.set-license-type(GTK_LICENSE_ARTISTIC);

# Normally run() is started by a menu select or button click
$about.run;   # application stays here in separate main loop
$about.hide;  # application returns here when buttons
              # on dialog are pressed
=end code

=head3 CSS nodes

B<Gnome::Gtk4::AboutDialog> has a single CSS node with the name B<window> and style
class `.aboutdialog`.

=head2 Uml Diagram
=for image :src<asset_files/images/plantuml/AboutDialog.png> :width<70%> :class<inline>

=begin comment
=head2 Example
# Example use of module Gnome::Gtk4::AboutDialog
=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-aboutdialog

Creates a new B<Gnome::Gtk4::AboutDialog>.

=begin code
method new-aboutdialog ( --> Gnome::Gtk4::AboutDialog )
=end code

=begin comment

=head2 Example
# Example for new-aboutdialog

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 add-credit-section

Creates a new section in the "Credits" page.

=begin code
method add-credit-section ( Str $section-name, Array[Str] $people )
=end code

=item $section-name; The name of the section.
=item $people; The people who belong to that section.

=begin comment

=head2 Example
# Example for add-credit-section

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-artists

Returns the names of the artists which are displayed
in the credits page.

=begin code
method get-artists (--> Array[Str] )
=end code

Return value; A
  string array containing the artists. 

=begin comment

=head2 Example
# Example for get-artists

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-authors

Returns the names of the authors which are displayed
in the credits page.

=begin code
method get-authors (--> Array[Str] )
=end code

Return value; A
  string array containing the authors. 

=begin comment

=head2 Example
# Example for get-authors

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-comments

Returns the comments string.

=begin code
method get-comments (--> Str )
=end code

Return value; The comments. 

=begin comment

=head2 Example
# Example for get-comments

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-copyright

Returns the copyright string.

=begin code
method get-copyright (--> Str )
=end code

Return value; The copyright string. 

=begin comment

=head2 Example
# Example for get-copyright

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-documenters

Returns the name of the documenters which are displayed
in the credits page.

=begin code
method get-documenters (--> Array[Str] )
=end code

Return value; A
  string array containing the documenters. 

=begin comment

=head2 Example
# Example for get-documenters

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-license

Returns the license information.

=begin code
method get-license (--> Str )
=end code

Return value; The license information. 

=begin comment

=head2 Example
# Example for get-license

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-license-type

Retrieves the license type.

=begin code
method get-license-type (--> GtkLicense )
=end code

Return value; a  enumeration C<License> from C<Gnome::Gtk4::T-aboutdialog>  value. 

=begin comment

=head2 Example
# Example for get-license-type

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-logo

Returns the paintable displayed as logo in the about dialog.

=begin code
method get-logo (--> N-Object )
=end code

Return value; the paintable displayed as
  logo or undefined if the logo is unset or has been set via
  C<.set-logo-icon-name()>. 

=begin comment

=head2 Example
# Example for get-logo

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-logo-icon-name

Returns the icon name displayed as logo in the about dialog.

=begin code
method get-logo-icon-name (--> Str )
=end code

Return value; the icon name displayed as logo,
  or undefined if the logo has been set via C<.set-logo()>. 

=begin comment

=head2 Example
# Example for get-logo-icon-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-program-name

Returns the program name displayed in the about dialog.

=begin code
method get-program-name (--> Str )
=end code

Return value; The program name. 

=begin comment

=head2 Example
# Example for get-program-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-system-information

Returns the system information that is shown in the about dialog.

=begin code
method get-system-information (--> Str )
=end code

Return value; the system information. 

=begin comment

=head2 Example
# Example for get-system-information

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-translator-credits

Returns the translator credits string which is displayed
in the credits page.

=begin code
method get-translator-credits (--> Str )
=end code

Return value; The translator credits string. 

=begin comment

=head2 Example
# Example for get-translator-credits

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-version

Returns the version string.

=begin code
method get-version (--> Str )
=end code

Return value; The version string. 

=begin comment

=head2 Example
# Example for get-version

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-website

Returns the website URL.

=begin code
method get-website (--> Str )
=end code

Return value; The website URL. 

=begin comment

=head2 Example
# Example for get-website

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-website-label

Returns the label used for the website link.

=begin code
method get-website-label (--> Str )
=end code

Return value; The label used for the website link. 

=begin comment

=head2 Example
# Example for get-website-label

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-wrap-license

Returns whether the license text in the about dialog is
automatically wrapped.

=begin code
method get-wrap-license (--> Bool )
=end code

Return value; C<True> if the license text is wrapped. 

=begin comment

=head2 Example
# Example for get-wrap-license

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-artists

Sets the names of the artists to be displayed
in the "Credits" page.

=begin code
method set-artists ( Array[Str] $artists )
=end code

=item $artists; the authors of the artwork
  of the application.

=begin comment

=head2 Example
# Example for set-artists

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-authors

Sets the names of the authors which are displayed
in the "Credits" page of the about dialog.

=begin code
method set-authors ( Array[Str] $authors )
=end code

=item $authors; the authors of the application.

=begin comment

=head2 Example
# Example for set-authors

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-comments

Sets the comments string to display in the about dialog.

This should be a short string of one or two lines.

=begin code
method set-comments ( Str $comments )
=end code

=item $comments; a comments string.

=begin comment

=head2 Example
# Example for set-comments

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-copyright

Sets the copyright string to display in the about dialog.

This should be a short string of one or two lines.

=begin code
method set-copyright ( Str $copyright )
=end code

=item $copyright; the copyright string.

=begin comment

=head2 Example
# Example for set-copyright

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-documenters

Sets the names of the documenters which are displayed
in the "Credits" page.

=begin code
method set-documenters ( Array[Str] $documenters )
=end code

=item $documenters; the authors of the documentation
  of the application.

=begin comment

=head2 Example
# Example for set-documenters

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-license

Sets the license information to be displayed in the
about dialog.

If B<license> is undefined, the license page is hidden.

=begin code
method set-license ( Str $license )
=end code

=item $license; the license information.

=begin comment

=head2 Example
# Example for set-license

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-license-type

Sets the license of the application showing the about dialog from a
list of known licenses.

This function overrides the license set using
C<.set-license()>.

=begin code
method set-license-type ( GtkLicense $license-type )
=end code

=item $license-type; the type of license.

=begin comment

=head2 Example
# Example for set-license-type

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-logo

Sets the logo in the about dialog.

=begin code
method set-logo ( N-Object() $logo )
=end code

=item $logo; a B<Gnome::Gdk4::R-Paintable>.

=begin comment

=head2 Example
# Example for set-logo

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-logo-icon-name

Sets the icon name to be displayed as logo in the about dialog.

=begin code
method set-logo-icon-name ( Str $icon-name )
=end code

=item $icon-name; an icon name.

=begin comment

=head2 Example
# Example for set-logo-icon-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-program-name

Sets the name to display in the about dialog.

If B<name> is not set, the string returned
by B<Gnome::Glib::T-utils>()` is used.

=begin code
method set-program-name ( Str $name )
=end code

=item $name; the program name.

=begin comment

=head2 Example
# Example for set-program-name

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-system-information

Sets the system information to be displayed in the about
dialog.

If B<system_information> is undefined, the system information
page is hidden.

See I<system-information>.

=begin code
method set-system-information ( Str $system-information )
=end code

=item $system-information; system information.

=begin comment

=head2 Example
# Example for set-system-information

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-translator-credits

Sets the translator credits string which is displayed in
the credits page.

The intended use for this string is to display the translator
of the language which is currently used in the user interface.
Using B<gettext>()`, a simple way to achieve that is to mark the
string for translation:

=begin comment
my Gnome::Gtk4::AboutDialog $about .= new-about-dialog;
$about.set-translator-credits("translator-credits"));
=end comment

It is a good idea to use the customary B<msgid> “translator-credits”
for this purpose, since translators will already know the purpose of
that B<msgid>, and since B<Gnome::Gtk4::AboutDialog> will detect if “translator-credits”
is untranslated and omit translator credits.

=begin code
method set-translator-credits ( Str $translator-credits )
=end code

=item $translator-credits; the translator credits.

=begin comment

=head2 Example
# Example for set-translator-credits

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-version

Sets the version string to display in the about dialog.

=begin code
method set-version ( Str $version )
=end code

=item $version; the version string.

=begin comment

=head2 Example
# Example for set-version

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-website

Sets the URL to use for the website link.

=begin code
method set-website ( Str $website )
=end code

=item $website; a URL string starting with B<http>://`.

=begin comment

=head2 Example
# Example for set-website

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-website-label

Sets the label to be used for the website link.

=begin code
method set-website-label ( Str $website-label )
=end code

=item $website-label; the label used for the website link.

=begin comment

=head2 Example
# Example for set-website-label

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-wrap-license

Sets whether the license text in the about dialog should be
automatically wrapped.

=begin code
method set-wrap-license ( Bool() $wrap-license )
=end code

=item $wrap-license; whether to wrap the license.

=begin comment

=head2 Example
# Example for set-wrap-license

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 activate-link

Emitted every time a URL is activated.

Applications may connect to it to override the default behaviour,
which is to call C<.launch()> in class C<Gnome::Gtk4::FileLauncher>.

=begin code
method handler (
  Str $uri,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::AboutDialog :$_widget,
  *C<user>-options
  --> gboolean
)
=end code

=item $uri; the URI that is activated.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::AboutDialog> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

Return value; C<True> if the link has been activated

=begin comment

=head2 Example
# Example for signal activate-link

=end comment

=end pod

