=comment Package: Gtk4, C-Source: appchooserwidget
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Gnome::Gtk4::AppChooserWidget

![](images/appchooserwidget.png)

=head1 Description

B<Gnome::Gtk4::AppChooserWidget> is a widget for selecting applications.

It is the main building block for B<Gnome::Gtk4::AppChooserDialog>.
Most applications only need to use the latter; but you can use
this widget as part of a larger widget if you have special needs.

B<Gnome::Gtk4::AppChooserWidget> offers detailed control over what applications
are shown, using the
I<show-default>,
I<show-recommended>,
I<show-fallback>,
I<show-other> and
I<show-all> properties. See the
B<Gnome::Gtk4::R-AppChooser> documentation for more information about these
groups of applications.

To keep track of the selected application, use the
I<application-selected> and
I<application-activated> signals.

=head2 CSS nodes

B<Gnome::Gtk4::AppChooserWidget> has a single CSS node with name appchooser.

=begin comment

=head2 Uml Diagram
![](plantuml/â€¦.svg)

=end comment

=begin comment

=head2 Example
# Example use of module Gnome::Gtk4::AppChooserWidget

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object :$native-object! )

=head3 :build-id

Create an object using a native object from a builder. See also B<Gnome::GObject::Object>.

  multi method new ( Str :$build-id! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-appchooserwidget

Creates a new B<Gnome::Gtk4::AppChooserWidget> for applications
that can handle content of the given type.

=begin code
method new-appchooserwidget ( Str $content-type --> Gnome::Gtk4::AppChooserWidget \)
=end code

=item $content-type; the content type to show applications for.

=begin comment

=head2 Example
# Example for new-appchooserwidget

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-default-text

Returns the text that is shown if there are not applications
that can handle the content type.

=begin code
method get-default-text (--> Str )
=end code

Return value; the value of I<default-text>. 

=begin comment

=head2 Example
# Example for get-default-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-show-all

Gets whether the app chooser should show all applications
in a flat list.

=begin code
method get-show-all (--> Bool )
=end code

Return value; the value of I<show-all>. 

=begin comment

=head2 Example
# Example for get-show-all

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-show-default

Gets whether the app chooser should show the default handler
for the content type in a separate section.

=begin code
method get-show-default (--> Bool )
=end code

Return value; the value of I<show-default>. 

=begin comment

=head2 Example
# Example for get-show-default

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-show-fallback

Gets whether the app chooser should show related applications
for the content type in a separate section.

=begin code
method get-show-fallback (--> Bool )
=end code

Return value; the value of I<show-fallback>. 

=begin comment

=head2 Example
# Example for get-show-fallback

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-show-other

Gets whether the app chooser should show applications
which are unrelated to the content type.

=begin code
method get-show-other (--> Bool )
=end code

Return value; the value of I<show-other>. 

=begin comment

=head2 Example
# Example for get-show-other

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-show-recommended

Gets whether the app chooser should show recommended applications
for the content type in a separate section.

=begin code
method get-show-recommended (--> Bool )
=end code

Return value; the value of I<show-recommended>. 

=begin comment

=head2 Example
# Example for get-show-recommended

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-default-text

Sets the text that is shown if there are not applications
that can handle the content type.

=begin code
method set-default-text ( Str $text )
=end code

=item $text; the new value for I<default-text>.

=begin comment

=head2 Example
# Example for set-default-text

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-show-all

Sets whether the app chooser should show all applications
in a flat list.

=begin code
method set-show-all ( Bool() $setting )
=end code

=item $setting; the new value for I<show-all>.

=begin comment

=head2 Example
# Example for set-show-all

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-show-default

Sets whether the app chooser should show the default handler
for the content type in a separate section.

=begin code
method set-show-default ( Bool() $setting )
=end code

=item $setting; the new value for I<show-default>.

=begin comment

=head2 Example
# Example for set-show-default

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-show-fallback

Sets whether the app chooser should show related applications
for the content type in a separate section.

=begin code
method set-show-fallback ( Bool() $setting )
=end code

=item $setting; the new value for I<show-fallback>.

=begin comment

=head2 Example
# Example for set-show-fallback

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-show-other

Sets whether the app chooser should show applications
which are unrelated to the content type.

=begin code
method set-show-other ( Bool() $setting )
=end code

=item $setting; the new value for I<show-other>.

=begin comment

=head2 Example
# Example for set-show-other

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 set-show-recommended

Sets whether the app chooser should show recommended applications
for the content type in a separate section.

=begin code
method set-show-recommended ( Bool() $setting )
=end code

=item $setting; the new value for I<show-recommended>.

=begin comment

=head2 Example
# Example for set-show-recommended

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Signal Documentation]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Signals

=comment -----------------------------------------------------------------------
=head3 application-activated

Emitted when an application item is activated from the widget's list.

This usually happens when the user double clicks an item, or an item
is selected and the user presses one of the keys Space, Shift+Space,
Return or Enter.

=begin code
method handler (
   $application,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::AppChooserWidget :$_widget,
  *C<user>-options
)
=end code

=item $application; the activated U<Gnome::Gio::R-AppInfo>.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::AppChooserWidget> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal application-activated

=end comment

=comment -----------------------------------------------------------------------
=head3 application-selected

Emitted when an application item is selected from the widget's list.

=begin code
method handler (
   $application,
  Int :$_handle_id,
  N-GObject :$_native-object,
  Gnome::Gtk4::AppChooserWidget :$_widget,
  *C<user>-options
)
=end code

=item $application; the selected U<Gnome::Gio::R-AppInfo>.
=item $_handle_id; The registered event handler id.
=item $_native-object; The native object provided by the Raku object which registered this event. This a native B<Gnome::Gtk4::AppChooserWidget> object.
=item $_widget; The object which registered the signal. User code may have left the object going out of scope.
=item C<user>-options; A list of named arguments provided at the C<.register-signal()> method from B<Gnome::GObject::Object>.

=begin comment

=head2 Example
# Example for signal application-selected

=end comment

=end pod

