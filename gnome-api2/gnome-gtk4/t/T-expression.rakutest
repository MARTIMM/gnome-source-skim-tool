=comment Package: Gtk4, C-Source: expression
use v6.d;

#TL:1:Gnome::Gtk4::T-expression:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use NativeCall;
use Test;


use Gnome::GObject::N-Value:api<2>;
use Gnome::GObject::T-value:api<2>;
use Gnome::Gtk4::T-expression:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;

#-------------------------------------------------------------------------------
#--[Test preparation]-----------------------------------------------------------
#-------------------------------------------------------------------------------

#Gnome::N::debug(:on);
my Gnome::Gtk4::T-expression $t-expression;

#-------------------------------------------------------------------------------
#--[Class init tests]-----------------------------------------------------------
#-------------------------------------------------------------------------------

subtest 'ISA test', {
  given $t-expression {

#`{{
}}
  }
};

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# set environment variable 'raku-test-all' if rest must be tested too.
unless %*ENV<raku_test_all>:exists {
  done-testing;
  exit;
}

#-------------------------------------------------------------------------------
subtest 'Method tests', {
  with $t-expression {
    my N-Object $value;


#`{{
    #TM:0:evaluate()
    ok .evaluate( $value), '.evaluate()';

    #TM:0:ref()
    ok .ref(), '.ref()';

    #TM:0:unref()
    ok .unref(), '.unref()';

    #TM:0:unwatch()
    ok .unwatch(), '.unwatch()';

}}
  }
};

#-------------------------------------------------------------------------------
subtest 'Function tests', {
  with $t-expression {


#`{{
}}
  }
};

#-------------------------------------------------------------------------------
done-testing;

=finish

