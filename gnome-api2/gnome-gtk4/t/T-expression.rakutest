=comment Package: Gtk4, C-Source: expression
use v6.d;

#TL:1:Gnome::Gtk4::T-expression:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use Test;
use NativeCall;



use Gnome::GObject::N-Value:api<2>;
#use Gnome::GObject::T-param:api<2>;
use Gnome::GObject::T-value:api<2>;
use Gnome::Gtk4::T-expression:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;




my Gnome::Gtk4::T-expression $expression .= new;
#-------------------------------------------------------------------------------
subtest 'Function tests', {
  with $expression {
    my Str $name;
    my Str $nick;
    my N-Object $expression;
    my GFlag $flags;
    my Str $blurb;
    my N-Object $value;


#`{{
    #TM:0:param-spec-expression()
    ok .param-spec-expression( $name, $nick, $blurb, $flags), '.param-spec-expression()';

    #TM:0:value-dup-expression()
    ok .value-dup-expression( $value), '.value-dup-expression()';

    #TM:0:value-get-expression()
    ok .value-get-expression( $value), '.value-get-expression()';

    #TM:0:value-set-expression()
    ok .value-set-expression( $value, $expression), '.value-set-expression()';

    #TM:0:value-take-expression()
    ok .value-take-expression( $value, $expression), '.value-take-expression()';

}}
  }
};



#-------------------------------------------------------------------------------
done-testing;
=finish

