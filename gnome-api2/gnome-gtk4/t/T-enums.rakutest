=comment Package: Gtk4, C-Source: enums
use v6.d;

#TL:1:Gnome::Gtk4::T-enums:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use NativeCall;
use Test;


use Gnome::Gtk4::T-enums:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;




my Gnome::Gtk4::T-enums $enums .= new;
#-------------------------------------------------------------------------------
subtest 'Function tests', {
  with $enums {
    my gint $cmpfunc-result;


#`{{
    #TM:0:ordering-from-cmpfunc()
    ok .ordering-from-cmpfunc( $cmpfunc-result), '.ordering-from-cmpfunc()';

}}
  }
};

#-------------------------------------------------------------------------------
#--[Bitfields]------------------------------------------------------------------
#-------------------------------------------------------------------------------
#TE:1:GtkInputHints
subtest 'GtkInputHints', {
  is GTK_INPUT_HINT_NONE.value, 0, 'bitfield GTK_INPUT_HINT_NONE = 0';

  is GTK_INPUT_HINT_SPELLCHECK.value, 1, 'bitfield GTK_INPUT_HINT_SPELLCHECK = 1';

  is GTK_INPUT_HINT_NO_SPELLCHECK.value, 2, 'bitfield GTK_INPUT_HINT_NO_SPELLCHECK = 2';

  is GTK_INPUT_HINT_WORD_COMPLETION.value, 4, 'bitfield GTK_INPUT_HINT_WORD_COMPLETION = 4';

  is GTK_INPUT_HINT_LOWERCASE.value, 8, 'bitfield GTK_INPUT_HINT_LOWERCASE = 8';

  is GTK_INPUT_HINT_UPPERCASE_CHARS.value, 16, 'bitfield GTK_INPUT_HINT_UPPERCASE_CHARS = 16';

  is GTK_INPUT_HINT_UPPERCASE_WORDS.value, 32, 'bitfield GTK_INPUT_HINT_UPPERCASE_WORDS = 32';

  is GTK_INPUT_HINT_UPPERCASE_SENTENCES.value, 64, 'bitfield GTK_INPUT_HINT_UPPERCASE_SENTENCES = 64';

  is GTK_INPUT_HINT_INHIBIT_OSK.value, 128, 'bitfield GTK_INPUT_HINT_INHIBIT_OSK = 128';

  is GTK_INPUT_HINT_VERTICAL_WRITING.value, 256, 'bitfield GTK_INPUT_HINT_VERTICAL_WRITING = 256';

  is GTK_INPUT_HINT_EMOJI.value, 512, 'bitfield GTK_INPUT_HINT_EMOJI = 512';

  is GTK_INPUT_HINT_NO_EMOJI.value, 1024, 'bitfield GTK_INPUT_HINT_NO_EMOJI = 1024';

  is GTK_INPUT_HINT_PRIVATE.value, 2048, 'bitfield GTK_INPUT_HINT_PRIVATE = 2048';

};

#-------------------------------------------------------------------------------
#TE:1:GtkListScrollFlags
subtest 'GtkListScrollFlags', {
  is GTK_LIST_SCROLL_NONE.value, 0, 'bitfield GTK_LIST_SCROLL_NONE = 0';

  is GTK_LIST_SCROLL_FOCUS.value, 1, 'bitfield GTK_LIST_SCROLL_FOCUS = 1';

  is GTK_LIST_SCROLL_SELECT.value, 2, 'bitfield GTK_LIST_SCROLL_SELECT = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPickFlags
subtest 'GtkPickFlags', {
  is GTK_PICK_DEFAULT.value, 0, 'bitfield GTK_PICK_DEFAULT = 0';

  is GTK_PICK_INSENSITIVE.value, 1, 'bitfield GTK_PICK_INSENSITIVE = 1';

  is GTK_PICK_NON_TARGETABLE.value, 2, 'bitfield GTK_PICK_NON_TARGETABLE = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkStateFlags
subtest 'GtkStateFlags', {
  is GTK_STATE_FLAG_NORMAL.value, 0, 'bitfield GTK_STATE_FLAG_NORMAL = 0';

  is GTK_STATE_FLAG_ACTIVE.value, 1, 'bitfield GTK_STATE_FLAG_ACTIVE = 1';

  is GTK_STATE_FLAG_PRELIGHT.value, 2, 'bitfield GTK_STATE_FLAG_PRELIGHT = 2';

  is GTK_STATE_FLAG_SELECTED.value, 4, 'bitfield GTK_STATE_FLAG_SELECTED = 4';

  is GTK_STATE_FLAG_INSENSITIVE.value, 8, 'bitfield GTK_STATE_FLAG_INSENSITIVE = 8';

  is GTK_STATE_FLAG_INCONSISTENT.value, 16, 'bitfield GTK_STATE_FLAG_INCONSISTENT = 16';

  is GTK_STATE_FLAG_FOCUSED.value, 32, 'bitfield GTK_STATE_FLAG_FOCUSED = 32';

  is GTK_STATE_FLAG_BACKDROP.value, 64, 'bitfield GTK_STATE_FLAG_BACKDROP = 64';

  is GTK_STATE_FLAG_DIR_LTR.value, 128, 'bitfield GTK_STATE_FLAG_DIR_LTR = 128';

  is GTK_STATE_FLAG_DIR_RTL.value, 256, 'bitfield GTK_STATE_FLAG_DIR_RTL = 256';

  is GTK_STATE_FLAG_LINK.value, 512, 'bitfield GTK_STATE_FLAG_LINK = 512';

  is GTK_STATE_FLAG_VISITED.value, 1024, 'bitfield GTK_STATE_FLAG_VISITED = 1024';

  is GTK_STATE_FLAG_CHECKED.value, 2048, 'bitfield GTK_STATE_FLAG_CHECKED = 2048';

  is GTK_STATE_FLAG_DROP_ACTIVE.value, 4096, 'bitfield GTK_STATE_FLAG_DROP_ACTIVE = 4096';

  is GTK_STATE_FLAG_FOCUS_VISIBLE.value, 8192, 'bitfield GTK_STATE_FLAG_FOCUS_VISIBLE = 8192';

  is GTK_STATE_FLAG_FOCUS_WITHIN.value, 16384, 'bitfield GTK_STATE_FLAG_FOCUS_WITHIN = 16384';

};

#-------------------------------------------------------------------------------
#--[Constants]------------------------------------------------------------------
#-------------------------------------------------------------------------------

subtest 'constants', {
#TE:1:GTK_ACCESSIBLE_VALUE_UNDEFINED
is GTK_ACCESSIBLE_VALUE_UNDEFINED, -1, "constant GTK_ACCESSIBLE_VALUE_UNDEFINED = -1";

};

#-------------------------------------------------------------------------------
#--[Enumerations]---------------------------------------------------------------
#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleAutocomplete
subtest 'GtkAccessibleAutocomplete', {
  is GTK_ACCESSIBLE_AUTOCOMPLETE_NONE.value, 0, 'enum GTK_ACCESSIBLE_AUTOCOMPLETE_NONE = 0';

  is GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE.value, 1, 'enum GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE = 1';

  is GTK_ACCESSIBLE_AUTOCOMPLETE_LIST.value, 2, 'enum GTK_ACCESSIBLE_AUTOCOMPLETE_LIST = 2';

  is GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH.value, 3, 'enum GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleInvalidState
subtest 'GtkAccessibleInvalidState', {
  is GTK_ACCESSIBLE_INVALID_FALSE.value, 0, 'enum GTK_ACCESSIBLE_INVALID_FALSE = 0';

  is GTK_ACCESSIBLE_INVALID_TRUE.value, 1, 'enum GTK_ACCESSIBLE_INVALID_TRUE = 1';

  is GTK_ACCESSIBLE_INVALID_GRAMMAR.value, 2, 'enum GTK_ACCESSIBLE_INVALID_GRAMMAR = 2';

  is GTK_ACCESSIBLE_INVALID_SPELLING.value, 3, 'enum GTK_ACCESSIBLE_INVALID_SPELLING = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleProperty
subtest 'GtkAccessibleProperty', {
  is GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE.value, 0, 'enum GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE = 0';

  is GTK_ACCESSIBLE_PROPERTY_DESCRIPTION.value, 1, 'enum GTK_ACCESSIBLE_PROPERTY_DESCRIPTION = 1';

  is GTK_ACCESSIBLE_PROPERTY_HAS_POPUP.value, 2, 'enum GTK_ACCESSIBLE_PROPERTY_HAS_POPUP = 2';

  is GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS.value, 3, 'enum GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS = 3';

  is GTK_ACCESSIBLE_PROPERTY_LABEL.value, 4, 'enum GTK_ACCESSIBLE_PROPERTY_LABEL = 4';

  is GTK_ACCESSIBLE_PROPERTY_LEVEL.value, 5, 'enum GTK_ACCESSIBLE_PROPERTY_LEVEL = 5';

  is GTK_ACCESSIBLE_PROPERTY_MODAL.value, 6, 'enum GTK_ACCESSIBLE_PROPERTY_MODAL = 6';

  is GTK_ACCESSIBLE_PROPERTY_MULTI_LINE.value, 7, 'enum GTK_ACCESSIBLE_PROPERTY_MULTI_LINE = 7';

  is GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE.value, 8, 'enum GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE = 8';

  is GTK_ACCESSIBLE_PROPERTY_ORIENTATION.value, 9, 'enum GTK_ACCESSIBLE_PROPERTY_ORIENTATION = 9';

  is GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER.value, 10, 'enum GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER = 10';

  is GTK_ACCESSIBLE_PROPERTY_READ_ONLY.value, 11, 'enum GTK_ACCESSIBLE_PROPERTY_READ_ONLY = 11';

  is GTK_ACCESSIBLE_PROPERTY_REQUIRED.value, 12, 'enum GTK_ACCESSIBLE_PROPERTY_REQUIRED = 12';

  is GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION.value, 13, 'enum GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION = 13';

  is GTK_ACCESSIBLE_PROPERTY_SORT.value, 14, 'enum GTK_ACCESSIBLE_PROPERTY_SORT = 14';

  is GTK_ACCESSIBLE_PROPERTY_VALUE_MAX.value, 15, 'enum GTK_ACCESSIBLE_PROPERTY_VALUE_MAX = 15';

  is GTK_ACCESSIBLE_PROPERTY_VALUE_MIN.value, 16, 'enum GTK_ACCESSIBLE_PROPERTY_VALUE_MIN = 16';

  is GTK_ACCESSIBLE_PROPERTY_VALUE_NOW.value, 17, 'enum GTK_ACCESSIBLE_PROPERTY_VALUE_NOW = 17';

  is GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT.value, 18, 'enum GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT = 18';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleRelation
subtest 'GtkAccessibleRelation', {
  is GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT.value, 0, 'enum GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT = 0';

  is GTK_ACCESSIBLE_RELATION_COL_COUNT.value, 1, 'enum GTK_ACCESSIBLE_RELATION_COL_COUNT = 1';

  is GTK_ACCESSIBLE_RELATION_COL_INDEX.value, 2, 'enum GTK_ACCESSIBLE_RELATION_COL_INDEX = 2';

  is GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT.value, 3, 'enum GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT = 3';

  is GTK_ACCESSIBLE_RELATION_COL_SPAN.value, 4, 'enum GTK_ACCESSIBLE_RELATION_COL_SPAN = 4';

  is GTK_ACCESSIBLE_RELATION_CONTROLS.value, 5, 'enum GTK_ACCESSIBLE_RELATION_CONTROLS = 5';

  is GTK_ACCESSIBLE_RELATION_DESCRIBED_BY.value, 6, 'enum GTK_ACCESSIBLE_RELATION_DESCRIBED_BY = 6';

  is GTK_ACCESSIBLE_RELATION_DETAILS.value, 7, 'enum GTK_ACCESSIBLE_RELATION_DETAILS = 7';

  is GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE.value, 8, 'enum GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE = 8';

  is GTK_ACCESSIBLE_RELATION_FLOW_TO.value, 9, 'enum GTK_ACCESSIBLE_RELATION_FLOW_TO = 9';

  is GTK_ACCESSIBLE_RELATION_LABELLED_BY.value, 10, 'enum GTK_ACCESSIBLE_RELATION_LABELLED_BY = 10';

  is GTK_ACCESSIBLE_RELATION_OWNS.value, 11, 'enum GTK_ACCESSIBLE_RELATION_OWNS = 11';

  is GTK_ACCESSIBLE_RELATION_POS_IN_SET.value, 12, 'enum GTK_ACCESSIBLE_RELATION_POS_IN_SET = 12';

  is GTK_ACCESSIBLE_RELATION_ROW_COUNT.value, 13, 'enum GTK_ACCESSIBLE_RELATION_ROW_COUNT = 13';

  is GTK_ACCESSIBLE_RELATION_ROW_INDEX.value, 14, 'enum GTK_ACCESSIBLE_RELATION_ROW_INDEX = 14';

  is GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT.value, 15, 'enum GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT = 15';

  is GTK_ACCESSIBLE_RELATION_ROW_SPAN.value, 16, 'enum GTK_ACCESSIBLE_RELATION_ROW_SPAN = 16';

  is GTK_ACCESSIBLE_RELATION_SET_SIZE.value, 17, 'enum GTK_ACCESSIBLE_RELATION_SET_SIZE = 17';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleRole
subtest 'GtkAccessibleRole', {
  is GTK_ACCESSIBLE_ROLE_ALERT.value, 0, 'enum GTK_ACCESSIBLE_ROLE_ALERT = 0';

  is GTK_ACCESSIBLE_ROLE_ALERT_DIALOG.value, 1, 'enum GTK_ACCESSIBLE_ROLE_ALERT_DIALOG = 1';

  is GTK_ACCESSIBLE_ROLE_BANNER.value, 2, 'enum GTK_ACCESSIBLE_ROLE_BANNER = 2';

  is GTK_ACCESSIBLE_ROLE_BUTTON.value, 3, 'enum GTK_ACCESSIBLE_ROLE_BUTTON = 3';

  is GTK_ACCESSIBLE_ROLE_CAPTION.value, 4, 'enum GTK_ACCESSIBLE_ROLE_CAPTION = 4';

  is GTK_ACCESSIBLE_ROLE_CELL.value, 5, 'enum GTK_ACCESSIBLE_ROLE_CELL = 5';

  is GTK_ACCESSIBLE_ROLE_CHECKBOX.value, 6, 'enum GTK_ACCESSIBLE_ROLE_CHECKBOX = 6';

  is GTK_ACCESSIBLE_ROLE_COLUMN_HEADER.value, 7, 'enum GTK_ACCESSIBLE_ROLE_COLUMN_HEADER = 7';

  is GTK_ACCESSIBLE_ROLE_COMBO_BOX.value, 8, 'enum GTK_ACCESSIBLE_ROLE_COMBO_BOX = 8';

  is GTK_ACCESSIBLE_ROLE_COMMAND.value, 9, 'enum GTK_ACCESSIBLE_ROLE_COMMAND = 9';

  is GTK_ACCESSIBLE_ROLE_COMPOSITE.value, 10, 'enum GTK_ACCESSIBLE_ROLE_COMPOSITE = 10';

  is GTK_ACCESSIBLE_ROLE_DIALOG.value, 11, 'enum GTK_ACCESSIBLE_ROLE_DIALOG = 11';

  is GTK_ACCESSIBLE_ROLE_DOCUMENT.value, 12, 'enum GTK_ACCESSIBLE_ROLE_DOCUMENT = 12';

  is GTK_ACCESSIBLE_ROLE_FEED.value, 13, 'enum GTK_ACCESSIBLE_ROLE_FEED = 13';

  is GTK_ACCESSIBLE_ROLE_FORM.value, 14, 'enum GTK_ACCESSIBLE_ROLE_FORM = 14';

  is GTK_ACCESSIBLE_ROLE_GENERIC.value, 15, 'enum GTK_ACCESSIBLE_ROLE_GENERIC = 15';

  is GTK_ACCESSIBLE_ROLE_GRID.value, 16, 'enum GTK_ACCESSIBLE_ROLE_GRID = 16';

  is GTK_ACCESSIBLE_ROLE_GRID_CELL.value, 17, 'enum GTK_ACCESSIBLE_ROLE_GRID_CELL = 17';

  is GTK_ACCESSIBLE_ROLE_GROUP.value, 18, 'enum GTK_ACCESSIBLE_ROLE_GROUP = 18';

  is GTK_ACCESSIBLE_ROLE_HEADING.value, 19, 'enum GTK_ACCESSIBLE_ROLE_HEADING = 19';

  is GTK_ACCESSIBLE_ROLE_IMG.value, 20, 'enum GTK_ACCESSIBLE_ROLE_IMG = 20';

  is GTK_ACCESSIBLE_ROLE_INPUT.value, 21, 'enum GTK_ACCESSIBLE_ROLE_INPUT = 21';

  is GTK_ACCESSIBLE_ROLE_LABEL.value, 22, 'enum GTK_ACCESSIBLE_ROLE_LABEL = 22';

  is GTK_ACCESSIBLE_ROLE_LANDMARK.value, 23, 'enum GTK_ACCESSIBLE_ROLE_LANDMARK = 23';

  is GTK_ACCESSIBLE_ROLE_LEGEND.value, 24, 'enum GTK_ACCESSIBLE_ROLE_LEGEND = 24';

  is GTK_ACCESSIBLE_ROLE_LINK.value, 25, 'enum GTK_ACCESSIBLE_ROLE_LINK = 25';

  is GTK_ACCESSIBLE_ROLE_LIST.value, 26, 'enum GTK_ACCESSIBLE_ROLE_LIST = 26';

  is GTK_ACCESSIBLE_ROLE_LIST_BOX.value, 27, 'enum GTK_ACCESSIBLE_ROLE_LIST_BOX = 27';

  is GTK_ACCESSIBLE_ROLE_LIST_ITEM.value, 28, 'enum GTK_ACCESSIBLE_ROLE_LIST_ITEM = 28';

  is GTK_ACCESSIBLE_ROLE_LOG.value, 29, 'enum GTK_ACCESSIBLE_ROLE_LOG = 29';

  is GTK_ACCESSIBLE_ROLE_MAIN.value, 30, 'enum GTK_ACCESSIBLE_ROLE_MAIN = 30';

  is GTK_ACCESSIBLE_ROLE_MARQUEE.value, 31, 'enum GTK_ACCESSIBLE_ROLE_MARQUEE = 31';

  is GTK_ACCESSIBLE_ROLE_MATH.value, 32, 'enum GTK_ACCESSIBLE_ROLE_MATH = 32';

  is GTK_ACCESSIBLE_ROLE_METER.value, 33, 'enum GTK_ACCESSIBLE_ROLE_METER = 33';

  is GTK_ACCESSIBLE_ROLE_MENU.value, 34, 'enum GTK_ACCESSIBLE_ROLE_MENU = 34';

  is GTK_ACCESSIBLE_ROLE_MENU_BAR.value, 35, 'enum GTK_ACCESSIBLE_ROLE_MENU_BAR = 35';

  is GTK_ACCESSIBLE_ROLE_MENU_ITEM.value, 36, 'enum GTK_ACCESSIBLE_ROLE_MENU_ITEM = 36';

  is GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX.value, 37, 'enum GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX = 37';

  is GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO.value, 38, 'enum GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO = 38';

  is GTK_ACCESSIBLE_ROLE_NAVIGATION.value, 39, 'enum GTK_ACCESSIBLE_ROLE_NAVIGATION = 39';

  is GTK_ACCESSIBLE_ROLE_NONE.value, 40, 'enum GTK_ACCESSIBLE_ROLE_NONE = 40';

  is GTK_ACCESSIBLE_ROLE_NOTE.value, 41, 'enum GTK_ACCESSIBLE_ROLE_NOTE = 41';

  is GTK_ACCESSIBLE_ROLE_OPTION.value, 42, 'enum GTK_ACCESSIBLE_ROLE_OPTION = 42';

  is GTK_ACCESSIBLE_ROLE_PRESENTATION.value, 43, 'enum GTK_ACCESSIBLE_ROLE_PRESENTATION = 43';

  is GTK_ACCESSIBLE_ROLE_PROGRESS_BAR.value, 44, 'enum GTK_ACCESSIBLE_ROLE_PROGRESS_BAR = 44';

  is GTK_ACCESSIBLE_ROLE_RADIO.value, 45, 'enum GTK_ACCESSIBLE_ROLE_RADIO = 45';

  is GTK_ACCESSIBLE_ROLE_RADIO_GROUP.value, 46, 'enum GTK_ACCESSIBLE_ROLE_RADIO_GROUP = 46';

  is GTK_ACCESSIBLE_ROLE_RANGE.value, 47, 'enum GTK_ACCESSIBLE_ROLE_RANGE = 47';

  is GTK_ACCESSIBLE_ROLE_REGION.value, 48, 'enum GTK_ACCESSIBLE_ROLE_REGION = 48';

  is GTK_ACCESSIBLE_ROLE_ROW.value, 49, 'enum GTK_ACCESSIBLE_ROLE_ROW = 49';

  is GTK_ACCESSIBLE_ROLE_ROW_GROUP.value, 50, 'enum GTK_ACCESSIBLE_ROLE_ROW_GROUP = 50';

  is GTK_ACCESSIBLE_ROLE_ROW_HEADER.value, 51, 'enum GTK_ACCESSIBLE_ROLE_ROW_HEADER = 51';

  is GTK_ACCESSIBLE_ROLE_SCROLLBAR.value, 52, 'enum GTK_ACCESSIBLE_ROLE_SCROLLBAR = 52';

  is GTK_ACCESSIBLE_ROLE_SEARCH.value, 53, 'enum GTK_ACCESSIBLE_ROLE_SEARCH = 53';

  is GTK_ACCESSIBLE_ROLE_SEARCH_BOX.value, 54, 'enum GTK_ACCESSIBLE_ROLE_SEARCH_BOX = 54';

  is GTK_ACCESSIBLE_ROLE_SECTION.value, 55, 'enum GTK_ACCESSIBLE_ROLE_SECTION = 55';

  is GTK_ACCESSIBLE_ROLE_SECTION_HEAD.value, 56, 'enum GTK_ACCESSIBLE_ROLE_SECTION_HEAD = 56';

  is GTK_ACCESSIBLE_ROLE_SELECT.value, 57, 'enum GTK_ACCESSIBLE_ROLE_SELECT = 57';

  is GTK_ACCESSIBLE_ROLE_SEPARATOR.value, 58, 'enum GTK_ACCESSIBLE_ROLE_SEPARATOR = 58';

  is GTK_ACCESSIBLE_ROLE_SLIDER.value, 59, 'enum GTK_ACCESSIBLE_ROLE_SLIDER = 59';

  is GTK_ACCESSIBLE_ROLE_SPIN_BUTTON.value, 60, 'enum GTK_ACCESSIBLE_ROLE_SPIN_BUTTON = 60';

  is GTK_ACCESSIBLE_ROLE_STATUS.value, 61, 'enum GTK_ACCESSIBLE_ROLE_STATUS = 61';

  is GTK_ACCESSIBLE_ROLE_STRUCTURE.value, 62, 'enum GTK_ACCESSIBLE_ROLE_STRUCTURE = 62';

  is GTK_ACCESSIBLE_ROLE_SWITCH.value, 63, 'enum GTK_ACCESSIBLE_ROLE_SWITCH = 63';

  is GTK_ACCESSIBLE_ROLE_TAB.value, 64, 'enum GTK_ACCESSIBLE_ROLE_TAB = 64';

  is GTK_ACCESSIBLE_ROLE_TABLE.value, 65, 'enum GTK_ACCESSIBLE_ROLE_TABLE = 65';

  is GTK_ACCESSIBLE_ROLE_TAB_LIST.value, 66, 'enum GTK_ACCESSIBLE_ROLE_TAB_LIST = 66';

  is GTK_ACCESSIBLE_ROLE_TAB_PANEL.value, 67, 'enum GTK_ACCESSIBLE_ROLE_TAB_PANEL = 67';

  is GTK_ACCESSIBLE_ROLE_TEXT_BOX.value, 68, 'enum GTK_ACCESSIBLE_ROLE_TEXT_BOX = 68';

  is GTK_ACCESSIBLE_ROLE_TIME.value, 69, 'enum GTK_ACCESSIBLE_ROLE_TIME = 69';

  is GTK_ACCESSIBLE_ROLE_TIMER.value, 70, 'enum GTK_ACCESSIBLE_ROLE_TIMER = 70';

  is GTK_ACCESSIBLE_ROLE_TOOLBAR.value, 71, 'enum GTK_ACCESSIBLE_ROLE_TOOLBAR = 71';

  is GTK_ACCESSIBLE_ROLE_TOOLTIP.value, 72, 'enum GTK_ACCESSIBLE_ROLE_TOOLTIP = 72';

  is GTK_ACCESSIBLE_ROLE_TREE.value, 73, 'enum GTK_ACCESSIBLE_ROLE_TREE = 73';

  is GTK_ACCESSIBLE_ROLE_TREE_GRID.value, 74, 'enum GTK_ACCESSIBLE_ROLE_TREE_GRID = 74';

  is GTK_ACCESSIBLE_ROLE_TREE_ITEM.value, 75, 'enum GTK_ACCESSIBLE_ROLE_TREE_ITEM = 75';

  is GTK_ACCESSIBLE_ROLE_WIDGET.value, 76, 'enum GTK_ACCESSIBLE_ROLE_WIDGET = 76';

  is GTK_ACCESSIBLE_ROLE_WINDOW.value, 77, 'enum GTK_ACCESSIBLE_ROLE_WINDOW = 77';

  is GTK_ACCESSIBLE_ROLE_TOGGLE_BUTTON.value, 78, 'enum GTK_ACCESSIBLE_ROLE_TOGGLE_BUTTON = 78';

  is GTK_ACCESSIBLE_ROLE_APPLICATION.value, 79, 'enum GTK_ACCESSIBLE_ROLE_APPLICATION = 79';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleSort
subtest 'GtkAccessibleSort', {
  is GTK_ACCESSIBLE_SORT_NONE.value, 0, 'enum GTK_ACCESSIBLE_SORT_NONE = 0';

  is GTK_ACCESSIBLE_SORT_ASCENDING.value, 1, 'enum GTK_ACCESSIBLE_SORT_ASCENDING = 1';

  is GTK_ACCESSIBLE_SORT_DESCENDING.value, 2, 'enum GTK_ACCESSIBLE_SORT_DESCENDING = 2';

  is GTK_ACCESSIBLE_SORT_OTHER.value, 3, 'enum GTK_ACCESSIBLE_SORT_OTHER = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleState
subtest 'GtkAccessibleState', {
  is GTK_ACCESSIBLE_STATE_BUSY.value, 0, 'enum GTK_ACCESSIBLE_STATE_BUSY = 0';

  is GTK_ACCESSIBLE_STATE_CHECKED.value, 1, 'enum GTK_ACCESSIBLE_STATE_CHECKED = 1';

  is GTK_ACCESSIBLE_STATE_DISABLED.value, 2, 'enum GTK_ACCESSIBLE_STATE_DISABLED = 2';

  is GTK_ACCESSIBLE_STATE_EXPANDED.value, 3, 'enum GTK_ACCESSIBLE_STATE_EXPANDED = 3';

  is GTK_ACCESSIBLE_STATE_HIDDEN.value, 4, 'enum GTK_ACCESSIBLE_STATE_HIDDEN = 4';

  is GTK_ACCESSIBLE_STATE_INVALID.value, 5, 'enum GTK_ACCESSIBLE_STATE_INVALID = 5';

  is GTK_ACCESSIBLE_STATE_PRESSED.value, 6, 'enum GTK_ACCESSIBLE_STATE_PRESSED = 6';

  is GTK_ACCESSIBLE_STATE_SELECTED.value, 7, 'enum GTK_ACCESSIBLE_STATE_SELECTED = 7';

  is GTK_ACCESSIBLE_STATE_VISITED.value, 8, 'enum GTK_ACCESSIBLE_STATE_VISITED = 8';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAccessibleTristate
subtest 'GtkAccessibleTristate', {
  is GTK_ACCESSIBLE_TRISTATE_FALSE.value, 0, 'enum GTK_ACCESSIBLE_TRISTATE_FALSE = 0';

  is GTK_ACCESSIBLE_TRISTATE_TRUE.value, 1, 'enum GTK_ACCESSIBLE_TRISTATE_TRUE = 1';

  is GTK_ACCESSIBLE_TRISTATE_MIXED.value, 2, 'enum GTK_ACCESSIBLE_TRISTATE_MIXED = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkAlign
subtest 'GtkAlign', {
  is GTK_ALIGN_FILL.value, 0, 'enum GTK_ALIGN_FILL = 0';

  is GTK_ALIGN_START.value, 1, 'enum GTK_ALIGN_START = 1';

  is GTK_ALIGN_END.value, 2, 'enum GTK_ALIGN_END = 2';

  is GTK_ALIGN_CENTER.value, 3, 'enum GTK_ALIGN_CENTER = 3';

  is GTK_ALIGN_BASELINE_FILL.value, 4, 'enum GTK_ALIGN_BASELINE_FILL = 4';

  is GTK_ALIGN_BASELINE.value, 5, 'enum GTK_ALIGN_BASELINE = 5';

  is GTK_ALIGN_BASELINE_CENTER.value, 6, 'enum GTK_ALIGN_BASELINE_CENTER = 6';

};

#-------------------------------------------------------------------------------
#TE:1:GtkArrowType
subtest 'GtkArrowType', {
  is GTK_ARROW_UP.value, 0, 'enum GTK_ARROW_UP = 0';

  is GTK_ARROW_DOWN.value, 1, 'enum GTK_ARROW_DOWN = 1';

  is GTK_ARROW_LEFT.value, 2, 'enum GTK_ARROW_LEFT = 2';

  is GTK_ARROW_RIGHT.value, 3, 'enum GTK_ARROW_RIGHT = 3';

  is GTK_ARROW_NONE.value, 4, 'enum GTK_ARROW_NONE = 4';

};

#-------------------------------------------------------------------------------
#TE:1:GtkBaselinePosition
subtest 'GtkBaselinePosition', {
  is GTK_BASELINE_POSITION_TOP.value, 0, 'enum GTK_BASELINE_POSITION_TOP = 0';

  is GTK_BASELINE_POSITION_CENTER.value, 1, 'enum GTK_BASELINE_POSITION_CENTER = 1';

  is GTK_BASELINE_POSITION_BOTTOM.value, 2, 'enum GTK_BASELINE_POSITION_BOTTOM = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkBorderStyle
subtest 'GtkBorderStyle', {
  is GTK_BORDER_STYLE_NONE.value, 0, 'enum GTK_BORDER_STYLE_NONE = 0';

  is GTK_BORDER_STYLE_HIDDEN.value, 1, 'enum GTK_BORDER_STYLE_HIDDEN = 1';

  is GTK_BORDER_STYLE_SOLID.value, 2, 'enum GTK_BORDER_STYLE_SOLID = 2';

  is GTK_BORDER_STYLE_INSET.value, 3, 'enum GTK_BORDER_STYLE_INSET = 3';

  is GTK_BORDER_STYLE_OUTSET.value, 4, 'enum GTK_BORDER_STYLE_OUTSET = 4';

  is GTK_BORDER_STYLE_DOTTED.value, 5, 'enum GTK_BORDER_STYLE_DOTTED = 5';

  is GTK_BORDER_STYLE_DASHED.value, 6, 'enum GTK_BORDER_STYLE_DASHED = 6';

  is GTK_BORDER_STYLE_DOUBLE.value, 7, 'enum GTK_BORDER_STYLE_DOUBLE = 7';

  is GTK_BORDER_STYLE_GROOVE.value, 8, 'enum GTK_BORDER_STYLE_GROOVE = 8';

  is GTK_BORDER_STYLE_RIDGE.value, 9, 'enum GTK_BORDER_STYLE_RIDGE = 9';

};

#-------------------------------------------------------------------------------
#TE:1:GtkConstraintAttribute
subtest 'GtkConstraintAttribute', {
  is GTK_CONSTRAINT_ATTRIBUTE_NONE.value, 0, 'enum GTK_CONSTRAINT_ATTRIBUTE_NONE = 0';

  is GTK_CONSTRAINT_ATTRIBUTE_LEFT.value, 1, 'enum GTK_CONSTRAINT_ATTRIBUTE_LEFT = 1';

  is GTK_CONSTRAINT_ATTRIBUTE_RIGHT.value, 2, 'enum GTK_CONSTRAINT_ATTRIBUTE_RIGHT = 2';

  is GTK_CONSTRAINT_ATTRIBUTE_TOP.value, 3, 'enum GTK_CONSTRAINT_ATTRIBUTE_TOP = 3';

  is GTK_CONSTRAINT_ATTRIBUTE_BOTTOM.value, 4, 'enum GTK_CONSTRAINT_ATTRIBUTE_BOTTOM = 4';

  is GTK_CONSTRAINT_ATTRIBUTE_START.value, 5, 'enum GTK_CONSTRAINT_ATTRIBUTE_START = 5';

  is GTK_CONSTRAINT_ATTRIBUTE_END.value, 6, 'enum GTK_CONSTRAINT_ATTRIBUTE_END = 6';

  is GTK_CONSTRAINT_ATTRIBUTE_WIDTH.value, 7, 'enum GTK_CONSTRAINT_ATTRIBUTE_WIDTH = 7';

  is GTK_CONSTRAINT_ATTRIBUTE_HEIGHT.value, 8, 'enum GTK_CONSTRAINT_ATTRIBUTE_HEIGHT = 8';

  is GTK_CONSTRAINT_ATTRIBUTE_CENTER_X.value, 9, 'enum GTK_CONSTRAINT_ATTRIBUTE_CENTER_X = 9';

  is GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y.value, 10, 'enum GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y = 10';

  is GTK_CONSTRAINT_ATTRIBUTE_BASELINE.value, 11, 'enum GTK_CONSTRAINT_ATTRIBUTE_BASELINE = 11';

};

#-------------------------------------------------------------------------------
#TE:1:GtkConstraintRelation
subtest 'GtkConstraintRelation', {
  is GTK_CONSTRAINT_RELATION_LE.value, 0, 'enum GTK_CONSTRAINT_RELATION_LE = 0';

  is GTK_CONSTRAINT_RELATION_EQ.value, 1, 'enum GTK_CONSTRAINT_RELATION_EQ = 1';

  is GTK_CONSTRAINT_RELATION_GE.value, 2, 'enum GTK_CONSTRAINT_RELATION_GE = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkConstraintStrength
subtest 'GtkConstraintStrength', {
  is GTK_CONSTRAINT_STRENGTH_REQUIRED.value, 0, 'enum GTK_CONSTRAINT_STRENGTH_REQUIRED = 0';

  is GTK_CONSTRAINT_STRENGTH_STRONG.value, 1, 'enum GTK_CONSTRAINT_STRENGTH_STRONG = 1';

  is GTK_CONSTRAINT_STRENGTH_MEDIUM.value, 2, 'enum GTK_CONSTRAINT_STRENGTH_MEDIUM = 2';

  is GTK_CONSTRAINT_STRENGTH_WEAK.value, 3, 'enum GTK_CONSTRAINT_STRENGTH_WEAK = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkConstraintVflParserError
subtest 'GtkConstraintVflParserError', {
  is GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL.value, 0, 'enum GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL = 0';

  is GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE.value, 1, 'enum GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE = 1';

  is GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW.value, 2, 'enum GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW = 2';

  is GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC.value, 3, 'enum GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC = 3';

  is GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY.value, 4, 'enum GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY = 4';

  is GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION.value, 5, 'enum GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION = 5';

};

#-------------------------------------------------------------------------------
#TE:1:GtkContentFit
subtest 'GtkContentFit', {
  is GTK_CONTENT_FIT_FILL.value, 0, 'enum GTK_CONTENT_FIT_FILL = 0';

  is GTK_CONTENT_FIT_CONTAIN.value, 1, 'enum GTK_CONTENT_FIT_CONTAIN = 1';

  is GTK_CONTENT_FIT_COVER.value, 2, 'enum GTK_CONTENT_FIT_COVER = 2';

  is GTK_CONTENT_FIT_SCALE_DOWN.value, 3, 'enum GTK_CONTENT_FIT_SCALE_DOWN = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkDeleteType
subtest 'GtkDeleteType', {
  is GTK_DELETE_CHARS.value, 0, 'enum GTK_DELETE_CHARS = 0';

  is GTK_DELETE_WORD_ENDS.value, 1, 'enum GTK_DELETE_WORD_ENDS = 1';

  is GTK_DELETE_WORDS.value, 2, 'enum GTK_DELETE_WORDS = 2';

  is GTK_DELETE_DISPLAY_LINES.value, 3, 'enum GTK_DELETE_DISPLAY_LINES = 3';

  is GTK_DELETE_DISPLAY_LINE_ENDS.value, 4, 'enum GTK_DELETE_DISPLAY_LINE_ENDS = 4';

  is GTK_DELETE_PARAGRAPH_ENDS.value, 5, 'enum GTK_DELETE_PARAGRAPH_ENDS = 5';

  is GTK_DELETE_PARAGRAPHS.value, 6, 'enum GTK_DELETE_PARAGRAPHS = 6';

  is GTK_DELETE_WHITESPACE.value, 7, 'enum GTK_DELETE_WHITESPACE = 7';

};

#-------------------------------------------------------------------------------
#TE:1:GtkDirectionType
subtest 'GtkDirectionType', {
  is GTK_DIR_TAB_FORWARD.value, 0, 'enum GTK_DIR_TAB_FORWARD = 0';

  is GTK_DIR_TAB_BACKWARD.value, 1, 'enum GTK_DIR_TAB_BACKWARD = 1';

  is GTK_DIR_UP.value, 2, 'enum GTK_DIR_UP = 2';

  is GTK_DIR_DOWN.value, 3, 'enum GTK_DIR_DOWN = 3';

  is GTK_DIR_LEFT.value, 4, 'enum GTK_DIR_LEFT = 4';

  is GTK_DIR_RIGHT.value, 5, 'enum GTK_DIR_RIGHT = 5';

};

#-------------------------------------------------------------------------------
#TE:1:GtkEventSequenceState
subtest 'GtkEventSequenceState', {
  is GTK_EVENT_SEQUENCE_NONE.value, 0, 'enum GTK_EVENT_SEQUENCE_NONE = 0';

  is GTK_EVENT_SEQUENCE_CLAIMED.value, 1, 'enum GTK_EVENT_SEQUENCE_CLAIMED = 1';

  is GTK_EVENT_SEQUENCE_DENIED.value, 2, 'enum GTK_EVENT_SEQUENCE_DENIED = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkIconSize
subtest 'GtkIconSize', {
  is GTK_ICON_SIZE_INHERIT.value, 0, 'enum GTK_ICON_SIZE_INHERIT = 0';

  is GTK_ICON_SIZE_NORMAL.value, 1, 'enum GTK_ICON_SIZE_NORMAL = 1';

  is GTK_ICON_SIZE_LARGE.value, 2, 'enum GTK_ICON_SIZE_LARGE = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkInputPurpose
subtest 'GtkInputPurpose', {
  is GTK_INPUT_PURPOSE_FREE_FORM.value, 0, 'enum GTK_INPUT_PURPOSE_FREE_FORM = 0';

  is GTK_INPUT_PURPOSE_ALPHA.value, 1, 'enum GTK_INPUT_PURPOSE_ALPHA = 1';

  is GTK_INPUT_PURPOSE_DIGITS.value, 2, 'enum GTK_INPUT_PURPOSE_DIGITS = 2';

  is GTK_INPUT_PURPOSE_NUMBER.value, 3, 'enum GTK_INPUT_PURPOSE_NUMBER = 3';

  is GTK_INPUT_PURPOSE_PHONE.value, 4, 'enum GTK_INPUT_PURPOSE_PHONE = 4';

  is GTK_INPUT_PURPOSE_URL.value, 5, 'enum GTK_INPUT_PURPOSE_URL = 5';

  is GTK_INPUT_PURPOSE_EMAIL.value, 6, 'enum GTK_INPUT_PURPOSE_EMAIL = 6';

  is GTK_INPUT_PURPOSE_NAME.value, 7, 'enum GTK_INPUT_PURPOSE_NAME = 7';

  is GTK_INPUT_PURPOSE_PASSWORD.value, 8, 'enum GTK_INPUT_PURPOSE_PASSWORD = 8';

  is GTK_INPUT_PURPOSE_PIN.value, 9, 'enum GTK_INPUT_PURPOSE_PIN = 9';

  is GTK_INPUT_PURPOSE_TERMINAL.value, 10, 'enum GTK_INPUT_PURPOSE_TERMINAL = 10';

};

#-------------------------------------------------------------------------------
#TE:1:GtkJustification
subtest 'GtkJustification', {
  is GTK_JUSTIFY_LEFT.value, 0, 'enum GTK_JUSTIFY_LEFT = 0';

  is GTK_JUSTIFY_RIGHT.value, 1, 'enum GTK_JUSTIFY_RIGHT = 1';

  is GTK_JUSTIFY_CENTER.value, 2, 'enum GTK_JUSTIFY_CENTER = 2';

  is GTK_JUSTIFY_FILL.value, 3, 'enum GTK_JUSTIFY_FILL = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkLevelBarMode
subtest 'GtkLevelBarMode', {
  is GTK_LEVEL_BAR_MODE_CONTINUOUS.value, 0, 'enum GTK_LEVEL_BAR_MODE_CONTINUOUS = 0';

  is GTK_LEVEL_BAR_MODE_DISCRETE.value, 1, 'enum GTK_LEVEL_BAR_MODE_DISCRETE = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkListTabBehavior
subtest 'GtkListTabBehavior', {
  is GTK_LIST_TAB_ALL.value, 0, 'enum GTK_LIST_TAB_ALL = 0';

  is GTK_LIST_TAB_ITEM.value, 1, 'enum GTK_LIST_TAB_ITEM = 1';

  is GTK_LIST_TAB_CELL.value, 2, 'enum GTK_LIST_TAB_CELL = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkMessageType
subtest 'GtkMessageType', {
  is GTK_MESSAGE_INFO.value, 0, 'enum GTK_MESSAGE_INFO = 0';

  is GTK_MESSAGE_WARNING.value, 1, 'enum GTK_MESSAGE_WARNING = 1';

  is GTK_MESSAGE_QUESTION.value, 2, 'enum GTK_MESSAGE_QUESTION = 2';

  is GTK_MESSAGE_ERROR.value, 3, 'enum GTK_MESSAGE_ERROR = 3';

  is GTK_MESSAGE_OTHER.value, 4, 'enum GTK_MESSAGE_OTHER = 4';

};

#-------------------------------------------------------------------------------
#TE:1:GtkMovementStep
subtest 'GtkMovementStep', {
  is GTK_MOVEMENT_LOGICAL_POSITIONS.value, 0, 'enum GTK_MOVEMENT_LOGICAL_POSITIONS = 0';

  is GTK_MOVEMENT_VISUAL_POSITIONS.value, 1, 'enum GTK_MOVEMENT_VISUAL_POSITIONS = 1';

  is GTK_MOVEMENT_WORDS.value, 2, 'enum GTK_MOVEMENT_WORDS = 2';

  is GTK_MOVEMENT_DISPLAY_LINES.value, 3, 'enum GTK_MOVEMENT_DISPLAY_LINES = 3';

  is GTK_MOVEMENT_DISPLAY_LINE_ENDS.value, 4, 'enum GTK_MOVEMENT_DISPLAY_LINE_ENDS = 4';

  is GTK_MOVEMENT_PARAGRAPHS.value, 5, 'enum GTK_MOVEMENT_PARAGRAPHS = 5';

  is GTK_MOVEMENT_PARAGRAPH_ENDS.value, 6, 'enum GTK_MOVEMENT_PARAGRAPH_ENDS = 6';

  is GTK_MOVEMENT_PAGES.value, 7, 'enum GTK_MOVEMENT_PAGES = 7';

  is GTK_MOVEMENT_BUFFER_ENDS.value, 8, 'enum GTK_MOVEMENT_BUFFER_ENDS = 8';

  is GTK_MOVEMENT_HORIZONTAL_PAGES.value, 9, 'enum GTK_MOVEMENT_HORIZONTAL_PAGES = 9';

};

#-------------------------------------------------------------------------------
#TE:1:GtkNaturalWrapMode
subtest 'GtkNaturalWrapMode', {
  is GTK_NATURAL_WRAP_INHERIT.value, 0, 'enum GTK_NATURAL_WRAP_INHERIT = 0';

  is GTK_NATURAL_WRAP_NONE.value, 1, 'enum GTK_NATURAL_WRAP_NONE = 1';

  is GTK_NATURAL_WRAP_WORD.value, 2, 'enum GTK_NATURAL_WRAP_WORD = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkNumberUpLayout
subtest 'GtkNumberUpLayout', {
  is GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM.value, 0, 'enum GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM = 0';

  is GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP.value, 1, 'enum GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP = 1';

  is GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM.value, 2, 'enum GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM = 2';

  is GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP.value, 3, 'enum GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP = 3';

  is GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT.value, 4, 'enum GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT = 4';

  is GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT.value, 5, 'enum GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT = 5';

  is GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT.value, 6, 'enum GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT = 6';

  is GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT.value, 7, 'enum GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT = 7';

};

#-------------------------------------------------------------------------------
#TE:1:GtkOrdering
subtest 'GtkOrdering', {
  is GTK_ORDERING_SMALLER.value, 0, 'enum GTK_ORDERING_SMALLER = 0';

  is GTK_ORDERING_EQUAL.value, 1, 'enum GTK_ORDERING_EQUAL = 1';

  is GTK_ORDERING_LARGER.value, 2, 'enum GTK_ORDERING_LARGER = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkOrientation
subtest 'GtkOrientation', {
  is GTK_ORIENTATION_HORIZONTAL.value, 0, 'enum GTK_ORIENTATION_HORIZONTAL = 0';

  is GTK_ORIENTATION_VERTICAL.value, 1, 'enum GTK_ORIENTATION_VERTICAL = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkOverflow
subtest 'GtkOverflow', {
  is GTK_OVERFLOW_VISIBLE.value, 0, 'enum GTK_OVERFLOW_VISIBLE = 0';

  is GTK_OVERFLOW_HIDDEN.value, 1, 'enum GTK_OVERFLOW_HIDDEN = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPackType
subtest 'GtkPackType', {
  is GTK_PACK_START.value, 0, 'enum GTK_PACK_START = 0';

  is GTK_PACK_END.value, 1, 'enum GTK_PACK_END = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPageOrientation
subtest 'GtkPageOrientation', {
  is GTK_PAGE_ORIENTATION_PORTRAIT.value, 0, 'enum GTK_PAGE_ORIENTATION_PORTRAIT = 0';

  is GTK_PAGE_ORIENTATION_LANDSCAPE.value, 1, 'enum GTK_PAGE_ORIENTATION_LANDSCAPE = 1';

  is GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT.value, 2, 'enum GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT = 2';

  is GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE.value, 3, 'enum GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPageSet
subtest 'GtkPageSet', {
  is GTK_PAGE_SET_ALL.value, 0, 'enum GTK_PAGE_SET_ALL = 0';

  is GTK_PAGE_SET_EVEN.value, 1, 'enum GTK_PAGE_SET_EVEN = 1';

  is GTK_PAGE_SET_ODD.value, 2, 'enum GTK_PAGE_SET_ODD = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPanDirection
subtest 'GtkPanDirection', {
  is GTK_PAN_DIRECTION_LEFT.value, 0, 'enum GTK_PAN_DIRECTION_LEFT = 0';

  is GTK_PAN_DIRECTION_RIGHT.value, 1, 'enum GTK_PAN_DIRECTION_RIGHT = 1';

  is GTK_PAN_DIRECTION_UP.value, 2, 'enum GTK_PAN_DIRECTION_UP = 2';

  is GTK_PAN_DIRECTION_DOWN.value, 3, 'enum GTK_PAN_DIRECTION_DOWN = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPositionType
subtest 'GtkPositionType', {
  is GTK_POS_LEFT.value, 0, 'enum GTK_POS_LEFT = 0';

  is GTK_POS_RIGHT.value, 1, 'enum GTK_POS_RIGHT = 1';

  is GTK_POS_TOP.value, 2, 'enum GTK_POS_TOP = 2';

  is GTK_POS_BOTTOM.value, 3, 'enum GTK_POS_BOTTOM = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPrintDuplex
subtest 'GtkPrintDuplex', {
  is GTK_PRINT_DUPLEX_SIMPLEX.value, 0, 'enum GTK_PRINT_DUPLEX_SIMPLEX = 0';

  is GTK_PRINT_DUPLEX_HORIZONTAL.value, 1, 'enum GTK_PRINT_DUPLEX_HORIZONTAL = 1';

  is GTK_PRINT_DUPLEX_VERTICAL.value, 2, 'enum GTK_PRINT_DUPLEX_VERTICAL = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPrintPages
subtest 'GtkPrintPages', {
  is GTK_PRINT_PAGES_ALL.value, 0, 'enum GTK_PRINT_PAGES_ALL = 0';

  is GTK_PRINT_PAGES_CURRENT.value, 1, 'enum GTK_PRINT_PAGES_CURRENT = 1';

  is GTK_PRINT_PAGES_RANGES.value, 2, 'enum GTK_PRINT_PAGES_RANGES = 2';

  is GTK_PRINT_PAGES_SELECTION.value, 3, 'enum GTK_PRINT_PAGES_SELECTION = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPrintQuality
subtest 'GtkPrintQuality', {
  is GTK_PRINT_QUALITY_LOW.value, 0, 'enum GTK_PRINT_QUALITY_LOW = 0';

  is GTK_PRINT_QUALITY_NORMAL.value, 1, 'enum GTK_PRINT_QUALITY_NORMAL = 1';

  is GTK_PRINT_QUALITY_HIGH.value, 2, 'enum GTK_PRINT_QUALITY_HIGH = 2';

  is GTK_PRINT_QUALITY_DRAFT.value, 3, 'enum GTK_PRINT_QUALITY_DRAFT = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPropagationLimit
subtest 'GtkPropagationLimit', {
  is GTK_LIMIT_NONE.value, 0, 'enum GTK_LIMIT_NONE = 0';

  is GTK_LIMIT_SAME_NATIVE.value, 1, 'enum GTK_LIMIT_SAME_NATIVE = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkPropagationPhase
subtest 'GtkPropagationPhase', {
  is GTK_PHASE_NONE.value, 0, 'enum GTK_PHASE_NONE = 0';

  is GTK_PHASE_CAPTURE.value, 1, 'enum GTK_PHASE_CAPTURE = 1';

  is GTK_PHASE_BUBBLE.value, 2, 'enum GTK_PHASE_BUBBLE = 2';

  is GTK_PHASE_TARGET.value, 3, 'enum GTK_PHASE_TARGET = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkScrollStep
subtest 'GtkScrollStep', {
  is GTK_SCROLL_STEPS.value, 0, 'enum GTK_SCROLL_STEPS = 0';

  is GTK_SCROLL_PAGES.value, 1, 'enum GTK_SCROLL_PAGES = 1';

  is GTK_SCROLL_ENDS.value, 2, 'enum GTK_SCROLL_ENDS = 2';

  is GTK_SCROLL_HORIZONTAL_STEPS.value, 3, 'enum GTK_SCROLL_HORIZONTAL_STEPS = 3';

  is GTK_SCROLL_HORIZONTAL_PAGES.value, 4, 'enum GTK_SCROLL_HORIZONTAL_PAGES = 4';

  is GTK_SCROLL_HORIZONTAL_ENDS.value, 5, 'enum GTK_SCROLL_HORIZONTAL_ENDS = 5';

};

#-------------------------------------------------------------------------------
#TE:1:GtkScrollType
subtest 'GtkScrollType', {
  is GTK_SCROLL_NONE.value, 0, 'enum GTK_SCROLL_NONE = 0';

  is GTK_SCROLL_JUMP.value, 1, 'enum GTK_SCROLL_JUMP = 1';

  is GTK_SCROLL_STEP_BACKWARD.value, 2, 'enum GTK_SCROLL_STEP_BACKWARD = 2';

  is GTK_SCROLL_STEP_FORWARD.value, 3, 'enum GTK_SCROLL_STEP_FORWARD = 3';

  is GTK_SCROLL_PAGE_BACKWARD.value, 4, 'enum GTK_SCROLL_PAGE_BACKWARD = 4';

  is GTK_SCROLL_PAGE_FORWARD.value, 5, 'enum GTK_SCROLL_PAGE_FORWARD = 5';

  is GTK_SCROLL_STEP_UP.value, 6, 'enum GTK_SCROLL_STEP_UP = 6';

  is GTK_SCROLL_STEP_DOWN.value, 7, 'enum GTK_SCROLL_STEP_DOWN = 7';

  is GTK_SCROLL_PAGE_UP.value, 8, 'enum GTK_SCROLL_PAGE_UP = 8';

  is GTK_SCROLL_PAGE_DOWN.value, 9, 'enum GTK_SCROLL_PAGE_DOWN = 9';

  is GTK_SCROLL_STEP_LEFT.value, 10, 'enum GTK_SCROLL_STEP_LEFT = 10';

  is GTK_SCROLL_STEP_RIGHT.value, 11, 'enum GTK_SCROLL_STEP_RIGHT = 11';

  is GTK_SCROLL_PAGE_LEFT.value, 12, 'enum GTK_SCROLL_PAGE_LEFT = 12';

  is GTK_SCROLL_PAGE_RIGHT.value, 13, 'enum GTK_SCROLL_PAGE_RIGHT = 13';

  is GTK_SCROLL_START.value, 14, 'enum GTK_SCROLL_START = 14';

  is GTK_SCROLL_END.value, 15, 'enum GTK_SCROLL_END = 15';

};

#-------------------------------------------------------------------------------
#TE:1:GtkScrollablePolicy
subtest 'GtkScrollablePolicy', {
  is GTK_SCROLL_MINIMUM.value, 0, 'enum GTK_SCROLL_MINIMUM = 0';

  is GTK_SCROLL_NATURAL.value, 1, 'enum GTK_SCROLL_NATURAL = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSelectionMode
subtest 'GtkSelectionMode', {
  is GTK_SELECTION_NONE.value, 0, 'enum GTK_SELECTION_NONE = 0';

  is GTK_SELECTION_SINGLE.value, 1, 'enum GTK_SELECTION_SINGLE = 1';

  is GTK_SELECTION_BROWSE.value, 2, 'enum GTK_SELECTION_BROWSE = 2';

  is GTK_SELECTION_MULTIPLE.value, 3, 'enum GTK_SELECTION_MULTIPLE = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSensitivityType
subtest 'GtkSensitivityType', {
  is GTK_SENSITIVITY_AUTO.value, 0, 'enum GTK_SENSITIVITY_AUTO = 0';

  is GTK_SENSITIVITY_ON.value, 1, 'enum GTK_SENSITIVITY_ON = 1';

  is GTK_SENSITIVITY_OFF.value, 2, 'enum GTK_SENSITIVITY_OFF = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkShortcutScope
subtest 'GtkShortcutScope', {
  is GTK_SHORTCUT_SCOPE_LOCAL.value, 0, 'enum GTK_SHORTCUT_SCOPE_LOCAL = 0';

  is GTK_SHORTCUT_SCOPE_MANAGED.value, 1, 'enum GTK_SHORTCUT_SCOPE_MANAGED = 1';

  is GTK_SHORTCUT_SCOPE_GLOBAL.value, 2, 'enum GTK_SHORTCUT_SCOPE_GLOBAL = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSizeGroupMode
subtest 'GtkSizeGroupMode', {
  is GTK_SIZE_GROUP_NONE.value, 0, 'enum GTK_SIZE_GROUP_NONE = 0';

  is GTK_SIZE_GROUP_HORIZONTAL.value, 1, 'enum GTK_SIZE_GROUP_HORIZONTAL = 1';

  is GTK_SIZE_GROUP_VERTICAL.value, 2, 'enum GTK_SIZE_GROUP_VERTICAL = 2';

  is GTK_SIZE_GROUP_BOTH.value, 3, 'enum GTK_SIZE_GROUP_BOTH = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSizeRequestMode
subtest 'GtkSizeRequestMode', {
  is GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH.value, 0, 'enum GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH = 0';

  is GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT.value, 1, 'enum GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT = 1';

  is GTK_SIZE_REQUEST_CONSTANT_SIZE.value, 2, 'enum GTK_SIZE_REQUEST_CONSTANT_SIZE = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSortType
subtest 'GtkSortType', {
  is GTK_SORT_ASCENDING.value, 0, 'enum GTK_SORT_ASCENDING = 0';

  is GTK_SORT_DESCENDING.value, 1, 'enum GTK_SORT_DESCENDING = 1';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSymbolicColor
subtest 'GtkSymbolicColor', {
  is GTK_SYMBOLIC_COLOR_FOREGROUND.value, 0, 'enum GTK_SYMBOLIC_COLOR_FOREGROUND = 0';

  is GTK_SYMBOLIC_COLOR_ERROR.value, 1, 'enum GTK_SYMBOLIC_COLOR_ERROR = 1';

  is GTK_SYMBOLIC_COLOR_WARNING.value, 2, 'enum GTK_SYMBOLIC_COLOR_WARNING = 2';

  is GTK_SYMBOLIC_COLOR_SUCCESS.value, 3, 'enum GTK_SYMBOLIC_COLOR_SUCCESS = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkSystemSetting
subtest 'GtkSystemSetting', {
  is GTK_SYSTEM_SETTING_DPI.value, 0, 'enum GTK_SYSTEM_SETTING_DPI = 0';

  is GTK_SYSTEM_SETTING_FONT_NAME.value, 1, 'enum GTK_SYSTEM_SETTING_FONT_NAME = 1';

  is GTK_SYSTEM_SETTING_FONT_CONFIG.value, 2, 'enum GTK_SYSTEM_SETTING_FONT_CONFIG = 2';

  is GTK_SYSTEM_SETTING_DISPLAY.value, 3, 'enum GTK_SYSTEM_SETTING_DISPLAY = 3';

  is GTK_SYSTEM_SETTING_ICON_THEME.value, 4, 'enum GTK_SYSTEM_SETTING_ICON_THEME = 4';

};

#-------------------------------------------------------------------------------
#TE:1:GtkTextDirection
subtest 'GtkTextDirection', {
  is GTK_TEXT_DIR_NONE.value, 0, 'enum GTK_TEXT_DIR_NONE = 0';

  is GTK_TEXT_DIR_LTR.value, 1, 'enum GTK_TEXT_DIR_LTR = 1';

  is GTK_TEXT_DIR_RTL.value, 2, 'enum GTK_TEXT_DIR_RTL = 2';

};

#-------------------------------------------------------------------------------
#TE:1:GtkTreeViewGridLines
subtest 'GtkTreeViewGridLines', {
  is GTK_TREE_VIEW_GRID_LINES_NONE.value, 0, 'enum GTK_TREE_VIEW_GRID_LINES_NONE = 0';

  is GTK_TREE_VIEW_GRID_LINES_HORIZONTAL.value, 1, 'enum GTK_TREE_VIEW_GRID_LINES_HORIZONTAL = 1';

  is GTK_TREE_VIEW_GRID_LINES_VERTICAL.value, 2, 'enum GTK_TREE_VIEW_GRID_LINES_VERTICAL = 2';

  is GTK_TREE_VIEW_GRID_LINES_BOTH.value, 3, 'enum GTK_TREE_VIEW_GRID_LINES_BOTH = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkUnit
subtest 'GtkUnit', {
  is GTK_UNIT_NONE.value, 0, 'enum GTK_UNIT_NONE = 0';

  is GTK_UNIT_POINTS.value, 1, 'enum GTK_UNIT_POINTS = 1';

  is GTK_UNIT_INCH.value, 2, 'enum GTK_UNIT_INCH = 2';

  is GTK_UNIT_MM.value, 3, 'enum GTK_UNIT_MM = 3';

};

#-------------------------------------------------------------------------------
#TE:1:GtkWrapMode
subtest 'GtkWrapMode', {
  is GTK_WRAP_NONE.value, 0, 'enum GTK_WRAP_NONE = 0';

  is GTK_WRAP_CHAR.value, 1, 'enum GTK_WRAP_CHAR = 1';

  is GTK_WRAP_WORD.value, 2, 'enum GTK_WRAP_WORD = 2';

  is GTK_WRAP_WORD_CHAR.value, 3, 'enum GTK_WRAP_WORD_CHAR = 3';

};



#-------------------------------------------------------------------------------
done-testing;
=finish

