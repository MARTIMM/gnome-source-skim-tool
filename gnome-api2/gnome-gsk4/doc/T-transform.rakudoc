=comment Package: Gsk4, C-Source: transform
use v6.d;

=begin pod
=head1 Gnome::Gsk4::T-transform
=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

Initialization of a type class is simple and only needed when the standalone functions are used.

  method new ( )

=end pod
#-------------------------------------------------------------------------------
#--[Standalone Functions]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Standalone Functions
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 transform-parse

Parses the given C<$string> into a transform and puts it in C<$out-transform>.

Strings printed via C<.to-string()>
can be read in again successfully using this function.

If C<$string> does not describe a valid transform, C<False> is
returned and undefined is put in C<$out-transform>.

=begin code
method transform-parse ( Str $string, N-Object $out-transform --> Bool )
=end code

=item $string; the string to parse.
=item $out-transform; (transfer ownership: full) The location to put the transform in

Return value; C<True> if C<$string> described a valid transform.. 

=begin comment

=head2 Example
# Example for transform-parse

=end comment

=end pod

