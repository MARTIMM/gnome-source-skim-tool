=comment Package: Gsk4, C-Source: rendernodeimpl
use v6.d;

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=TITLE Gnome::Gsk4::GLShaderNode
=head1 Description

A render node using a GL shader when drawing its children nodes.

=begin comment

=head2 Example
# Example use of module Gnome::Gsk4::GLShaderNode

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from an object of the same type found elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object() :$native-object! )

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-glshadernode

Creates a B<Gnome::Gsk4::RenderNode> that will render the given C<$shader> into the
area given by C<$bounds>.

The C<$args> is a block of data to use for uniform input, as per types and
offsets defined by the C<$shader>. Normally this is generated by
C<.format-args() in class Gnome::Gsk4::GLShader> or  B<Gnome::Gsk4::N-ShaderArgsBuilder> .

See B<Gnome::Gsk4::GLShader> for details about how the shader should be written.

All the children will be rendered into textures (if they aren't already
B<GskTextureNodes>, which will be used directly). These textures will be
sent as input to the shader.

If the renderer doesn't support GL shaders, or if there is any problem
when compiling the shader, then the node will draw pink. You should use
C<.compile() in class Gnome::Gsk4::GLShader> to ensure the C<$shader> will work for the
renderer before using it.

=begin code
method new-glshadernode ( N-Object() $shader, N-Object $bounds, N-Object $args, N-Object() $children, UInt() $n-children --> Gnome::Gsk4::GLShaderNode \)
=end code

=item $shader; the B<Gnome::Gsk4::GLShader>.
=item $bounds; the rectangle to render the shader into
=item $args; Arguments for the uniforms
=item $children; array of child nodes,
  these will be rendered to textures and used as input..
=item $n-children; Length of C<$children> (currenly the GL backend supports
  up to 4 children).

=begin comment

=head2 Example
# Example for new-glshadernode

=end comment

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-args

Gets args for the node.

=begin code
method get-args (--> N-Object )
=end code

Return value; A B<Gnome::Glib::N-Bytes> with the uniform arguments. 

=begin comment

=head2 Example
# Example for get-args

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-child

Gets one of the children.

=begin code
method get-child ( UInt() $idx --> N-Object )
=end code

=item $idx; the position of the child to get.

Return value; the C<$idx>'th child of C<$node>. 

=begin comment

=head2 Example
# Example for get-child

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-n-children

Returns the number of children

=begin code
method get-n-children (--> UInt )
=end code

Return value; The number of children. 

=begin comment

=head2 Example
# Example for get-n-children

=end comment

=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-shader

Gets shader code for the node.

=begin code
method get-shader (--> N-Object )
=end code

Return value; the B<Gnome::Gsk4::GLShader> shader. 

=begin comment

=head2 Example
# Example for get-shader

=end comment

=end pod

