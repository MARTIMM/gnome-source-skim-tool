=comment Package: Gdk4, C-Source: rgba
use v6.d;

#TL:1:Gnome::Gdk4::N-RGBA:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use Test;
use NativeCall;


use Gnome::Gdk4::N-RGBA:api<2>;
use Gnome::Gdk4::T-rgba:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;

#-------------------------------------------------------------------------------
#--[Test preparation]-----------------------------------------------------------
#-------------------------------------------------------------------------------

#Gnome::N::debug(:on);
my N-RGBA $n-rgba;

#-------------------------------------------------------------------------------
#--[Class init tests]-----------------------------------------------------------
#-------------------------------------------------------------------------------

subtest 'ISA test', {
  given $n-rgba {
  }
};

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# set environment variable 'raku-test-all' if rest must be tested too.
unless %*ENV<raku_test_all>:exists {
  done-testing;
  exit;
}

#-------------------------------------------------------------------------------
subtest 'Method tests', {
  with $n-rgba {
    my Str $spec;
    my gpointer $p2;


#`{{
    #TM:0:copy()
    ok .copy(), '.copy()';

    #TM:0:equal()
    ok .equal( $p2), '.equal()';

    #TM:0:free()
    ok .free(), '.free()';

    #TM:0:hash()
    ok .hash(), '.hash()';

    #TM:0:is-clear()
    ok .is-clear(), '.is-clear()';

    #TM:0:is-opaque()
    ok .is-opaque(), '.is-opaque()';

    #TM:0:parse()
    ok .parse( $spec), '.parse()';

    #TM:0:to-string()
    ok .to-string(), '.to-string()';

}}
  }
};

#-------------------------------------------------------------------------------
subtest 'Function tests', {
  with $n-rgba {


#`{{
}}
  }
};

#-------------------------------------------------------------------------------
done-testing;

=finish

