=comment Package: Glib, C-Source: slist
use v6.d;

#TL:1:Gnome::Glib::T-slist:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use Test;
use NativeCall;

use Gnome::Glib::N-SList:api<2>;
use Gnome::Glib::T-slist:api<2>;

use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;

#-------------------------------------------------------------------------------
my @keep = ();
sub pack ( Int $n --> gpointer ) {
  my $o = CArray[gint].new($n);
  @keep.push: $o;
  nativecast( gpointer, $o)
}

my Str $destroyed = '';
sub destroy ( gpointer $np ) {
  my Pointer[gint] $p = nativecast( Pointer[gint], $np);
#note "$?LINE $p.deref()";
  $destroyed ~= $p.deref.Str;
}

#-------------------------------------------------------------------------------
#my Gnome::Glib::T-slist $slist .= new;

subtest 'Function tests', {
  my Gnome::Glib::T-slist $t-slist .= new;
  my Gnome::Glib::N-SList $n-slist .= new;
  my N-SList $N-SList;

  #TM:0:clear-slist()
  for ^10 -> $i {
    $N-SList = $n-slist.append( $N-SList, pack($i));
  }

  my $slist-ptr = CArray[N-SList].new($N-SList);
  $t-slist.clear-slist( $slist-ptr, &destroy);
  is $destroyed, '0123456789', '.clear-slist()';
};



#-------------------------------------------------------------------------------
done-testing;
=finish

