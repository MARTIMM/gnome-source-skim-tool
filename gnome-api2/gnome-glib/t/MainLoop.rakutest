# Command to generate: generate.raku -t -c Glib main record
use v6.d;

#TL:1:Gnome::Glib::N-MainLoop:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use Test;
use NativeCall;


use Gnome::Glib::N-MainContext:api<2>;
use Gnome::Glib::N-MainLoop:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-GObject:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;

#-------------------------------------------------------------------------------
#--[Test preparation]-----------------------------------------------------------
#-------------------------------------------------------------------------------

#Gnome::N::debug(:on);
my Gnome::Glib::N-MainLoop $mainloop;

#-------------------------------------------------------------------------------
#--[Class init tests]-----------------------------------------------------------
#-------------------------------------------------------------------------------

subtest 'ISA test', {
  given $mainloop {
    my Bool() $is-running;
    my N-GMainContext $context;

#`{{
    #TC:0:new-mainloop()
    $context = '…';
    $is-running = True;
    $mainloop .= new-mainloop( $context, $is-running);
    ok .is-valid, '.new-mainloop( $context, $is-running)';

}}
  }
};

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# set environment variable 'raku-test-all' if rest must be tested too.
unless %*ENV<raku_test_all>:exists {
  done-testing;
  exit;
}

#-------------------------------------------------------------------------------
subtest 'Method tests', {
  with $mainloop {


#`{{
    #TM:0:unref()
    ok .unref(), '.unref()';

    #TM:0:run()
    ok .run(), '.run()';

    #TM:0:ref()
    ok .ref(), '.ref()';

    #TM:0:quit()
    ok .quit(), '.quit()';

    #TM:0:is-running()
    ok .is-running(), '.is-running()';

    #TM:0:get-context()
     .get-context(), '…', '.get-context()';

}}
  }
};

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# set environment variable 'raku-test-all' if rest must be tested too.
unless %*ENV<raku_test_all>:exists {
  done-testing;
  exit;
}

#-------------------------------------------------------------------------------
subtest 'Method tests', {
  with $mainloop {


#`{{
}}
  }
};

#-------------------------------------------------------------------------------
done-testing;

=finish

