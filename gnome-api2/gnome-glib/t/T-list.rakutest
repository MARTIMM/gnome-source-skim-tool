# Command to generate: generate.raku -t -c Glib list
use v6.d;

#TL:1:Gnome::Glib::T-List:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use NativeCall;
use Test;

use Gnome::Glib::N-List:api<2>;
use Gnome::Glib::T-list:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;

my Gnome::Glib::N-List $list .= new;

#-------------------------------------------------------------------------------
# Pack and store data to prevent garbage collecting
my @keep = ();
sub pack ( Int $n --> gpointer ) {
  my $o = CArray[gint].new($n);
  @keep.push: $o;
  nativecast( gpointer, $o)
}


my Str $destroyed = '';
sub destroy ( gpointer $np ) {
  my Pointer[gint] $p = nativecast( Pointer[gint], $np);
#note "$?LINE $p.deref()";
  $destroyed ~= $p.deref.Str;
}

#-------------------------------------------------------------------------------
subtest 'Method tests', {
  my Gnome::Glib::T-list $t-list .= new;
  my N-List() $n-list;

  #TB:1:clear-list()
  for ^10 -> $i {
    $n-list = $list.append( $n-list, pack($i));
  }

  my $list-ptr = CArray[N-List].new($n-list);
  $t-list.clear-list( $list-ptr, &destroy);
  is $destroyed, '0123456789', '.clear-list()';
};

done-testing;
=finish
