---
"____EXAMPLE____000": "=begin comment\n\n=head2 Example\n# Example for child-watch-add\n\n=end comment\n"
"____EXAMPLE____001": "=begin comment\n\n=head2 Example\n# Example for child-watch-add-full\n\n=end comment\n"
"____EXAMPLE____002": "=begin comment\n\n=head2 Example\n# Example for child-watch-source-new\n\n=end comment\n"
"____EXAMPLE____003": "=begin comment\n\n=head2 Example\n# Example for clear-handle-id\n\n=end comment\n"
"____EXAMPLE____004": "=begin comment\n\n=head2 Example\n# Example for get-current-time\n\n=end comment\n"
"____EXAMPLE____005": "=begin comment\n\n=head2 Example\n# Example for get-monotonic-time\n\n=end comment\n"
"____EXAMPLE____006": "=begin comment\n\n=head2 Example\n# Example for get-real-time\n\n=end comment\n"
"____EXAMPLE____007": "=begin comment\n\n=head2 Example\n# Example for idle-add\n\n=end comment\n"
"____EXAMPLE____008": "=begin comment\n\n=head2 Example\n# Example for idle-add-full\n\n=end comment\n"
"____EXAMPLE____009": "=begin comment\n\n=head2 Example\n# Example for idle-add-once\n\n=end comment\n"
"____EXAMPLE____010": "=begin comment\n\n=head2 Example\n# Example for idle-remove-by-data\n\n=end comment\n"
"____EXAMPLE____011": "=begin comment\n\n=head2 Example\n# Example for idle-source-new\n\n=end comment\n"
"____EXAMPLE____012": "=begin comment\n\n=head2 Example\n# Example for main-context-default\n\n=end comment\n"
"____EXAMPLE____013": "=begin comment\n\n=head2 Example\n# Example for main-context-get-thread-default\n\n=end comment\n"
"____EXAMPLE____014": "=begin comment\n\n=head2 Example\n# Example for main-context-ref-thread-default\n\n=end comment\n"
"____EXAMPLE____015": "=begin comment\n\n=head2 Example\n# Example for main-current-source\n\n=end comment\n"
"____EXAMPLE____016": "=begin comment\n\n=head2 Example\n# Example for main-depth\n\n=end comment\n"
"____EXAMPLE____017": "=begin comment\n\n=head2 Example\n# Example for source-remove\n\n=end comment\n"
"____EXAMPLE____018": "=begin comment\n\n=head2 Example\n# Example for source-remove-by-funcs-user-data\n\n=end comment\n"
"____EXAMPLE____019": "=begin comment\n\n=head2 Example\n# Example for source-remove-by-user-data\n\n=end comment\n"
"____EXAMPLE____020": "=begin comment\n\n=head2 Example\n# Example for source-set-name-by-id\n\n=end comment\n"
"____EXAMPLE____021": "=begin comment\n\n=head2 Example\n# Example for timeout-add\n\n=end comment\n"
"____EXAMPLE____022": "=begin comment\n\n=head2 Example\n# Example for timeout-add-full\n\n=end comment\n"
"____EXAMPLE____023": "=begin comment\n\n=head2 Example\n# Example for timeout-add-once\n\n=end comment\n"
"____EXAMPLE____024": "=begin comment\n\n=head2 Example\n# Example for timeout-add-seconds\n\n=end comment\n"
"____EXAMPLE____025": "=begin comment\n\n=head2 Example\n# Example for timeout-add-seconds-full\n\n=end comment\n"
"____EXAMPLE____026": "=begin comment\n\n=head2 Example\n# Example for timeout-add-seconds-once\n\n=end comment\n"
"____EXAMPLE____027": "=begin comment\n\n=head2 Example\n# Example for timeout-source-new\n\n=end comment\n"
"____EXAMPLE____028": "=begin comment\n\n=head2 Example\n# Example for timeout-source-new-seconds\n\n=end comment\n"
"____EXAMPLE____029": "=begin comment\n<!-- language=\"C\" -->\nstatic GList *free_list;\n\ngpointer\nallocate_memory (gsize size)\n{\n  gpointer result = g_malloc (size);\n  free_list = g_list_prepend (free_list, result);\n  return result;\n}\n\nvoid\nfree_allocated_memory (void)\n{\n  GList *l;\n  for (l = free_list; l; l = l->next);\n    g_free (l->data);\n  g_list_free (free_list);\n  free_list = NULL;\n }\n\n[...]\n\nwhile (TRUE);\n {\n   g_main_context_iteration (NULL, TRUE);\n   free_allocated_memory();\n  }\n\n=end comment\n"
"____EXAMPLE____030": "=begin comment\n<!-- language=\"C\" -->\ngpointer\nallocate_memory (gsize size)\n{\n  FreeListBlock *block = g_new (FreeListBlock, 1);\n  block->mem = g_malloc (size);\n  block->depth = g_main_depth ();\n  free_list = g_list_prepend (free_list, block);\n  return block->mem;\n}\n\nvoid\nfree_allocated_memory (void)\n{\n  GList *l;\n  \n  int depth = g_main_depth ();\n  for (l = free_list; l; );\n    {\n      GList *next = l->next;\n      FreeListBlock *block = l->data;\n      if (block->depth > depth)\n        {\n          g_free (block->mem);\n          g_free (block);\n          free_list = g_list_delete_link (free_list, l);\n        }\n              \n      l = next;\n    }\n  }\n\n=end comment\n"
...