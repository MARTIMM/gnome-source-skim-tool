---
"____EXAMPLE____000": "=begin comment\n\n=head2 Example\n# Example use of module Gnome::Glib::VariantIter\n\n=end comment\n"
"____EXAMPLE____001": "=begin comment\n\n=head2 Example\n# Example for copy\n\n=end comment\n"
"____EXAMPLE____002": "=begin comment\n\n=head2 Example\n# Example for free\n\n=end comment\n"
"____EXAMPLE____003": "=begin comment\n\n=head2 Example\n# Example for init\n\n=end comment\n"
"____EXAMPLE____004": "=begin comment\n\n=head2 Example\n# Example for loop\n\n=end comment\n"
"____EXAMPLE____005": "=begin comment\n\n=head2 Example\n# Example for n-children\n\n=end comment\n"
"____EXAMPLE____006": "=begin comment\n\n=head2 Example\n# Example for next\n\n=end comment\n"
"____EXAMPLE____007": "=begin comment\n\n=head2 Example\n# Example for next-value\n\n=end comment\n"
"____EXAMPLE____008": "=begin comment\n<!-- language=\"C\" -->\n  // Iterates a dictionary of type 'a{sv}'\n  void\n  iterate_dictionary (GVariant *dictionary)\n  {\n    GVariantIter iter;\n    GVariant *value;\n    gchar *key;\n\n    g_variant_iter_init (&iter, dictionary);\n    while (g_variant_iter_loop (&iter, \"{sv}\", &key, &value))\n      {\n        g_print (\"Item '%s' has type '%s'\\n\", key,\n                 g_variant_get_type_string (value));\n\n        // no need to free 'key' and 'value' here\n        // unless breaking out of this loop\n      }\n  }\n\n=end comment\n"
"____EXAMPLE____009": "=begin comment\n<!-- language=\"C\" -->\n  // Iterates a dictionary of type 'a{sv}'\n  void\n  iterate_dictionary (GVariant *dictionary)\n  {\n    GVariantIter iter;\n    GVariant *value;\n    gchar *key;\n\n    g_variant_iter_init (&iter, dictionary);\n    while (g_variant_iter_next (&iter, \"{sv}\", &key, &value))\n      {\n        g_print (\"Item '%s' has type '%s'\\n\", key,\n                 g_variant_get_type_string (value));\n\n        // must free data for ourselves\n        g_variant_unref (value);\n        g_free (key);\n      }\n  }\n\n=end comment\n"
"____EXAMPLE____010": "=begin comment\n<!-- language=\"C\" -->\n  // recursively iterate a container\n  void\n  iterate_container_recursive (GVariant *container)\n  {\n    GVariantIter iter;\n    GVariant *child;\n\n    g_variant_iter_init (&iter, container);\n    while ((child = g_variant_iter_next_value (&iter)))\n      {\n        g_print (\"type '%s'\\n\", g_variant_get_type_string (child));\n\n        if (g_variant_is_container (child))\n          iterate_container_recursive (child);\n\n        g_variant_unref (child);\n      }\n  }\n\n=end comment\n"
...