---
"____EXAMPLE____000": |
  =head2 Example

  Example use of module B<Gnome::Glib::List>

  =begin code
  my @keep = ();
  sub pack ( Int $n --> gpointer ) {
    my $o = CArray[gint].new($n);
    @keep.push: $o;
    nativecast( gpointer, $o)
  }

  my N-List $N-List;
  my N-List $nlist .= new;
  for ^10 -> $i {
    $N-List = $list.append( $N-List, pack($i));
  }

  say $list.length($N-List);                 # 10
  =end code

  Please note that data needs to be kept alive in Raku across function calls to prevent cleaning up by raku's garbage collection process. Here the C<CArray> is stored in C<@keep>. That said, this List class is mostly used to process list data returned from other instances. An example of that is the method C<.get-windows()> defined in B<Gnome::Gtk4::Application>.

"____EXAMPLE____001": "=begin comment\n\n=head2 Example\n# Example for alloc\n\n=end comment\n"
"____EXAMPLE____002": "=begin comment\n\n=head2 Example\n# Example for append\n\n=end comment\n"
"____EXAMPLE____003": "=begin comment\n\n=head2 Example\n# Example for concat\n\n=end comment\n"
"____EXAMPLE____004": "=begin comment\n\n=head2 Example\n# Example for copy\n\n=end comment\n"
"____EXAMPLE____005": "=begin comment\n\n=head2 Example\n# Example for copy-deep\n\n=end comment\n"
"____EXAMPLE____006": "=begin comment\n\n=head2 Example\n# Example for delete-link\n\n=end comment\n"
"____EXAMPLE____007": "=begin comment\n\n=head2 Example\n# Example for find\n\n=end comment\n"
"____EXAMPLE____008": "=begin comment\n\n=head2 Example\n# Example for find-custom\n\n=end comment\n"
"____EXAMPLE____009": "=begin comment\n\n=head2 Example\n# Example for first\n\n=end comment\n"
"____EXAMPLE____010": "=begin comment\n\n=head2 Example\n# Example for foreach\n\n=end comment\n"
"____EXAMPLE____011": "=begin comment\n\n=head2 Example\n# Example for free\n\n=end comment\n"
"____EXAMPLE____012": "=begin comment\n\n=head2 Example\n# Example for free-full\n\n=end comment\n"
"____EXAMPLE____013": "=begin comment\n\n=head2 Example\n# Example for free1\n\n=end comment\n"
"____EXAMPLE____014": "=begin comment\n\n=head2 Example\n# Example for index\n\n=end comment\n"
"____EXAMPLE____015": "=begin comment\n\n=head2 Example\n# Example for insert\n\n=end comment\n"
"____EXAMPLE____016": "=begin comment\n\n=head2 Example\n# Example for insert-before\n\n=end comment\n"
"____EXAMPLE____017": "=begin comment\n\n=head2 Example\n# Example for insert-before-link\n\n=end comment\n"
"____EXAMPLE____018": "=begin comment\n\n=head2 Example\n# Example for insert-sorted\n\n=end comment\n"
"____EXAMPLE____019": "=begin comment\n\n=head2 Example\n# Example for insert-sorted-with-data\n\n=end comment\n"
"____EXAMPLE____020": "=begin comment\n\n=head2 Example\n# Example for last\n\n=end comment\n"
"____EXAMPLE____021": "=begin comment\n\n=head2 Example\n# Example for length\n\n=end comment\n"
"____EXAMPLE____022": "=begin comment\n\n=head2 Example\n# Example for nth\n\n=end comment\n"
"____EXAMPLE____023": "=begin comment\n\n=head2 Example\n# Example for nth-data\n\n=end comment\n"
"____EXAMPLE____024": "=begin comment\n\n=head2 Example\n# Example for nth-prev\n\n=end comment\n"
"____EXAMPLE____025": "=begin comment\n\n=head2 Example\n# Example for position\n\n=end comment\n"
"____EXAMPLE____026": "=begin comment\n\n=head2 Example\n# Example for prepend\n\n=end comment\n"
"____EXAMPLE____027": "=begin comment\n\n=head2 Example\n# Example for remove\n\n=end comment\n"
"____EXAMPLE____028": "=begin comment\n\n=head2 Example\n# Example for remove-all\n\n=end comment\n"
"____EXAMPLE____029": "=begin comment\n\n=head2 Example\n# Example for remove-link\n\n=end comment\n"
"____EXAMPLE____030": "=begin comment\n\n=head2 Example\n# Example for reverse\n\n=end comment\n"
"____EXAMPLE____031": "=begin comment\n\n=head2 Example\n# Example for sort\n\n=end comment\n"
"____EXAMPLE____032": "=begin comment\n\n=head2 Example\n# Example for sort-with-data\n\n=end comment\n"
"____EXAMPLE____033": "=begin comment\n<!-- language=\"C\" -->\n// Notice that these are initialized to the empty list.\nGList *string_list = NULL, *number_list = NULL;\n\n// This is a list of strings.\nstring_list = g_list_append (string_list, \"first\");\nstring_list = g_list_append (string_list, \"second\");\n\n// This is a list of integers.\nnumber_list = g_list_append (number_list, GINT_TO_POINTER (27));\nnumber_list = g_list_append (number_list, GINT_TO_POINTER (14));\n\n=end comment\n"
"____EXAMPLE____034": "=begin comment\n<!-- language=\"C\" -->\nlist = g_list_remove_link (list, llink);\nlist = g_list_concat (llink, list);\n\n=end comment\n"
"____EXAMPLE____035": "=begin comment\n<!-- language=\"C\" -->\nanother_list = g_list_copy_deep (list, (GCopyFunc) g_object_ref, NULL);\n\n=end comment\n"
"____EXAMPLE____036": "=begin comment\n<!-- language=\"C\" -->\ng_list_free_full (another_list, g_object_unref);\n\n=end comment\n"
"____EXAMPLE____037": "=begin comment\n<!-- language=\"C\" -->\nGList *list_of_borrowed_things = …;  /<!-- -->* (transfer container) *<!-- -->/\ng_list_free (g_steal_pointer (&list_of_borrowed_things));\n\n=end comment\n"
"____EXAMPLE____038": "=begin comment\n<!-- language=\"C\" -->\nGList *list_of_owned_things = …;  /<!-- -->* (transfer full) (element-type GObject) *<!-- -->/\ng_list_free_full (g_steal_pointer (&list_of_owned_things), g_object_unref);\n\n=end comment\n"
"____EXAMPLE____039": "=begin comment\n<!-- language=\"C\" -->\n// Notice that it is initialized to the empty list.\nGList *list = NULL;\n\nlist = g_list_prepend (list, \"last\");\nlist = g_list_prepend (list, \"first\");\n\n=end comment\n"
"____EXAMPLE____040": "=begin comment\n<!-- language=\"C\" -->\nlist = g_list_remove_link (list, llink);\nfree_some_data_that_may_access_the_list_again (llink->data);\ng_list_free (llink);\n\n=end comment\n"
...