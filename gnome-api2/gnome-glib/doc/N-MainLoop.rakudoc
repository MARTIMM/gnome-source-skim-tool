# Package: Glib, C-Source: main
use v6.d;

=begin pod
=head1 Gnome::Glib::MainLoop
=end pod

#-------------------------------------------------------------------------------
#--[Class Description]----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod

![](images/mainloop.png)

=head1 Description

The `B<Gnome::Glib::N-MainLoop>` struct is an opaque data type
representing the main event loop of a GLib or GTK+ application.
=begin comment
=head2 Example
  … text …
  … example code …
=end comment

=end pod
#-------------------------------------------------------------------------------
#--[Record Structure]-----------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Record N-MainLoop

This is an opaque type of which fields are not available.

  class N-MainLoop:auth<github:MARTIMM>:api<2> is export is repr('CStruct') { }

=end pod


#-------------------------------------------------------------------------------
#--[Class Initialization]-------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Class initialization

=head2 new

=head3 :native-object

Create an object using a native object from elsewhere. See also B<Gnome::N::TopLevelSupportClass>.

  multi method new ( N-Object :$native-object! )


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 new-mainloop

Creates a new B<Gnome::Glib::N-MainLoop> structure.

=begin code
method new-mainloop ( CArray[N-MainContext] $context, Bool() $is-running --> Gnome::Glib::MainLoop )
=end code

=item $context; a B<Gnome::Glib::N-MainContext> (if C<Nil>, the default context will be used)..
=item $is-running; set to C<True> to indicate that the loop is running. This is not very important since calling g_main_loop_run() will set this to C<True> anyway..

=end pod

#-------------------------------------------------------------------------------
#--[Methods]--------------------------------------------------------------------
#-------------------------------------------------------------------------------

=begin pod
=head1 Methods
=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 get-context

Returns the B<Gnome::Glib::N-MainContext> of C<$loop>.

=begin code
method get-context (--> CArray[N-MainContext] )
=end code


Return value; the B<Gnome::Glib::N-MainContext> of C<$loop>. 


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 is-running

Checks to see if the main loop is currently being run via g_main_loop_run().

=begin code
method is-running (--> Bool )
=end code


Return value; C<True> if the mainloop is currently being run.. 


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 quit

Stops a B<Gnome::Glib::N-MainLoop> from running. Any calls to g_main_loop_run()
for the loop will return.

Note that sources that have already been dispatched when g_main_loop_quit() is called will still be executed.

=begin code
method quit ( )
=end code


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 ref

Increases the reference count on a B<Gnome::Glib::N-MainLoop> object by one.

=begin code
method ref (--> CArray[N-MainLoop] )
=end code


Return value;  C<$loop>. 


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 run

Runs a main loop until g_main_loop_quit() is called on the loop.
If this is called for the thread of the loop's B<Gnome::Glib::N-MainContext>,
it will process events from the loop, otherwise it will simply wait.

=begin code
method run ( )
=end code


=end pod

#-------------------------------------------------------------------------------
=begin pod
=head2 unref

Decreases the reference count on a B<Gnome::Glib::N-MainLoop> object by one. If the result is zero, free the loop and free all associated memory.

=begin code
method unref ( )
=end code


=end pod

