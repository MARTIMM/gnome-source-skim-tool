---
"____EXAMPLE____000": "=begin comment\n\n=head2 Uml Diagram\n![](plantuml/….svg)\n\n=end comment\n"
"____EXAMPLE____001": "=begin comment\n\n=head2 Example\n# Example use of module Gnome::Gio::SimpleAsyncResult\n\n=end comment\n"
"____EXAMPLE____002": "=begin comment\n\n=head2 Example\n# Example for new-simpleasyncresult\n\n=end comment\n"
"____EXAMPLE____003": "=begin comment\n\n=head2 Example\n# Example for new-error\n\n=end comment\n"
"____EXAMPLE____004": "=begin comment\n\n=head2 Example\n# Example for new-from-error\n\n=end comment\n"
"____EXAMPLE____005": "=begin comment\n\n=head2 Example\n# Example for new-take-error\n\n=end comment\n"
"____EXAMPLE____006": "=begin comment\n\n=head2 Example\n# Example for complete\n\n=end comment\n"
"____EXAMPLE____007": "=begin comment\n\n=head2 Example\n# Example for complete-in-idle\n\n=end comment\n"
"____EXAMPLE____008": "=begin comment\n\n=head2 Example\n# Example for get-op-res-gboolean\n\n=end comment\n"
"____EXAMPLE____009": "=begin comment\n\n=head2 Example\n# Example for get-op-res-gpointer\n\n=end comment\n"
"____EXAMPLE____010": "=begin comment\n\n=head2 Example\n# Example for get-op-res-gssize\n\n=end comment\n"
"____EXAMPLE____011": "=begin comment\n\n=head2 Example\n# Example for get-source-tag\n\n=end comment\n"
"____EXAMPLE____012": "=begin comment\n\n=head2 Example\n# Example for propagate-error\n\n=end comment\n"
"____EXAMPLE____013": "=begin comment\n\n=head2 Example\n# Example for run-in-thread\n\n=end comment\n"
"____EXAMPLE____014": "=begin comment\n\n=head2 Example\n# Example for set-check-cancellable\n\n=end comment\n"
"____EXAMPLE____015": "=begin comment\n\n=head2 Example\n# Example for set-error\n\n=end comment\n"
"____EXAMPLE____016": "=begin comment\n\n=head2 Example\n# Example for set-error-va\n\n=end comment\n"
"____EXAMPLE____017": "=begin comment\n\n=head2 Example\n# Example for set-from-error\n\n=end comment\n"
"____EXAMPLE____018": "=begin comment\n\n=head2 Example\n# Example for set-handle-cancellation\n\n=end comment\n"
"____EXAMPLE____019": "=begin comment\n\n=head2 Example\n# Example for set-op-res-gboolean\n\n=end comment\n"
"____EXAMPLE____020": "=begin comment\n\n=head2 Example\n# Example for set-op-res-gpointer\n\n=end comment\n"
"____EXAMPLE____021": "=begin comment\n\n=head2 Example\n# Example for set-op-res-gssize\n\n=end comment\n"
"____EXAMPLE____022": "=begin comment\n\n=head2 Example\n# Example for take-error\n\n=end comment\n"
"____EXAMPLE____023": "=begin comment\n\n=head2 Example\n# Example for is-valid\n\n=end comment\n"
"____EXAMPLE____024": "=begin comment\nstatic void\nbaked_cb (Cake    *cake,\n          gpointer user_data)\n{\n  // In this example, this callback is not given a reference to the cake,\n  // so the GSimpleAsyncResult has to take a reference to it.\n  GSimpleAsyncResult *result = user_data;\n\n  if (cake == NULL)\n    g_simple_async_result_set_error (result,\n                                     BAKER_ERRORS,\n                                     BAKER_ERROR_NO_FLOUR,\n                                     \"Go to the supermarket\");\n  else\n    g_simple_async_result_set_op_res_gpointer (result,\n                                               g_object_ref (cake),\n                                               g_object_unref);\n\n\n  // In this example, we assume that baked_cb is called as a callback from\n  // the mainloop, so it's safe to complete the operation synchronously here.\n  // If, however, _baker_prepare_cake () might call its callback without\n  // first returning to the mainloop — inadvisable, but some APIs do so —\n  // we would need to use g_simple_async_result_complete_in_idle().\n  g_simple_async_result_complete (result);\n  g_object_unref (result);\n}\n\nvoid\nbaker_bake_cake_async (Baker              *self,\n                       guint               radius,\n                       GAsyncReadyCallback callback,\n                       gpointer            user_data)\n{\n  GSimpleAsyncResult *simple;\n  Cake               *cake;\n\n  if (radius < 3)\n    {\n      g_simple_async_report_error_in_idle (G_OBJECT (self),\n                                           callback,\n                                           user_data,\n                                           BAKER_ERRORS,\n                                           BAKER_ERROR_TOO_SMALL,\n                                           \"%ucm radius cakes are silly\",\n                                           radius);\n      return;\n    }\n\n  simple = g_simple_async_result_new (G_OBJECT (self),\n                                      callback,\n                                      user_data,\n                                      baker_bake_cake_async);\n  cake = _baker_get_cached_cake (self, radius);\n\n  if (cake != NULL)\n    {\n      g_simple_async_result_set_op_res_gpointer (simple,\n                                                 g_object_ref (cake),\n                                                 g_object_unref);\n      g_simple_async_result_complete_in_idle (simple);\n      g_object_unref (simple);\n      // Drop the reference returned by _baker_get_cached_cake();\n      // the GSimpleAsyncResult has taken its own reference.\n      g_object_unref (cake);\n      return;\n    }\n\n  _baker_prepare_cake (self, radius, baked_cb, simple);\n}\n\nCake *\nbaker_bake_cake_finish (Baker        *self,\n                        GAsyncResult *result,\n                        GError      **error)\n{\n  GSimpleAsyncResult *simple;\n  Cake               *cake;\n\n  g_return_val_if_fail (g_simple_async_result_is_valid (result,\n                                                        G_OBJECT (self),\n                                                        baker_bake_cake_async),\n                        NULL);\n\n  simple = (GSimpleAsyncResult *) result;\n\n  if (g_simple_async_result_propagate_error (simple, error))\n    return NULL;\n\n  cake = CAKE (g_simple_async_result_get_op_res_gpointer (simple));\n  return g_object_ref (cake);\n}\n\n=end comment\n"
...