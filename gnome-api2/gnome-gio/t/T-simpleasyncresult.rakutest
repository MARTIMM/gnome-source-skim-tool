=comment Package: Gio, C-Source: simpleasyncresult
use v6.d;

#TL:1:Gnome::Gio::T-simpleasyncresult:
#-------------------------------------------------------------------------------
#--[Module Imports]-------------------------------------------------------------
#-------------------------------------------------------------------------------

use Test;
use NativeCall;


use Gnome::Gio::T-simpleasyncresult:api<2>;
use Gnome::Glib::N-Error:api<2>;
use Gnome::Glib::T-error:api<2>;
use Gnome::N::GlibToRakuTypes:api<2>;
use Gnome::N::N-Object:api<2>;
use Gnome::N::NativeLib:api<2>;
use Gnome::N::X:api<2>;




my Gnome::Gio::T-simpleasyncresult $simpleasyncresult .= new;
#-------------------------------------------------------------------------------
subtest 'Function tests', {
  with $simpleasyncresult {
    my gint $code;
    sub callback ( N-Object $source-object, N-Object $res, gpointer $data ) {}
    my Str $format;
    my GQuark $domain;
    my N-Object $error;
    my gpointer $user-data;
    my N-Object $object;


#`{{
    #TM:0:simple-async-report-error-in-idle()
    ok .simple-async-report-error-in-idle( $object, $callback, $user-data, $domain, $code, $format), '.simple-async-report-error-in-idle()';

    #TM:0:simple-async-report-gerror-in-idle()
    ok .simple-async-report-gerror-in-idle( $object, $callback, $user-data, $error), '.simple-async-report-gerror-in-idle()';

    #TM:0:simple-async-report-take-gerror-in-idle()
    ok .simple-async-report-take-gerror-in-idle( $object, $callback, $user-data, $error), '.simple-async-report-take-gerror-in-idle()';

}}
  }
};



#-------------------------------------------------------------------------------
done-testing;
=finish

